{
  "name": "mbpp_250_count_X",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_250_count_X.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup.toString.filter(_ == x.toString).length\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4fbu1el6.scala:6:28 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        tup.toString.filter(_ == x.toString).length\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m          Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4fbu1el6.scala:9:18 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m  |\u001b[0mRequired: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4fbu1el6.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4fbu1el6.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var i : Long = 0\n        while (i < tup) {\n            if (i % x == 0) count += 1\n            i += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp730m3996.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp730m3996.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp730m3996.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        return tup.toString.count(_ == x.toString.charAt(0))\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnc34wrt.scala:9:18 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m  |\u001b[0mRequired: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnc34wrt.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnc34wrt.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var i = 0\n        while (i < tup._1) {\n            if (tup._2(i) == x) count += 1\n            i += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmn4rb_ms.scala:8:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < tup._1) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmn4rb_ms.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (tup._2(i) == x) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmn4rb_ms.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmn4rb_ms.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmn4rb_ms.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var num : Long = tup\n        while (num > 0) {\n            if (num % 10 == x) count += 1\n            num /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfcgagoyp.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfcgagoyp.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfcgagoyp.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var i = 0\n        while (i < tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n            i += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq4jkvsf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq4jkvsf.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq4jkvsf.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup_copy : Long = tup\n        while (tup_copy > 0) {\n            if (tup_copy % 10 == x) count += 1\n            tup_copy /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ygfov0.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ygfov0.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ygfov0.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var cnt : Long = 0\n        var t : Long = tup\n        while (t > 0) {\n            var d : Long = t % 10\n            if (d == x) cnt += 1\n            t /= 10\n        }\n        return cnt\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpogtlfyb4.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpogtlfyb4.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpogtlfyb4.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18t48mis.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18t48mis.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18t48mis.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup2 : Long = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhcxbf5o.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhcxbf5o.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhcxbf5o.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup match {\n            case 0 => if (x == 0) 1 else 0\n            case _ => if (x == tup % 10) 1 + countX(tup / 10, x) else countX(tup / 10, x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ymhrx0m.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ymhrx0m.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ymhrx0m.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup_copy : Long = tup\n        while (tup_copy > 0) {\n            if (tup_copy % 10 == x) count += 1\n            tup_copy /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ygfov0.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ygfov0.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ygfov0.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4su9c7c9.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4su9c7c9.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4su9c7c9.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        if (tup == 0) 0\n        else if (tup % 10 == x) 1 + countX(tup / 10, x)\n        else countX(tup / 10, x)\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj67nd0nv.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj67nd0nv.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj67nd0nv.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var tup2 = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- tup.toString) {\n            if (i == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5xbskik4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5xbskik4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5xbskik4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_0gwdlk9.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup_copy : Long = tup\n        while (tup_copy > 0) {\n            if (tup_copy % 10 == x) count += 1\n            tup_copy /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15e0mt6n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15e0mt6n.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15e0mt6n.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmbz4zw5.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t != 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xn0_2k2.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xn0_2k2.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xn0_2k2.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuj9v6dn3.scala:9:18 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m  |\u001b[0mRequired: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuj9v6dn3.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuj9v6dn3.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18t48mis.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18t48mis.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp18t48mis.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var tup2 = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz44tckv8.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz44tckv8.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz44tckv8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz44tckv8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup != 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_lkwuqv6.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup match {\n            case 0 => if (x == 0) 1 else 0\n            case _ => countX(tup / 10, x) + (if (tup % 10 == x) 1 else 0)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuo3mfuzh.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuo3mfuzh.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuo3mfuzh.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        // Write your code here\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) {\n                count += 1\n            }\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124258,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7lixa2du.scala:12:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7lixa2du.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7lixa2du.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7lixa2du.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while(t > 0) {\n            if(t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70nl14im.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70nl14im.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70nl14im.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhcxbf5o.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhcxbf5o.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhcxbf5o.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7e3bm3e1.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        // Write your code here\n        var count = 0\n        var num = tup\n        while (num > 0) {\n            if (num % 10 == x) {\n                count += 1\n            }\n            num /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpei3eqv5f.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpei3eqv5f.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpei3eqv5f.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var cnt = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) cnt += 1\n        }\n        return cnt\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124259,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91dv97tl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91dv97tl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91dv97tl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup != 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124259,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxs1pah_q.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs1pah_q.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs1pah_q.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs1pah_q.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var tup1 = tup\n        while (tup1 > 0) {\n            if (tup1 % 10 == x) count += 1\n            tup1 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkgqy10a.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkgqy10a.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkgqy10a.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup match {\n            case 0 => 0\n            case _ => if (tup % 10 == x) 1 + countX(tup / 10, x) else countX(tup / 10, x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf8t5b5o.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf8t5b5o.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf8t5b5o.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8h1dmhh.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8h1dmhh.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8h1dmhh.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7e3bm3e1.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup match {\n            case 0 => 0\n            case _ => if (tup % 10 == x) 1 + countX(tup / 10, x) else countX(tup / 10, x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3s6wv20.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0h5usgww.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0h5usgww.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0h5usgww.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0h5usgww.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7e3bm3e1.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t != 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuym_erj7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuym_erj7.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuym_erj7.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpov4fdh7m.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpov4fdh7m.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpov4fdh7m.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzhf2jh21.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzhf2jh21.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzhf2jh21.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm4t36mt_.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm4t36mt_.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm4t36mt_.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup != 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_lkwuqv6.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var tup2 = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86mgz67u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86mgz67u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86mgz67u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var tup2 = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4c7exgx.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4c7exgx.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4c7exgx.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoxd_i4q2.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoxd_i4q2.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoxd_i4q2.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp704nok4r.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4c7exgx.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4c7exgx.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4c7exgx.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var t : Long = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpojryzhr1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpojryzhr1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpojryzhr1.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup != 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_lkwuqv6.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_lkwuqv6.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup_copy = tup\n        while (tup_copy > 0) {\n            if (tup_copy % 10 == x) count += 1\n            tup_copy /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha_k96ft.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha_k96ft.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha_k96ft.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup1 : Long = tup\n        while (tup1 > 0) {\n            if (tup1 % 10 == x) count += 1\n            tup1 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpksd7wg5p.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpksd7wg5p.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpksd7wg5p.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_0gwdlk9.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7e3bm3e1.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1a0ikg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup1 : Long = tup\n        while (tup1 > 0) {\n            if (tup1 % 10 == x) count += 1\n            tup1 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpksd7wg5p.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpksd7wg5p.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpksd7wg5p.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7e3bm3e1.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e3bm3e1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppmamg5jt.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmamg5jt.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokcmm3so.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup != 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124259,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxs1pah_q.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs1pah_q.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs1pah_q.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs1pah_q.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var i : Long = 0\n        while (i < tup) {\n            if (i % x == 0) count += 1\n            i += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz3bpdhcy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz3bpdhcy.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz3bpdhcy.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i).toString.toLong == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124268,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp36r05qcn.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp36r05qcn.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp36r05qcn.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t != 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xn0_2k2.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xn0_2k2.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xn0_2k2.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup1 : Long = tup\n        while (tup1 > 0) {\n            if (tup1 % 10 == x) count += 1\n            tup1 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124268,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyp_brpj8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyp_brpj8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyp_brpj8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbdsy_8n.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup2 : Long = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0h5usgww.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0h5usgww.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0h5usgww.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0h5usgww.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124268,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6jwmq53.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6jwmq53.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6jwmq53.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var tup1 = tup\n        while (tup1 > 0) {\n            if (tup1 % 10 == x) count += 1\n            tup1 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124268,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpblrhfpj5.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpblrhfpj5.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpblrhfpj5.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        var tup2 : Long = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1jcc5vw.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbwn2kqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        while (tup != 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124268,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1rikppis.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1rikppis.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1rikppis.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1rikppis.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7arq2nwr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup match {\n            case 0 => 0\n            case _ => if (tup % 10 == x) 1 + countX(tup / 10, x) else countX(tup / 10, x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        var tup2 = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnhdguhz.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppr9l8wq6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnkgnhw7.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124260,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm4t36mt_.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm4t36mt_.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm4t36mt_.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup match {\n            case 0 => 0\n            case _ => if (tup % 10 == x) 1 + countX(tup / 10, x) else countX(tup / 10, x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmposb89wcj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptn5hjtqg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        tup match {\n            case 0 => 0\n            case _ => if (tup % 10 == x) 1 + countX(tup / 10, x) else countX(tup / 10, x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124261,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c3sip9w.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_0gwdlk9.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0gwdlk9.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124262,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86mgz67u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86mgz67u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86mgz67u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510650,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo82g8wc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
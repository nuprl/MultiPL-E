{
  "name": "mbpp_787_text_match_three",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5f1oj1q4.scala:15)\n\tat Problem.main(tmp5f1oj1q4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5f1oj1q4.scala:15)\n\tat Problem.main(tmp5f1oj1q4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a\\\\bb\\\\bb\\\\b\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_ri2orvg.scala:15)\n\tat Problem.main(tmp_ri2orvg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x == \"abbb\"\n            case x if x.length > 4 => x.substring(0, 4) == \"abbb\" || textMatchThree(x.substring(1))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a\\\\bb\\\\bb\\\\b\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_ri2orvg.scala:15)\n\tat Problem.main(tmp_ri2orvg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpo3t5s4tw.scala:15)\n\tat Problem.main(tmpo3t5s4tw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text.matches(\".*a(bbb).*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length == 4 && x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpnswx3l82.scala:14)\n\tat Problem.main(tmpnswx3l82.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        (pattern findFirstIn text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpuovoronx.scala:15)\n\tat Problem.main(tmpuovoronx.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5f1oj1q4.scala:15)\n\tat Problem.main(tmp5f1oj1q4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a\\\\w\\\\w\\\\w\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b'\n            case x => x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' && textMatchThree(x.substring(1))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqk4egk19.scala:15)\n\tat Problem.main(tmpqk4egk19.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val regex = \"\"\".*a(bbb).*\"\"\".r\n        text match {\n            case regex(_*) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5f1oj1q4.scala:15)\n\tat Problem.main(tmp5f1oj1q4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case x if x.length > 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp2r8zwg4x.scala:17)\n\tat Problem.main(tmp2r8zwg4x.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x == \"abbb\"\n            case x => x.substring(0, 4) == \"abbb\" || textMatchThree(x.substring(1))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5f1oj1q4.scala:15)\n\tat Problem.main(tmp5f1oj1q4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx68j2mmg.scala:16)\n\tat Problem.main(tmpx68j2mmg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length == 4 => x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b'\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp661ijtnb.scala:14)\n\tat Problem.main(tmp661ijtnb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case s if s.length < 4 => false\n            case s if s.length == 4 => s.charAt(0) == 'a' && s.charAt(1) == 'b' && s.charAt(2) == 'b' && s.charAt(3) == 'b'\n            case s => s.charAt(0) == 'a' && s.charAt(1) == 'b' && s.charAt(2) == 'b' && s.charAt(3) == 'b' && textMatchThree(s.substring(1))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpi110eqp2.scala:15)\n\tat Problem.main(tmpi110eqp2.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length() < 4 => false\n            case x if x.length() == 4 => x.matches(\"a[b]{3}\")\n            case x if x.length() > 4 => x.matches(\"a[b]{3}.*\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpnatxnu5_.scala:16)\n\tat Problem.main(tmpnatxnu5_.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5f1oj1q4.scala:15)\n\tat Problem.main(tmp5f1oj1q4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        (pattern findFirstIn text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case \"a\" => false\n            case \"ab\" => false\n            case \"abb\" => false\n            case \"abbb\" => true\n            case _ => textMatchThree(text.substring(1))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.StringIndexOutOfBoundsException: begin 1, end 0, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\tat java.base/java.lang.String.substring(String.java:2707)\n\tat java.base/java.lang.String.substring(String.java:2680)\n\tat Problem$.textMatchThree(tmpump_emz5.scala:11)\n\tat Problem$.main(tmpump_emz5.scala:15)\n\tat Problem.main(tmpump_emz5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(b{3})\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text.matches(\"a*b{3}\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp1d0111bn.scala:11)\n\tat Problem.main(tmp1d0111bn.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x.startsWith(\"a\") && x.endsWith(\"bbb\")\n            case x if x.length > 4 => x.startsWith(\"a\") && x.substring(1).startsWith(\"bbb\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqr6nr4g9.scala:16)\n\tat Problem.main(tmpqr6nr4g9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmps8h_mrek.scala:16)\n\tat Problem.main(tmps8h_mrek.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length > 3 => x.substring(0, 4) == \"abbb\"\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp1qs_c6ae.scala:15)\n\tat Problem.main(tmp1qs_c6ae.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case s if s.length() >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp8mwxqein.scala:15)\n\tat Problem.main(tmp8mwxqein.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case s if s.contains(\"a\") && s.contains(\"bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x.startsWith(\"a\") && x.endsWith(\"bbb\")\n            case x if x.length > 4 => x.startsWith(\"a\") && x.endsWith(\"bbb\") && x.substring(1, x.length - 3).contains(\"a\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpz4q15vy5.scala:15)\n\tat Problem.main(tmpz4q15vy5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length() >= 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3_8e0emb.scala:15)\n\tat Problem.main(tmp3_8e0emb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case s if s.matches(\"a+b{3}\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_plmrbls.scala:14)\n\tat Problem.main(tmp_plmrbls.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpuovoronx.scala:15)\n\tat Problem.main(tmpuovoronx.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5f1oj1q4.scala:15)\n\tat Problem.main(tmp5f1oj1q4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"abbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a.{3}b\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length() >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgy2l9vbs.scala:15)\n\tat Problem.main(tmpgy2l9vbs.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a\\\\w{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text.matches(\"a+bbb\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp7hzzwnf2.scala:11)\n\tat Problem.main(tmp7hzzwnf2.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text.matches(\"a+b{3}\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmptbwfwpxw.scala:11)\n\tat Problem.main(tmptbwfwpxw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"abbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 && x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpwcq9jnlo.scala:15)\n\tat Problem.main(tmpwcq9jnlo.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text.matches(\".*a(bbb).*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length >= 4 => x.substring(0, 4) == \"abbb\"\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpm8mxu3xw.scala:15)\n\tat Problem.main(tmpm8mxu3xw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a.*b.*b.*b\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length() < 4 => false\n            case x if x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmphqzikdtm.scala:16)\n\tat Problem.main(tmphqzikdtm.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a\" + \"b\" * 3\n        text.matches(pattern)\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpl3daql8s.scala:12)\n\tat Problem.main(tmpl3daql8s.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        var pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val regex = \"a(bbb)\".r\n        regex.findFirstIn(text) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x == \"abbb\"\n            case x if x.length > 4 => x.substring(0, 4) == \"abbb\" || textMatchThree(x.substring(1))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        text match {\n            case x if x.matches(\"a+bbb\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpemi_ryep.scala:14)\n\tat Problem.main(tmpemi_ryep.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517203,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
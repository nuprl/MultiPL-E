{
  "name": "mbpp_640_remove_parenthesis",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to remove the parenthesis and what is inbetween them from a string.\n    def removeParenthesis(items : List[String]) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(removeParenthesis((List[String](\"python (chrome)\"))).equals((\"python\")));\n    assert(removeParenthesis((List[String](\"string(.abc)\"))).equals((\"string\")));\n    assert(removeParenthesis((List[String](\"alpha(num)\"))).equals((\"alpha\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        items.filter(x => x != \"(\" && x != \")\").mkString",
    "        var result = \"\"\n        for (item <- items) {\n            if (item.length > 0 && item(0) != '(' && item(item.length - 1) != ')') {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until items.length) {\n            if (items(i) != \"(\") {\n                result += items(i)\n            } else {\n                while (items(i) != \")\") {\n                    i += 1\n                }\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item != \"(\" && item != \")\") {\n                result += item\n            }\n        }\n        return result",
    "        items.filter(x => !x.contains(\"(\") && !x.contains(\")\")).mkString(\" \")",
    "        var result = \"\"\n        for (item <- items) {\n            if (item.contains(\"(\")) {\n                result += item.substring(0, item.indexOf(\"(\"))\n            } else {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item.length == 1) {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item.contains(\"(\")) {\n                result += item.substring(0, item.indexOf(\"(\"))\n            } else {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- items) {\n            if (i != \"(\" && i != \")\") {\n                result += i\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until items.length) {\n            if (items(i) != \"(\") {\n                result += items(i)\n            }\n            else {\n                var j = i + 1\n                while (items(j) != \")\") {\n                    j += 1\n                }\n                i = j\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item != \"(\" && item != \")\") {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item.contains(\"(\")) {\n                result += item.substring(0, item.indexOf(\"(\"))\n            } else {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item.contains(\"(\")) {\n                result += item.substring(0, item.indexOf(\"(\"))\n            } else {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item != \"(\") {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item != \"(\") {\n                if (item != \")\") {\n                    result += item\n                }\n            }\n        }\n        return result",
    "        items.mkString(\" \")",
    "        var result = \"\"\n        for (item <- items) {\n            if (item != \"(\" && item != \")\") {\n                result += item\n            }\n        }\n        return result",
    "        items.mkString(\" \")",
    "        var result = \"\"\n        for (item <- items) {\n            if (item.contains(\"(\")) {\n                result += item.substring(0, item.indexOf(\"(\"))\n            } else {\n                result += item\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (item <- items) {\n            if (item != \"(\" && item != \")\") {\n                result += item\n            }\n        }\n        return result"
  ]
}
{
  "name": "mbpp_781_count_divisors",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to check whether the count of divisors is even. https://www.w3resource.com/scalathon-exercises/basic/scalathon-basic-1-exercise-24.php\n    def countDivisors(n : Long) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_781_count_divisors.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countDivisors((10l)) == (true));\n    assert(countDivisors((100l)) == (false));\n    assert(countDivisors((125l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        count % 2 == 0",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        count % 2 == 0",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        count % 2 == 0",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        count % 2 == 0",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) count += 1\n        }\n        if (count % 2 == 0) true else false",
    "        var count = 0\n        for (i <- 1 to n.toInt) {\n            if (n % i == 0) {\n                count += 1\n            }\n        }\n        if (count % 2 == 0) true else false"
  ]
}
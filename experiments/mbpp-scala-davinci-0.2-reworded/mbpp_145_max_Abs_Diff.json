{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the maximum difference between any two elements in a given list.\n    def maxAbsDiff(arr : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxAbsDiff((2l, 1l, 5l, 3l)) == (4l));\n    assert(maxAbsDiff((9l, 3l, 2l, 5l, 1l)) == (8l));\n    assert(maxAbsDiff((3l, 2l, 1l)) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val arr1 = arr.toString.toList.map(_.toString.toInt)\n        val arr2 = arr1.sorted\n        val arr3 = arr2.reverse\n        val max = arr3.mkString.toLong\n        val min = arr2.mkString.toLong\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        return 0",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, abs(arr(i) - arr(j)))\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        return max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        var max = 0L\n        var min = 0L\n        for(i <- 0 until arr.length) {\n            if(arr(i) > max) max = arr(i)\n            if(arr(i) < min) min = arr(i)\n        }\n        return max - min",
    "        val s = arr.toString\n        val n = s.length\n        val m = pow(10, n - 1).toLong\n        val a = s.substring(0, 1).toLong\n        val b = s.substring(1, n).toLong\n        val c = s.substring(0, n - 1).toLong\n        val d = s.substring(n - 1, n).toLong\n        val e = a * m + b\n        val f = c * 10 + d\n        max(abs(e - f), maxAbsDiff(c))",
    "        var max = 0L\n        var min = 0L\n        for (i <- 0 until arr.size) {\n            max = max(arr(i), max)\n            min = min(arr(i), min)\n        }\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        var max = 0L\n        var min = 0L\n        for (i <- arr) {\n            if (i > max) max = i\n            if (i < min) min = i\n        }\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, abs(arr(i) - arr(j)))\n            }\n        }\n        max",
    "        val list = arr.toString.toList.map(_.asDigit)\n        val max = list.max\n        val min = list.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, abs(arr(i) - arr(j)))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val a = arr.toString.toList.map(_.toString.toInt)\n        val b = a.sorted\n        val c = a.sorted.reverse\n        val d = b.zip(c).map(x => abs(x._1 - x._2))\n        d.max",
    "        var max = 0L\n        var min = 0L\n        for (i <- arr) {\n            if (i > max) max = i\n            if (i < min) min = i\n        }\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(_.toLong).max\n        val min = arr.toString.split(\"\").map(_.toLong).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        var max = 0L\n        var min = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) max = arr(i)\n            if (arr(i) < min) min = arr(i)\n        }\n        max - min"
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to reverse only the vowels of a given string (where y is not a vowel).\n    def reverseVowels(str1 : String) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(reverseVowels((\"Python\")).equals((\"Python\")));\n    assert(reverseVowels((\"USA\")).equals((\"ASU\")));\n    assert(reverseVowels((\"ab\")).equals((\"ab\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toList\n        val str3 = str2.filter(vowels.contains(_))\n        val str4 = str2.map(x => if (vowels.contains(x)) str3.last else x)\n        str4.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        return str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i))) {\n                i += 1\n            } else if (!vowels.contains(str2(j))) {\n                j -= 1\n            } else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while(i < j) {\n            if(!vowels.contains(strArr(i))) {\n                i += 1\n            } else if(!vowels.contains(strArr(j))) {\n                j -= 1\n            } else {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        var str2 = \"\"\n        var vowels = List[Char]()\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                vowels = str1(i) :: vowels\n            }\n        }\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += vowels(j)\n                j += 1\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArray(i))) i += 1\n            while (i < j && !vowels.contains(strArray(j))) j -= 1\n            val temp = strArray(i)\n            strArray(i) = strArray(j)\n            strArray(j) = temp\n            i += 1\n            j -= 1\n        }\n        strArray.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(strArray(i)) && vowels.contains(strArray(j))) {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(strArray(i))) {\n                j -= 1\n            } else if (vowels.contains(strArray(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var str2 = \"\"\n        var stack = new Stack[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) stack.push(str(i))\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) str2 += stack.pop\n            else str2 += str(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += str1(i)\n            }\n        }\n        str2 = str2.reverse\n        var str3 = \"\"\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str3 += str2(j)\n                j += 1\n            } else {\n                str3 += str1(i)\n            }\n        }\n        str3",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i))) {\n                i += 1\n            } else if (!vowels.contains(str2(j))) {\n                j -= 1\n            } else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        var str2 = \"\"\n        var vowels = List[Char]()\n        for (c <- str1) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                vowels = c :: vowels\n            }\n        }\n        var i = 0\n        for (c <- str1) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                str2 += vowels(i)\n                i += 1\n            } else {\n                str2 += c\n            }\n        }\n        return str2",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n            }\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        var str2 = \"\"\n        var vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i).toString)) {\n                str2 = str1(i) + str2\n            }\n        }\n        var str3 = \"\"\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i).toString)) {\n                str3 = str3 + str2(j)\n                j += 1\n            } else {\n                str3 = str3 + str1(i)\n            }\n        }\n        return str3",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(strArray(i)) && vowels.contains(strArray(j))) {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            }\n            else if (vowels.contains(strArray(i))) {\n                j -= 1\n            }\n            else if (vowels.contains(strArray(j))) {\n                i += 1\n            }\n            else {\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        var str2 = \"\"\n        var vowels = List[Char]()\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                vowels = str1(i) :: vowels\n            }\n        }\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += vowels(j)\n                j += 1\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            if (vowels.contains(str1(i)) && vowels.contains(str1(j))) {\n                val temp = str1(i)\n                str2(i) = str1(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n            else if (vowels.contains(str1(i))) {\n                j -= 1\n            }\n            else if (vowels.contains(str1(j))) {\n                i += 1\n            }\n            else {\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var vowelIndices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelIndices += i\n            }\n        }\n        val reversedVowels = vowelIndices.reverse\n        var result = str\n        for (i <- 0 until vowelIndices.length) {\n            result = result.updated(vowelIndices(i), str(reversedVowels(i)))\n        }\n        result",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toList\n        var vowelList = List[Char]()\n        var vowelIndex = List[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelList = vowelList :+ str(i)\n                vowelIndex = vowelIndex :+ i\n            }\n        }\n        var result = str\n        for (i <- 0 until vowelList.length) {\n            result = result.updated(vowelIndex(i), vowelList(vowelList.length - 1 - i))\n        }\n        result.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        var str = str1\n        var vowels = List('a', 'e', 'i', 'o', 'u')\n        var vowelIndices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = str(vowelIndices(i))\n            str = str.updated(vowelIndices(i), str(vowelIndices(vowelIndices.length - 1 - i)))\n            str = str.updated(vowelIndices(vowelIndices.length - 1 - i), temp)\n        }\n        return str",
    "        var str = str1\n        var vowels = Array[Char]('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var vowelIndices = ArrayBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = str(vowelIndices(i))\n            str = str.updated(vowelIndices(i), str(vowelIndices(vowelIndices.length - 1 - i)))\n            str = str.updated(vowelIndices(vowelIndices.length - 1 - i), temp)\n        }\n        str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str_arr = str.toCharArray\n        var i = 0\n        var j = str_arr.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str_arr(i))) i += 1\n            while (i < j && !vowels.contains(str_arr(j))) j -= 1\n            if (i < j) {\n                val temp = str_arr(i)\n                str_arr(i) = str_arr(j)\n                str_arr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str_arr.mkString",
    "        val vowels = \"aeiou\"\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        var str2 = \"\"\n        var stack = new Stack[Char]()\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                stack.push(str1(i))\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str2 += stack.pop()\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(strArr(i))) {\n                i += 1\n            } else if (!vowels.contains(strArr(j))) {\n                j -= 1\n            } else {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(str(i)) && vowels.contains(str(j))) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n            else if (vowels.contains(str(i))) {\n                j -= 1\n            }\n            else if (vowels.contains(str(j))) {\n                i += 1\n            }\n            else {\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i))) i += 1\n            else if (!vowels.contains(str2(j))) j -= 1\n            else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = strArr.length - 1\n        while (i < j) {\n            if (!vowels.contains(strArr(i))) {\n                i += 1\n            } else if (!vowels.contains(strArr(j))) {\n                j -= 1\n            } else {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val tmp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = tmp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        var str = str1.toLowerCase\n        var vowels = \"aeiou\"\n        var vowelList = new ListBuffer[Char]()\n        var vowelIndex = new ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelList += str(i)\n                vowelIndex += i\n            }\n        }\n        var vowelListReverse = vowelList.reverse\n        for (i <- 0 until vowelIndex.length) {\n            str = str.updated(vowelIndex(i), vowelListReverse(i))\n        }\n        return str",
    "        val vowels = \"aeiouAEIOU\"\n        var str2 = \"\"\n        val str3 = str1.toCharArray\n        var stack = Stack[Char]()\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                stack.push(str1(i))\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str3(i) = stack.pop\n            }\n        }\n        str3.mkString",
    "        var str2 = \"\"\n        var str3 = \"\"\n        var str4 = \"\"\n        var str5 = \"\"\n        var str6 = \"\"\n        var str7 = \"\"\n        var str8 = \"\"\n        var str9 = \"\"\n        var str10 = \"\"\n        var str11 = \"\"\n        var str12 = \"\"\n        var str13 = \"\"\n        var str14 = \"\"\n        var str15 = \"\"\n        var str16 = \"\"\n        var str17 = \"\"\n        var str18 = \"\"\n        var str19 = \"\"\n        var str20 = \"\"\n        var str21 = \"\"\n        var str22 = \"\"\n        var str23 = \"\"\n        var str24 = \"\"\n        var str25 = \"\"\n        var str26 = \"\"\n        var str27 = \"\"\n        var str28 = \"\"\n        var str29 = \"\"\n        var str30 = \"\"\n        var str31 = \"\"\n        var str32 = \"\"\n        var str33 = \"\"\n        var str34 = \"\"\n        var str35 = \"\"\n        var str36 = \"\"\n        var str37 = \"\"\n        var str38 = \"\"\n        var str39 = \"\"\n        var str40 = \"\"\n        var str41 = \"\"\n        var str42 = \"\"\n        var str43 = \"\"\n        var str44 = \"\"\n        var str45 = \"\"\n        var str46 = \"\"\n        var str47 = \"\"\n        var str48 = \"\"\n        var str49 = \"\"\n        var str50 = \"\"\n        var str51 = \"\"\n        var str52 = \"\"\n        var str53 = \"\"\n        var str54 = \"\"\n        var str55 = \"\"\n        var str56 = \"\"\n        var str57 = \"\"\n        var str58 = \"\"\n        var str59 = \"\"\n        var str60 = \"\"\n        var str61 = \"\"\n        var str62 = \"\"\n        var str63 = \"\"\n        var str64 = \"\"\n        var str65 = \"\"\n        var str66 = \"\"\n        var str67 = \"\"\n        var str68 = \"\"\n        var str69 = \"\"\n        var str70 = \"\"\n        var str71 = \"\"\n        var str72 = \"\"\n        var str73 = \"\"\n        var str74 = \"\"\n",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArr(i))) i += 1\n            while (i < j && !vowels.contains(strArr(j))) j -= 1\n            if (i < j) {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(strArray(i))) {\n                i += 1\n            } else if (!vowels.contains(strArray(j))) {\n                j -= 1\n            } else {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        var str = str1.toLowerCase\n        var vowels = List('a', 'e', 'i', 'o', 'u')\n        var str2 = \"\"\n        var stack = new Stack[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                stack.push(str(i))\n            }\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                str2 += stack.pop\n            } else {\n                str2 += str(i)\n            }\n        }\n        str2",
    "        var str = str1.toLowerCase\n        var vowels = \"aeiou\"\n        var vowelList = List[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelList = str(i) :: vowelList\n        }\n        var result = \"\"\n        var vowelIndex = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                result += vowelList(vowelIndex)\n                vowelIndex += 1\n            } else result += str(i)\n        }\n        result",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 = str1(i) + str2\n            }\n        }\n        var str3 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str3 += str2(0)\n                str2 = str2.substring(1)\n            } else {\n                str3 += str1(i)\n            }\n        }\n        return str3",
    "        var str = str1\n        var vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i).toString)) {\n                vowelIndices += i\n            }\n        }\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = str(vowelIndices(i))\n            str = str.updated(vowelIndices(i), str(vowelIndices(vowelIndices.length - 1 - i))).mkString\n            str = str.updated(vowelIndices(vowelIndices.length - 1 - i), temp).mkString\n        }\n        str",
    "        var str2 = \"\"\n        var vowels = List[Char]('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        for (i <- 0 to str1.length - 1) {\n            if (vowels.contains(str1(i))) {\n                str2 = str1(i) + str2\n            }\n        }\n        var str3 = \"\"\n        var j = 0\n        for (i <- 0 to str1.length - 1) {\n            if (vowels.contains(str1(i))) {\n                str3 += str2(j)\n                j += 1\n            } else {\n                str3 += str1(i)\n            }\n        }\n        str3",
    "        var str = str1.toLowerCase\n        var vowels = List[Char]('a', 'e', 'i', 'o', 'u')\n        var vowelIndices = List[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices = i :: vowelIndices\n        }\n        var reversedVowels = vowelIndices.reverse\n        var reversedStr = \"\"\n        var vowelIndex = 0\n        for (i <- 0 until str.length) {\n            if (vowelIndices.contains(i)) {\n                reversedStr += str(reversedVowels(vowelIndex))\n                vowelIndex += 1\n            } else {\n                reversedStr += str(i)\n            }\n        }\n        reversedStr",
    "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str2 = str1.toList\n        val str3 = str2.filter(vowels.contains(_))\n        val str4 = str2.filterNot(vowels.contains(_))\n        val str5 = str3.reverse\n        val str6 = str4 ++ str5\n        str6.mkString",
    "        var str2 = \"\"\n        var vowels = List[Char]()\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                vowels = str1(i) :: vowels\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += vowels.head\n                vowels = vowels.tail\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        var str3 = \"\"\n        var str4 = \"\"\n        var str5 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += str1(i)\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str3 += str2.last\n                str2 = str2.dropRight(1)\n            }\n            else {\n                str3 += str1(i)\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'A' || str1(i) == 'E' || str1(i) == 'I' || str1(i) == 'O' || str1(i) == 'U') {\n                str4 += str1(i)\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'A' || str1(i) == 'E' || str1(i) == 'I' || str1(i) == 'O' || str1(i) == 'U') {\n                str5 += str4.last\n                str4 = str4.dropRight(1)\n            }\n            else {\n                str5 += str3(i)\n            }\n        }\n        return str5",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) str2 += str(i)\n        }\n        str2 = str2.reverse\n        var j = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                str3 += str2(j)\n                j += 1\n            } else str3 += str(i)\n        }\n        str3",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArr(i))) i += 1\n            while (i < j && !vowels.contains(strArr(j))) j -= 1\n            if (i < j) {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var stack = new Stack[Char]\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                stack.push(str(i))\n            }\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                result += stack.pop\n            } else {\n                result += str(i)\n            }\n        }\n        result",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i).toLower)) i += 1\n            else if (!vowels.contains(str2(j).toLower)) j -= 1\n            else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        if (str1.length == 0) return str1\n        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(str(i)) && vowels.contains(str(j))) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(str(i))) {\n                j -= 1\n            } else if (vowels.contains(str(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        var str = str1.toLowerCase()\n        var vowels = \"aeiou\"\n        var vowels_list = List[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowels_list = vowels_list :+ str(i)\n        }\n        vowels_list = vowels_list.reverse\n        var result = \"\"\n        var j = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                result += vowels_list(j)\n                j += 1\n            } else result += str(i)\n        }\n        result",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(strArray(i)) && vowels.contains(strArray(j))) {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            }\n            else if (vowels.contains(strArray(i))) {\n                j -= 1\n            }\n            else if (vowels.contains(strArray(j))) {\n                i += 1\n            }\n            else {\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var str2 = \"\"\n        var stack = new Stack[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                stack.push(str(i))\n            }\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                str2 += stack.pop\n            } else {\n                str2 += str(i)\n            }\n        }\n        str2",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(strArray(i)) && vowels.contains(strArray(j))) {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(strArray(i))) {\n                j -= 1\n            } else if (vowels.contains(strArray(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        val vowels = \"aeiou\"\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i).toLower)) i += 1\n            while (i < j && !vowels.contains(str2(j).toLower)) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            val temp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = temp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var left = 0\n        var right = strArr.length - 1\n        while (left < right) {\n            while (left < right && !vowels.contains(strArr(left))) left += 1\n            while (left < right && !vowels.contains(strArr(right))) right -= 1\n            if (left < right) {\n                val temp = strArr(left)\n                strArr(left) = strArr(right)\n                strArr(right) = temp\n                left += 1\n                right -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            val temp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = temp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var result = \"\"\n        var vowelStack = new Stack[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelStack.push(str(i))\n            }\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                result += vowelStack.pop\n            } else {\n                result += str(i)\n            }\n        }\n        result",
    "        val vowels = \"aeiouAEIOU\"\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var left = 0\n        var right = str2.length - 1\n        while (left < right) {\n            while (left < right && !vowels.contains(str2(left))) left += 1\n            while (left < right && !vowels.contains(str2(right))) right -= 1\n            val temp = str2(left)\n            str2(left) = str2(right)\n            str2(right) = temp\n            left += 1\n            right -= 1\n        }\n        str2.mkString",
    "        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += str1(i)\n            }\n        }\n        str2 = str2.reverse\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str3 += str2(j)\n                j += 1\n            } else {\n                str3 += str1(i)\n            }\n        }\n        return str3",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i).toLower)) i += 1\n            while (i < j && !vowels.contains(str(j).toLower)) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i).toLower)) i += 1\n            while (i < j && !vowels.contains(str(j).toLower)) j -= 1\n            if (i < j) {\n                val tmp = str(i)\n                str(i) = str(j)\n                str(j) = tmp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n            }\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toList\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        var str = str1.toLowerCase\n        var vowels = \"aeiou\"\n        var vowelIndices = new ArrayBuffer[Int]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        var str2 = str.toCharArray\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = str2(vowelIndices(i))\n            str2(vowelIndices(i)) = str2(vowelIndices(vowelIndices.length - 1 - i))\n            str2(vowelIndices(vowelIndices.length - 1 - i)) = temp\n        }\n        return str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(strArr(i))) {\n                i += 1\n            } else if (!vowels.contains(strArr(j))) {\n                j -= 1\n            } else {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val tmp = str(i)\n                str(i) = str(j)\n                str(j) = tmp\n            }\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            if (vowels.contains(str2(i))) {\n                while (!vowels.contains(str2(j))) j -= 1\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                j -= 1\n            }\n            i += 1\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(strArr(i))) {\n                i += 1\n            } else if (!vowels.contains(strArr(j))) {\n                j -= 1\n            } else {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = str1.filter(c => c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        val vowelsReversed = vowels.reverse\n        val str1Array = str1.toCharArray\n        for (i <- 0 until str1Array.length) {\n            if (str1Array(i) == 'a' || str1Array(i) == 'e' || str1Array(i) == 'i' || str1Array(i) == 'o' || str1Array(i) == 'u') {\n                str1Array(i) = vowelsReversed.charAt(0)\n                vowelsReversed.substring(1)\n            }\n        }\n        str1Array.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toList\n        val str3 = str2.filter(vowels.contains(_))\n        val str4 = str2.filterNot(vowels.contains(_))\n        val str5 = str3.reverse\n        val str6 = str4 ++ str5\n        str6.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = strArray.length - 1\n        while (i < j) {\n            if (vowels.contains(strArray(i)) && vowels.contains(strArray(j))) {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(strArray(i))) {\n                j -= 1\n            } else if (vowels.contains(strArray(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        var str = str1.toLowerCase()\n        var vowels = Array('a', 'e', 'i', 'o', 'u')\n        var vowelStack = new Stack[Char]()\n        var strArray = str.toCharArray()\n        for (i <- 0 until strArray.length) {\n            if (vowels.contains(strArray(i))) vowelStack.push(strArray(i))\n        }\n        for (i <- 0 until strArray.length) {\n            if (vowels.contains(strArray(i))) strArray(i) = vowelStack.pop()\n        }\n        return strArray.mkString",
    "        var str2 = \"\"\n        var str3 = \"\"\n        var str4 = \"\"\n        var str5 = \"\"\n        var str6 = \"\"\n        var str7 = \"\"\n        var str8 = \"\"\n        var str9 = \"\"\n        var str10 = \"\"\n        var str11 = \"\"\n        var str12 = \"\"\n        var str13 = \"\"\n        var str14 = \"\"\n        var str15 = \"\"\n        var str16 = \"\"\n        var str17 = \"\"\n        var str18 = \"\"\n        var str19 = \"\"\n        var str20 = \"\"\n        var str21 = \"\"\n        var str22 = \"\"\n        var str23 = \"\"\n        var str24 = \"\"\n        var str25 = \"\"\n        var str26 = \"\"\n        var str27 = \"\"\n        var str28 = \"\"\n        var str29 = \"\"\n        var str30 = \"\"\n        var str31 = \"\"\n        var str32 = \"\"\n        var str33 = \"\"\n        var str34 = \"\"\n        var str35 = \"\"\n        var str36 = \"\"\n        var str37 = \"\"\n        var str38 = \"\"\n        var str39 = \"\"\n        var str40 = \"\"\n        var str41 = \"\"\n        var str42 = \"\"\n        var str43 = \"\"\n        var str44 = \"\"\n        var str45 = \"\"\n        var str46 = \"\"\n        var str47 = \"\"\n        var str48 = \"\"\n        var str49 = \"\"\n        var str50 = \"\"\n        var str51 = \"\"\n        var str52 = \"\"\n        var str53 = \"\"\n        var str54 = \"\"\n        var str55 = \"\"\n        var str56 = \"\"\n        var str57 = \"\"\n        var str58 = \"\"\n        var str59 = \"\"\n        var str60 = \"\"\n        var str61 = \"\"\n        var str62 = \"\"\n        var str63 = \"\"\n        var str64 = \"\"\n        var str65 = \"\"\n        var str66 = \"\"\n        var str67 = \"\"\n        var str68 = \"\"\n        var str69 = \"\"\n        var str70 = \"\"\n        var str71 = \"\"\n        var str72 = \"\"\n        var str73 = \"\"\n        var str74 = \"\"\n",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toList\n        val str3 = str2.filter(vowels.contains(_))\n        val str4 = str3.reverse\n        val str5 = str2.filter(!vowels.contains(_))\n        val str6 = str5.zip(str4)\n        val str7 = str6.map(x => x._1 + x._2)\n        val str8 = str7.mkString\n        str8",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var left = 0\n        var right = str.length - 1\n        while (left < right) {\n            if (!vowels.contains(str(left))) {\n                left += 1\n            } else if (!vowels.contains(str(right))) {\n                right -= 1\n            } else {\n                val temp = str(left)\n                str(left) = str(right)\n                str(right) = temp\n                left += 1\n                right -= 1\n            }\n        }\n        str.mkString",
    "        var str2 = \"\"\n        var str3 = \"\"\n        var str4 = \"\"\n        var str5 = \"\"\n        var str6 = \"\"\n        var str7 = \"\"\n        var str8 = \"\"\n        var str9 = \"\"\n        var str10 = \"\"\n        var str11 = \"\"\n        var str12 = \"\"\n        var str13 = \"\"\n        var str14 = \"\"\n        var str15 = \"\"\n        var str16 = \"\"\n        var str17 = \"\"\n        var str18 = \"\"\n        var str19 = \"\"\n        var str20 = \"\"\n        var str21 = \"\"\n        var str22 = \"\"\n        var str23 = \"\"\n        var str24 = \"\"\n        var str25 = \"\"\n        var str26 = \"\"\n        var str27 = \"\"\n        var str28 = \"\"\n        var str29 = \"\"\n        var str30 = \"\"\n        var str31 = \"\"\n        var str32 = \"\"\n        var str33 = \"\"\n        var str34 = \"\"\n        var str35 = \"\"\n        var str36 = \"\"\n        var str37 = \"\"\n        var str38 = \"\"\n        var str39 = \"\"\n        var str40 = \"\"\n        var str41 = \"\"\n        var str42 = \"\"\n        var str43 = \"\"\n        var str44 = \"\"\n        var str45 = \"\"\n        var str46 = \"\"\n        var str47 = \"\"\n        var str48 = \"\"\n        var str49 = \"\"\n        var str50 = \"\"\n        var str51 = \"\"\n        var str52 = \"\"\n        var str53 = \"\"\n        var str54 = \"\"\n        var str55 = \"\"\n        var str56 = \"\"\n        var str57 = \"\"\n        var str58 = \"\"\n        var str59 = \"\"\n        var str60 = \"\"\n        var str61 = \"\"\n        var str62 = \"\"\n        var str63 = \"\"\n        var str64 = \"\"\n        var str65 = \"\"\n        var str66 = \"\"\n        var str67 = \"\"\n        var str68 = \"\"\n        var str69 = \"\"\n        var str70 = \"\"\n        var str71 = \"\"\n        var str72 = \"\"\n        var str73 = \"\"\n        var str74 = \"\"\n",
    "        var str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            if (isVowel(str2(i)) && isVowel(str2(j))) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            } else if (isVowel(str2(i))) {\n                j -= 1\n            } else if (isVowel(str2(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val str = str1.toLowerCase\n        var str2 = \"\"\n        var vowelStack = new Stack[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i).toString)) vowelStack.push(str(i))\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i).toString)) str2 += vowelStack.pop\n            else str2 += str(i)\n        }\n        str2",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var vowelStack = new Stack[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelStack.push(str(i))\n        }\n        var str2 = \"\"\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) str2 += vowelStack.pop\n            else str2 += str(i)\n        }\n        str2",
    "        val vowels = \"aeiouAEIOU\"\n        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str2 = str1(i) + str2\n            }\n        }\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str3 += str2(j)\n                j += 1\n            } else {\n                str3 += str1(i)\n            }\n        }\n        str3",
    "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        val vowelIndices = new ArrayBuffer[Int]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        for (i <- 0 until vowelIndices.length / 2) {\n            val temp = strArr(vowelIndices(i))\n            strArr(vowelIndices(i)) = strArr(vowelIndices(vowelIndices.length - 1 - i))\n            strArr(vowelIndices(vowelIndices.length - 1 - i)) = temp\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            val temp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = temp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i))) {\n                i += 1\n            } else if (!vowels.contains(str2(j))) {\n                j -= 1\n            } else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        var str = str1.toLowerCase\n        var vowels = \"aeiou\"\n        var result = \"\"\n        var stack = new Stack[Char]()\n        for (i <- 0 to str.length - 1) {\n            if (vowels.contains(str(i))) stack.push(str(i))\n        }\n        for (i <- 0 to str.length - 1) {\n            if (vowels.contains(str(i))) result += stack.pop\n            else result += str(i)\n        }\n        return result",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(str2(i)) && vowels.contains(str2(j))) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(str2(i))) {\n                j -= 1\n            } else if (vowels.contains(str2(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str2 += str1(i)\n            }\n        }\n        str2 = str2.reverse\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str3 += str2(j)\n                j += 1\n            }\n            else {\n                str3 += str1(i)\n            }\n        }\n        str3",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var str2 = \"\"\n        var stack = new Stack[Char]()\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                stack.push(str1(i))\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str2 += stack.pop()\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        var vowels = ArrayBuffer[Char]()\n        for (c <- str1) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                vowels += c\n            }\n        }\n        var j = vowels.length - 1\n        for (c <- str1) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                str2 += vowels(j)\n                j -= 1\n            } else {\n                str2 += c\n            }\n        }\n        return str2",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            val tmp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = tmp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArr(i))) i += 1\n            while (i < j && !vowels.contains(strArr(j))) j -= 1\n            if (i < j) {\n                val tmp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = tmp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            }\n            else if (!vowels.contains(str(j))) {\n                j -= 1\n            }\n            else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str_vowels = str.filter(vowels.contains(_))\n        val str_vowels_reversed = str_vowels.reverse\n        val str_vowels_reversed_list = str_vowels_reversed.toList\n        val str_list = str.toList\n        val str_list_vowels = str_list.map(x => if (vowels.contains(x)) str_vowels_reversed_list.head else x)\n        str_list_vowels.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        var str = str1\n        var vowels = \"aeiouAEIOU\"\n        var vowel_indices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowel_indices += i\n            }\n        }\n        for (i <- 0 until vowel_indices.length / 2) {\n            var temp = str(vowel_indices(i))\n            str = str.updated(vowel_indices(i), str(vowel_indices(vowel_indices.length - 1 - i)))\n            str = str.updated(vowel_indices(vowel_indices.length - 1 - i), temp)\n        }\n        str",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toList\n        val str3 = str2.filter(vowels.contains(_))\n        val str4 = str2.filter(!vowels.contains(_))\n        val str5 = str3.reverse\n        val str6 = str5 ++ str4\n        str6.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArray(i))) i += 1\n            while (i < j && !vowels.contains(strArray(j))) j -= 1\n            val temp = strArray(i)\n            strArray(i) = strArray(j)\n            strArray(j) = temp\n            i += 1\n            j -= 1\n        }\n        strArray.mkString",
    "        var str = str1.toLowerCase\n        var vowels = List('a', 'e', 'i', 'o', 'u')\n        var vowelIndices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        var reversedVowels = vowelIndices.reverse\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (vowelIndices.contains(i)) result += str(reversedVowels.head)\n            else result += str(i)\n        }\n        result",
    "        var str2 = \"\"\n        var vowels = List[Char]()\n        for (c <- str1) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                vowels = c :: vowels\n            }\n        }\n        var i = 0\n        for (c <- str1) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                str2 += vowels(i)\n                i += 1\n            } else {\n                str2 += c\n            }\n        }\n        return str2",
    "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(strArr(i)) && vowels.contains(strArr(j))) {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(strArr(i))) {\n                j -= 1\n            } else if (vowels.contains(strArr(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        var str2 = \"\"\n        var vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i).toString)) {\n                str2 = str1(i) + str2\n            }\n        }\n        var str3 = \"\"\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i).toString)) {\n                str3 += str2(j)\n                j += 1\n            } else {\n                str3 += str1(i)\n            }\n        }\n        str3",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var vowelStack = new Stack[Char]\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelStack.push(str(i))\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) result += vowelStack.pop\n            else result += str(i)\n        }\n        result",
    "        val vowels = \"aeiouAEIOU\"\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var result = \"\"\n        var vowelStack = Stack[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelStack.push(str(i))\n            }\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                result += vowelStack.pop\n            } else {\n                result += str(i)\n            }\n        }\n        result",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = strArray.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArray(i))) i += 1\n            while (i < j && !vowels.contains(strArray(j))) j -= 1\n            if (i < j) {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n            }\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                str2 += str(i)\n            }\n        }\n        str2 = str2.reverse\n        var j = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                str3 += str2(j)\n                j += 1\n            } else {\n                str3 += str(i)\n            }\n        }\n        str3",
    "        var str = str1.toLowerCase\n        var vowels = List('a', 'e', 'i', 'o', 'u')\n        var vowelIndices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        var str2 = str\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = str2(vowelIndices(i))\n            str2 = str2.updated(vowelIndices(i), str2(vowelIndices(vowelIndices.length - 1 - i)))\n            str2 = str2.updated(vowelIndices(vowelIndices.length - 1 - i), temp)\n        }\n        str2",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toList\n        val str3 = str2.filter(vowels.contains(_))\n        val str4 = str2.filter(!vowels.contains(_))\n        val str5 = str3.reverse\n        val str6 = str4.mkString + str5.mkString\n        str6",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val sb = new StringBuilder\n        val stack = new Stack[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                stack.push(str(i))\n            }\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                sb.append(stack.pop)\n            } else {\n                sb.append(str(i))\n            }\n        }\n        sb.toString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0; var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var left = 0\n        var right = str.length - 1\n        while (left < right) {\n            if (vowels.contains(strArr(left)) && vowels.contains(strArr(right))) {\n                val temp = strArr(left)\n                strArr(left) = strArr(right)\n                strArr(right) = temp\n                left += 1\n                right -= 1\n            } else if (vowels.contains(strArr(left))) {\n                right -= 1\n            } else if (vowels.contains(strArr(right))) {\n                left += 1\n            } else {\n                left += 1\n                right -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        return str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            val tmp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = tmp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(strArr(i)) && vowels.contains(strArr(j))) {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n            else if (vowels.contains(strArr(i))) {\n                j -= 1\n            }\n            else if (vowels.contains(strArr(j))) {\n                i += 1\n            }\n            else {\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase()\n        val strArray = str.toCharArray()\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArray(i))) i += 1\n            while (i < j && !vowels.contains(strArray(j))) j -= 1\n            val temp = strArray(i)\n            strArray(i) = strArray(j)\n            strArray(j) = temp\n            i += 1\n            j -= 1\n        }\n        strArray.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str = str1.toList\n        var vowelIndices = List[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices = i :: vowelIndices\n        }\n        var reversedVowels = List[Char]()\n        for (i <- vowelIndices) {\n            reversedVowels = str(i) :: reversedVowels\n        }\n        var result = str\n        for (i <- 0 until vowelIndices.length) {\n            result = result.updated(vowelIndices(i), reversedVowels(i))\n        }\n        result.mkString",
    "        var str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            if (!isVowel(str2(i))) {\n                i += 1\n            } else if (!isVowel(str2(j))) {\n                j -= 1\n            } else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        return str2.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var str2 = \"\"\n        var stack = new Stack[Char]\n        for (c <- str1) {\n            if (vowels.contains(c)) {\n                stack.push(c)\n            }\n        }\n        for (c <- str1) {\n            if (vowels.contains(c)) {\n                str2 += stack.pop\n            } else {\n                str2 += c\n            }\n        }\n        str2",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toList\n        val str3 = str2.filter(vowels.contains(_))\n        val str4 = str2.filter(!vowels.contains(_))\n        val str5 = str3.reverse\n        val str6 = str4 ::: str5\n        str6.mkString",
    "        var str = str1\n        var vowels = List('a', 'e', 'i', 'o', 'u')\n        var vowelIndex = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndex += i\n        }\n        var vowelIndexLength = vowelIndex.length\n        for (i <- 0 until vowelIndexLength / 2) {\n            var temp = str(vowelIndex(i))\n            str = str.updated(vowelIndex(i), str(vowelIndex(vowelIndexLength - 1 - i)))\n            str = str.updated(vowelIndex(vowelIndexLength - 1 - i), temp)\n        }\n        str",
    "        var str = str1.toLowerCase\n        var vowels = List[Char]('a', 'e', 'i', 'o', 'u')\n        var vowelIndices = List[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices = i :: vowelIndices\n        }\n        var strArray = str.toCharArray\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = strArray(vowelIndices(i))\n            strArray(vowelIndices(i)) = strArray(vowelIndices(vowelIndices.length - 1 - i))\n            strArray(vowelIndices(vowelIndices.length - 1 - i)) = temp\n        }\n        return strArray.mkString",
    "        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += str1(i)\n            }\n        }\n        str2 = str2.reverse\n        var j = 0\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str3 += str2(j)\n                j += 1\n            }\n            else {\n                str3 += str1(i)\n            }\n        }\n        return str3",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while(i < j) {\n            while(i < j && !vowels.contains(str2(i))) i += 1\n            while(i < j && !vowels.contains(str2(j))) j -= 1\n            val temp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = temp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        var str = str1.toLowerCase\n        var vowels = \"aeiou\"\n        var vowelIndices = ArrayBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        var str2 = str.toCharArray\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = str2(vowelIndices(i))\n            str2(vowelIndices(i)) = str2(vowelIndices(vowelIndices.length - 1 - i))\n            str2(vowelIndices(vowelIndices.length - 1 - i)) = temp\n        }\n        return str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = strArray.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArray(i))) i += 1\n            while (i < j && !vowels.contains(strArray(j))) j -= 1\n            val temp = strArray(i)\n            strArray(i) = strArray(j)\n            strArray(j) = temp\n            i += 1\n            j -= 1\n        }\n        strArray.mkString",
    "        val vowels = Array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        var str2 = \"\"\n        var vowels = List('a', 'e', 'i', 'o', 'u')\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str2 = str1(i) + str2\n            }\n        }\n        var str3 = \"\"\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (vowels.contains(str1(i))) {\n                str3 += str2(j)\n                j += 1\n            } else {\n                str3 += str1(i)\n            }\n        }\n        str3",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        var str = str1.toLowerCase\n        var vowels = \"aeiou\"\n        var vowelList = new ListBuffer[Char]\n        var result = new ListBuffer[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelList += str(i)\n            }\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                result += vowelList.remove(vowelList.length - 1)\n            } else {\n                result += str(i)\n            }\n        }\n        return result.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var result = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                result(i) = str(j)\n                result(j) = str(i)\n                i += 1\n                j -= 1\n            }\n        }\n        result.mkString",
    "        // Write your code here\n        var str = str1.toLowerCase()\n        var vowels = \"aeiou\"\n        var vowelIndices = ArrayBuffer[Int]()\n        var vowelChars = ArrayBuffer[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelIndices += i\n                vowelChars += str(i)\n            }\n        }\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (vowelIndices.contains(i)) {\n                result += vowelChars.remove(vowelChars.length - 1)\n            } else {\n                result += str(i)\n            }\n        }\n        result",
    "        val vowels = List('a','e','i','o','u','A','E','I','O','U')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            }\n            else if (!vowels.contains(str(j))) {\n                j -= 1\n            }\n            else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var vowelStack = Stack[Char]()\n        for (c <- str) {\n            if (vowels.contains(c)) vowelStack.push(c)\n        }\n        var result = \"\"\n        for (c <- str) {\n            if (vowels.contains(c)) result += vowelStack.pop\n            else result += c\n        }\n        result",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            val tmp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = tmp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        var str = str1.toLowerCase\n        var vowels = List[Char]('a', 'e', 'i', 'o', 'u')\n        var vowelList = new ListBuffer[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelList += str(i)\n        }\n        var vowelListReversed = vowelList.reverse\n        var strReversed = new StringBuilder\n        var j = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                strReversed += vowelListReversed(j)\n                j += 1\n            } else {\n                strReversed += str(i)\n            }\n        }\n        strReversed.toString",
    "        val vowels = \"aeiouAEIOU\"\n        var str2 = str1\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            if (!vowels.contains(str1(i))) {\n                i += 1\n            } else if (!vowels.contains(str1(j))) {\n                j -= 1\n            } else {\n                str2 = str2.updated(i, str1(j)).updated(j, str1(i))\n                i += 1\n                j -= 1\n            }\n        }\n        str2",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var vowelIndices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        var result = str\n        for (i <- 0 until vowelIndices.length / 2) {\n            val temp = result(vowelIndices(i))\n            result = result.updated(vowelIndices(i), result(vowelIndices(vowelIndices.length - 1 - i)))\n            result = result.updated(vowelIndices(vowelIndices.length - 1 - i), temp)\n        }\n        result",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i))) i += 1\n            else if (!vowels.contains(str2(j))) j -= 1\n            else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i).toLower)) i += 1\n            while (i < j && !vowels.contains(str(j).toLower)) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i))) {\n                i += 1\n            } else if (!vowels.contains(str2(j))) {\n                j -= 1\n            } else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toList\n        var vowelList = List[Char]()\n        for (i <- 0 until str2.length) {\n            if (vowels.contains(str2(i))) vowelList = str2(i) :: vowelList\n        }\n        val vowelArray = vowelList.toArray\n        var result = \"\"\n        var j = 0\n        for (i <- 0 until str2.length) {\n            if (vowels.contains(str2(i))) {\n                result += vowelArray(j)\n                j += 1\n            } else {\n                result += str2(i)\n            }\n        }\n        result",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArray(i))) i += 1\n            while (i < j && !vowels.contains(strArray(j))) j -= 1\n            val temp = strArray(i)\n            strArray(i) = strArray(j)\n            strArray(j) = temp\n            i += 1\n            j -= 1\n        }\n        strArray.mkString",
    "        var str2 = str1.toCharArray()\n        var vowels = Array('a','e','i','o','u','A','E','I','O','U')\n        var vowelIndex = ArrayBuffer[Int]()\n        for (i <- 0 until str2.length) {\n            if (vowels.contains(str2(i))) {\n                vowelIndex += i\n            }\n        }\n        for (i <- 0 until vowelIndex.length / 2) {\n            var temp = str2(vowelIndex(i))\n            str2(vowelIndex(i)) = str2(vowelIndex(vowelIndex.length - 1 - i))\n            str2(vowelIndex(vowelIndex.length - 1 - i)) = temp\n        }\n        return str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                str2 += str(i)\n            }\n        }\n        str2 = str2.reverse\n        var j = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                str3 += str2(j)\n                j += 1\n            }\n            else {\n                str3 += str(i)\n            }\n        }\n        str3",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strVowels = str.filter(vowels.contains(_))\n        val strVowelsReversed = strVowels.reverse\n        val strVowelsReversedIterator = strVowelsReversed.iterator\n        val strVowelsReversedArray = str.toCharArray\n        for (i <- 0 until strVowelsReversedArray.length) {\n            if (vowels.contains(strVowelsReversedArray(i))) {\n                strVowelsReversedArray(i) = strVowelsReversedIterator.next\n            }\n        }\n        strVowelsReversedArray.mkString",
    "        var str2 = str1.toCharArray\n        var vowels = \"aeiouAEIOU\".toCharArray\n        var vowelIndices = new ArrayBuffer[Int]\n        for (i <- 0 until str2.length) {\n            if (vowels.contains(str2(i))) {\n                vowelIndices += i\n            }\n        }\n        for (i <- 0 until vowelIndices.length / 2) {\n            var temp = str2(vowelIndices(i))\n            str2(vowelIndices(i)) = str2(vowelIndices(vowelIndices.length - 1 - i))\n            str2(vowelIndices(vowelIndices.length - 1 - i)) = temp\n        }\n        return str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var vowelStack = new Stack[Char]\n        var result = \"\"\n        for (c <- str) {\n            if (vowels.contains(c)) vowelStack.push(c)\n        }\n        for (c <- str) {\n            if (vowels.contains(c)) result += vowelStack.pop\n            else result += c\n        }\n        result",
    "        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 = str2 + str1(i)\n            }\n        }\n        str2 = str2.reverse\n        var j = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str3 = str3 + str2(j)\n                j += 1\n            } else {\n                str3 = str3 + str1(i)\n            }\n        }\n        return str3",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(str(i)) && vowels.contains(str(j))) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(str(i))) {\n                j -= 1\n            } else if (vowels.contains(str(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        var str = str1.toLowerCase\n        var vowels = \"aeiou\"\n        var vowelIndices = new ArrayBuffer[Int]\n        var vowelChars = new ArrayBuffer[Char]\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                vowelIndices += i\n                vowelChars += str(i)\n            }\n        }\n        var result = new StringBuilder\n        for (i <- 0 until str.length) {\n            if (vowelIndices.contains(i)) {\n                result += vowelChars.remove(vowelChars.length - 1)\n            } else {\n                result += str(i)\n            }\n        }\n        return result.toString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        var vowelStack = Stack[Char]()\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelStack.push(str(i))\n        }\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) result += vowelStack.pop\n            else result += str(i)\n        }\n        result",
    "        var str2 = \"\"\n        var vowels = List[Char]()\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                vowels = str1(i) :: vowels\n            }\n        }\n        for (i <- 0 until str1.length) {\n            if (str1(i) == 'a' || str1(i) == 'e' || str1(i) == 'i' || str1(i) == 'o' || str1(i) == 'u') {\n                str2 += vowels.head\n                vowels = vowels.tail\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str = str1.toList\n        var vowelList = List[Char]()\n        var nonVowelList = List[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelList = str(i) :: vowelList\n            else nonVowelList = str(i) :: nonVowelList\n        }\n        var result = List[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) result = vowelList.head :: result\n            else result = nonVowelList.head :: result\n            if (vowels.contains(str(i))) vowelList = vowelList.tail\n            else nonVowelList = nonVowelList.tail\n        }\n        result.reverse.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i).toLower)) i += 1\n            while (i < j && !vowels.contains(str(j).toLower)) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(strArr(i))) {\n                i += 1\n            } else if (!vowels.contains(strArr(j))) {\n                j -= 1\n            } else {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            val temp = str(i)\n            str(i) = str(j)\n            str(j) = temp\n            i += 1\n            j -= 1\n        }\n        str.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArr(i))) i += 1\n            while (i < j && !vowels.contains(strArr(j))) j -= 1\n            val temp = strArr(i)\n            strArr(i) = strArr(j)\n            strArr(j) = temp\n            i += 1\n            j -= 1\n        }\n        strArr.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            if (!vowels.contains(str2(i))) {\n                i += 1\n            } else if (!vowels.contains(str2(j))) {\n                j -= 1\n            } else {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArr(i))) i += 1\n            while (i < j && !vowels.contains(strArr(j))) j -= 1\n            if (i < j) {\n                val temp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val str2 = str1.split(\"\").filter(vowels.contains(_)).reverse.mkString(\"\")\n        val str3 = str1.split(\"\").map(x => if (vowels.contains(x)) str2.charAt(0) else x.charAt(0)).mkString(\"\")\n        str2.substring(1) + str3",
    "        val str = str1.toLowerCase\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val vowelIndices = str.zipWithIndex.filter(x => vowels.contains(x._1)).map(_._2)\n        val vowelChars = str.zipWithIndex.filter(x => vowels.contains(x._1)).map(_._1)\n        val reversedVowelChars = vowelChars.reverse\n        val strArray = str.toCharArray\n        for (i <- 0 until vowelIndices.length) {\n            strArray(vowelIndices(i)) = reversedVowelChars(i)\n        }\n        strArray.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str2.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str2(i))) i += 1\n            while (i < j && !vowels.contains(str2(j))) j -= 1\n            val temp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = temp\n            i += 1\n            j -= 1\n        }\n        str2.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var vowelIndices = ListBuffer[Int]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowelIndices += i\n        }\n        for (i <- 0 until vowelIndices.length / 2) {\n            val temp = strArr(vowelIndices(i))\n            strArr(vowelIndices(i)) = strArr(vowelIndices(vowelIndices.length - 1 - i))\n            strArr(vowelIndices(vowelIndices.length - 1 - i)) = temp\n        }\n        strArr.mkString",
    "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str = str1.toList\n        var vowels_list = List[Char]()\n        var non_vowels_list = List[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) vowels_list = vowels_list :+ str(i)\n            else non_vowels_list = non_vowels_list :+ str(i)\n        }\n        var result = List[Char]()\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) result = result :+ vowels_list.last\n            else result = result :+ non_vowels_list.head\n            if (vowels.contains(str(i))) vowels_list = vowels_list.dropRight(1)\n            else non_vowels_list = non_vowels_list.drop(1)\n        }\n        result.mkString",
    "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArray = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArray(i))) i += 1\n            while (i < j && !vowels.contains(strArray(j))) j -= 1\n            if (i < j) {\n                val temp = strArray(i)\n                strArray(i) = strArray(j)\n                strArray(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        strArray.mkString",
    "        val vowels = \"aeiouAEIOU\"\n        val str = str1.toCharArray()\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (!vowels.contains(str(i))) {\n                i += 1\n            } else if (!vowels.contains(str(j))) {\n                j -= 1\n            } else {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        return str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val str = str1.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            if (vowels.contains(str(i)) && vowels.contains(str(j))) {\n                val temp = str(i)\n                str(i) = str(j)\n                str(j) = temp\n                i += 1\n                j -= 1\n            } else if (vowels.contains(str(i))) {\n                j -= 1\n            } else if (vowels.contains(str(j))) {\n                i += 1\n            } else {\n                i += 1\n                j -= 1\n            }\n        }\n        str.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val str2 = str.toCharArray\n        var i = 0\n        var j = str.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str(i))) i += 1\n            while (i < j && !vowels.contains(str(j))) j -= 1\n            if (i < j) {\n                val temp = str2(i)\n                str2(i) = str2(j)\n                str2(j) = temp\n                i += 1\n                j -= 1\n            }\n        }\n        str2.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = str1.toLowerCase\n        val strArr = str.toCharArray\n        var i = 0\n        var j = strArr.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(strArr(i))) i += 1\n            while (i < j && !vowels.contains(strArr(j))) j -= 1\n            if (i < j) {\n                val tmp = strArr(i)\n                strArr(i) = strArr(j)\n                strArr(j) = tmp\n                i += 1\n                j -= 1\n            }\n        }\n        strArr.mkString",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str2 = str1.toCharArray\n        var i = 0\n        var j = str1.length - 1\n        while (i < j) {\n            while (i < j && !vowels.contains(str1(i))) i += 1\n            while (i < j && !vowels.contains(str1(j))) j -= 1\n            val temp = str2(i)\n            str2(i) = str2(j)\n            str2(j) = temp\n            i += 1\n            j -= 1\n        }\n        str2.mkString"
  ]
}
{
  "name": "mbpp_394_check_distinct",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_394_check_distinct.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        if (tup.length == tup_set.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4si1z6hq.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4si1z6hq.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4si1z6hq.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        for (i <- 0 until tup.length) {\n            for (j <- i + 1 until tup.length) {\n                if (tup(i) == tup(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8pf1hlk.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8pf1hlk.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8pf1hlk.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        if (tup_set.size == tup_str.length) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwna1abd.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwna1abd.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwna1abd.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        tup.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8xue56ta.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8xue56ta.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8xue56ta.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toArray\n        var tup_set = tup_arr.toSet\n        if (tup_arr.length == tup_set.size) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjusc1cpi.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjusc1cpi.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjusc1cpi.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        if (tup_set.size == tup_str.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        for (i <- 0 until tup_str.length) {\n            for (j <- i + 1 until tup_str.length) {\n                if (tup_str(i) == tup_str(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph7in2h3o.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph7in2h3o.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph7in2h3o.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup_str.length) {\n            if (tup_set.contains(tup_str(i))) return false\n            tup_set += tup_str(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfmqp0es0.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfmqp0es0.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfmqp0es0.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_arr.length == tup_set.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2g37e4dl.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2g37e4dl.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2g37e4dl.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        return tup_set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwuqagj05.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwuqagj05.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwuqagj05.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        if (tup_set.size == tup.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        tup_set.size == tup_arr.length\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpso93rrmv.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpso93rrmv.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpso93rrmv.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return (tup_set.size == tup_arr.size)\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7gv8m3js.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7gv8m3js.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7gv8m3js.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 until test_arr.length) {\n            if (test_set.contains(test_arr(i))) return false\n            test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf7lwwat.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf7lwwat.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf7lwwat.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup_arr.length) {\n            if (tup_set.contains(tup_arr(i))) {\n                return false\n            }\n            tup_set += tup_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmio7rh9l.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmio7rh9l.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmio7rh9l.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val len = tup.length\n        var i = 0\n        while (i < len) {\n            var j = i + 1\n            while (j < len) {\n                if (tup(i) == tup(j)) return false\n                j += 1\n            }\n            i += 1\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpro6z548y.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpro6z548y.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpro6z548y.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_arr.length == tup_set.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2g37e4dl.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2g37e4dl.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2g37e4dl.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        if (tup_set.size == tup.length) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp54ukkkd_.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp54ukkkd_.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp54ukkkd_.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_arr.length == test_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzft8nmyi.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzft8nmyi.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzft8nmyi.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_set = test_str.toSet\n        return test_str.length == test_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvg8743a.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvg8743a.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvg8743a.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup_arr.length) {\n            if (tup_set.contains(tup_arr(i))) return false\n            tup_set += tup_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_arr = tup.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6moxt_mw.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6moxt_mw.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6moxt_mw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        if (tup_set.size == tup.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.map(_.asDigit).toList\n        val distinct = tup.distinct\n        if (tup.length == distinct.length) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfuk21ulw.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfuk21ulw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfuk21ulw.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 until test_arr.length) {\n            if (test_set.contains(test_arr(i))) return false\n            else test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehggh8d4.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehggh8d4.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehggh8d4.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpts5t45s1.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpts5t45s1.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpts5t45s1.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        for (i <- 0 until tup.length - 1) {\n            for (j <- i + 1 until tup.length) {\n                if (tup(i) == tup(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpltku92wd.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpltku92wd.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpltku92wd.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup = test_tup.toString\n        var map = Map[Char, Int]()\n        for (i <- 0 until tup.length) {\n            if (map.contains(tup(i))) return false\n            map += (tup(i) -> 1)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwpw628i.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwpw628i.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwpw628i.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        return tup_str.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        return tup_set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_set = Set[Char]()\n        for (i <- 0 to tup_arr.length - 1) {\n            if (tup_set.contains(tup_arr(i))) return false\n            else tup_set += tup_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ykwuner.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ykwuner.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ykwuner.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_arr.length == tup_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mw63q9c.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mw63q9c.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mw63q9c.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val distinct = tup.distinct\n        if (tup.length == distinct.length) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123764,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr158y3jn.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr158y3jn.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr158y3jn.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_len = tup_str.length\n        val tup_arr = tup_str.toCharArray\n        for (i <- 0 until tup_len) {\n            for (j <- i + 1 until tup_len) {\n                if (tup_arr(i) == tup_arr(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm3ifr8_.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm3ifr8_.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm3ifr8_.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_set = Set[Char]()\n        for (i <- 0 until test_str.length) {\n            if (test_set.contains(test_str(i))) return false\n            test_set += test_str(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        if (test_set.size == test_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return (tup_arr.length == tup_set.size)\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123765,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsm76ly03.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsm76ly03.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsm76ly03.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_set = test_str.toSet\n        return test_set.size == test_str.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6_8lqajy.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6_8lqajy.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6_8lqajy.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123765,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 until test_arr.length) {\n            if (test_set.contains(test_arr(i))) return false\n            test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf7lwwat.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf7lwwat.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf7lwwat.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 until test_arr.length) {\n            if (test_set.contains(test_arr(i))) {\n                return false\n            }\n            test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        if (test_set.size == test_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        if (test_set.size == test_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmykhuw4.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmykhuw4.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmykhuw4.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        tup.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8xue56ta.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8xue56ta.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8xue56ta.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        if (test_set.size == test_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_arr = tup.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6moxt_mw.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6moxt_mw.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6moxt_mw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        if (tup_set.size == tup.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpedc401bt.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpedc401bt.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpedc401bt.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup = test_tup.toString\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup.length) {\n            if (tup_set.contains(tup(i))) return false\n            tup_set += tup(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm4_sswa.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm4_sswa.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm4_sswa.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        return tup_str.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        if (tup_set.size == tup.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        return tup_str.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        if (test_set.size == test_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyn_bb97f.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        tup_set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyk6isl8.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyk6isl8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyk6isl8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_len = tup_str.length\n        for (i <- 0 until tup_len) {\n            for (j <- i + 1 until tup_len) {\n                if (tup_str(i) == tup_str(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4h8cfqx.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4h8cfqx.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4h8cfqx.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 to test_arr.length - 1) {\n            if (test_set.contains(test_arr(i))) return false\n            test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4whcyi4.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4whcyi4.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4whcyi4.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_str_set = tup_str.toSet\n        return tup_str_set.size == tup_str.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22sna3vu.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22sna3vu.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22sna3vu.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        if (tup.length == tup_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9yhi4k9c.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9yhi4k9c.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9yhi4k9c.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        for (i <- 0 to test_str.length - 1) {\n            for (j <- i + 1 to test_str.length - 1) {\n                if (test_str(i) == test_str(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8g6jhmj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8g6jhmj.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8g6jhmj.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123765,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val distinct = tup.distinct\n        if (tup.length == distinct.length) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpra3iid7u.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpra3iid7u.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpra3iid7u.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_set = Set[Char]()\n        for (i <- 0 until test_str.length) {\n            if (test_set.contains(test_str(i))) return false\n            test_set += test_str(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnx6uc9de.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnx6uc9de.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnx6uc9de.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        return tup_set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwuqagj05.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwuqagj05.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwuqagj05.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        tup.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptpcltjs0.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptpcltjs0.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptpcltjs0.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList.map(_.asDigit)\n        val set = Set[Int]()\n        for (i <- 0 until tup.length) {\n            if (set.contains(tup(i))) return false\n            set += tup(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm7e0n5ey.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm7e0n5ey.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm7e0n5ey.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup = test_tup.toString.toList\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup.length) {\n            if (tup_set.contains(tup(i))) return false\n            tup_set += tup(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo6i76g7c.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo6i76g7c.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo6i76g7c.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        if (tup_set.size == tup_str.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        if (tup_set.size == tup.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4phgtmn.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_arr.length == test_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzft8nmyi.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzft8nmyi.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzft8nmyi.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 to test_arr.length - 1) {\n            if (test_set.contains(test_arr(i))) return false\n            test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4whcyi4.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4whcyi4.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4whcyi4.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        for (i <- 0 until test_str.length) {\n            for (j <- i + 1 until test_str.length) {\n                if (test_str(i) == test_str(j)) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju760rz0.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju760rz0.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju760rz0.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123779,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppalmdthg.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppalmdthg.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppalmdthg.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val set = tup.toSet\n        return set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123779,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d5vgraw.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d5vgraw.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d5vgraw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_len = tup_str.length\n        for (i <- 0 until tup_len) {\n            for (j <- i + 1 until tup_len) {\n                if (tup_str(i) == tup_str(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4h8cfqx.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4h8cfqx.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4h8cfqx.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        if (tup_set.size == tup_str.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_p4iwxja.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val distinct = tup.distinct\n        if (tup.length == distinct.length) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123764,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr158y3jn.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr158y3jn.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr158y3jn.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.map(_.asDigit)\n        val set = tup.toSet\n        return set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgj0vkn1l.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgj0vkn1l.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgj0vkn1l.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf7e8guc.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf7e8guc.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf7e8guc.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf7e8guc.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf7e8guc.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf7e8guc.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size)\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123780,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt84xv7hk.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt84xv7hk.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt84xv7hk.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123765,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val set = tup.toSet\n        return set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123779,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d5vgraw.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d5vgraw.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d5vgraw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        if (tup_str.length == tup_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9_0v2wxk.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9_0v2wxk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9_0v2wxk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        return tup_str.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        if (test_set.size == test_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123767,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmykhuw4.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmykhuw4.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmykhuw4.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup = test_tup.toString\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup.length) {\n            if (tup_set.contains(tup(i))) return false\n            tup_set += tup(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm4_sswa.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm4_sswa.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm4_sswa.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_set = HashSet[Char]()\n        for (i <- 0 until test_str.length) {\n            if (test_set.contains(test_str(i))) return false\n            test_set += test_str(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6dd872h1.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6dd872h1.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6dd872h1.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val len = tup.length\n        val set = new HashSet[Char]\n        for (i <- 0 until len) {\n            if (set.contains(tup(i))) return false\n            set += tup(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123780,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ti5bqlw.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ti5bqlw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ti5bqlw.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        return tup_set.size == tup_str.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9emjgqhm.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9emjgqhm.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9emjgqhm.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val distinct = tup.distinct\n        if (tup.length == distinct.length) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgx4lgj4i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgx4lgj4i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgx4lgj4i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        return tup_set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val nums = new Array[Int](10)\n        for (i <- 0 until tup.length) {\n            val num = tup(i) - '0'\n            if (nums(num) == 1) return false\n            else nums(num) = 1\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72vgp3fo.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72vgp3fo.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72vgp3fo.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        return tup.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpih4rl465.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpih4rl465.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpih4rl465.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        if (tup.length == tup_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo8w7ih_.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo8w7ih_.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyo8w7ih_.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_set = Set[Char]()\n        for (i <- 0 until test_str.length) {\n            if (test_set.contains(test_str(i))) return false\n            test_set += test_str(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmxfe_ir.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.toList\n        val tup_set = tup.toSet\n        tup.size == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0sv5bmd.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0sv5bmd.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0sv5bmd.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_arr = tup.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphedynj4h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphedynj4h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphedynj4h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25d_wjjt.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup = test_tup.toString\n        var flag = true\n        for (i <- 0 until tup.length) {\n            for (j <- i + 1 until tup.length) {\n                if (tup(i) == tup(j)) {\n                    flag = false\n                }\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dm2ceo3.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dm2ceo3.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dm2ceo3.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup_arr.length) {\n            if (tup_set.contains(tup_arr(i))) return false\n            tup_set += tup_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_str_set = tup_str.toSet\n        return tup_str.length == tup_str_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkznymbrb.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkznymbrb.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkznymbrb.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 until test_arr.length) {\n            if (test_set.contains(test_arr(i))) {\n                return false\n            }\n            test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toArray\n        var test_tup_arr_distinct = test_tup_arr.distinct\n        if (test_tup_arr_distinct.length == test_tup_arr.length) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4qzx0pxa.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4qzx0pxa.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4qzx0pxa.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.map(_.asDigit).toSet\n        return tup.size == tup.toList.length\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkgoi8wr.scala:10:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkgoi8wr.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkgoi8wr.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbe2dtt8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbe2dtt8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptbe2dtt8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_arr = test_tup.toString.toArray\n        val test_set = test_arr.toSet\n        if (test_arr.length == test_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpska7fumr.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpska7fumr.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpska7fumr.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123782,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa7j_1ber.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa7j_1ber.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa7j_1ber.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_list = tup.toList\n        val tup_set = tup_list.toSet\n        if (tup_list.length == tup_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123791,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpok3e1nrp.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpok3e1nrp.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpok3e1nrp.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123765,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpng6ewb41.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_set = tup.toSet\n        return tup_set.size == tup.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph55rrg2v.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_str_list = tup_str.toList\n        val tup_str_set = tup_str_list.toSet\n        if (tup_str_list.length == tup_str_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123791,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuif90ako.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuif90ako.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuif90ako.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_str_set = tup_str.toSet\n        if (tup_str_set.size == tup_str.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123792,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnd_hko88.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnd_hko88.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnd_hko88.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        if (tup_set.size == tup_str.length) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwna1abd.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwna1abd.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwna1abd.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = new HashSet[Char]\n        for (i <- 0 until test_arr.length) {\n            if (test_set.contains(test_arr(i))) {\n                return false\n            }\n            test_set.add(test_arr(i))\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123792,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp510puwd8.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp510puwd8.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp510puwd8.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_arr = tup.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123792,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fb8thc0.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fb8thc0.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fb8thc0.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_set = test_str.toSet\n        test_set.size == test_str.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123792,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mv7wb42.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mv7wb42.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mv7wb42.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        return tup_str.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        return test_set.size == test_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb_zr64i.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString\n        val tup_arr = tup.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123792,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv2_ldp20.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv2_ldp20.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv2_ldp20.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_str_set = tup_str.toSet\n        if (tup_str_set.size == tup_str.size) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123792,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfq7g28n1.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfq7g28n1.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfq7g28n1.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        for (i <- 0 until test_str.length) {\n            for (j <- i + 1 until test_str.length) {\n                if (test_str(i) == test_str(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123792,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24smmmyb.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24smmmyb.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24smmmyb.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_arr.length == tup_set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mw63q9c.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mw63q9c.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5mw63q9c.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_arr.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfge_ns8h.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcdxzfe.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup = test_tup.toString.map(_.asDigit)\n        tup.distinct.length == tup.length\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptoqj21jj.scala:10:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptoqj21jj.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptoqj21jj.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        return tup_str.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod70bxsg.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_set = test_arr.toSet\n        if (test_set.size == test_arr.size) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjyr9l7cq.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjyr9l7cq.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjyr9l7cq.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_str = test_tup.toString\n        var test_arr = test_str.toCharArray\n        var test_set = Set[Char]()\n        for (i <- 0 until test_arr.length) {\n            if (test_set.contains(test_arr(i))) {\n                return false\n            }\n            test_set += test_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzlc8n3n.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toArray\n        val tup_arr_distinct = tup_arr.distinct\n        if (tup_arr_distinct.length == tup_arr.length) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg_p9gde5.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg_p9gde5.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg_p9gde5.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val test_str = test_tup.toString\n        for (i <- 0 until test_str.length) {\n            for (j <- i + 1 until test_str.length) {\n                if (test_str(i) == test_str(j)) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123781,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju760rz0.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju760rz0.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju760rz0.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwaa90na.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_set = tup_str.toSet\n        tup_str.length == tup_set.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgl6n0q3d.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgl6n0q3d.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgl6n0q3d.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup = test_tup.toString\n        var distinct = true\n        for (i <- 0 to tup.length - 1) {\n            for (j <- i + 1 to tup.length - 1) {\n                if (tup(i) == tup(j)) {\n                    distinct = false\n                }\n            }\n        }\n        return distinct\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6d6akjz.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6d6akjz.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6d6akjz.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup = test_tup\n        var digits = new Array[Int](10)\n        while (tup > 0) {\n            digits(tup % 10) += 1\n            tup /= 10\n        }\n        for (i <- 0 until 10) {\n            if (digits(i) > 1) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk6fmppw.scala:9:19 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            digits(tup % \u001b[31m10\u001b[0m) += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Found:    Long\n\u001b[31m  |\u001b[0m                   Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk6fmppw.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk6fmppw.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk6fmppw.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_set = test_tup_arr.toSet\n        if (test_tup_set.size == test_tup_arr.size) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz37sg1vu.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz37sg1vu.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz37sg1vu.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_str_set = tup_str.toSet\n        return tup_str_set.size == tup_str.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22sna3vu.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22sna3vu.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22sna3vu.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        return tup_set.size == tup_arr.size\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfnj47mrk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        val tup_arr = tup_str.toCharArray\n        val tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:12:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt4ve9kp8.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_set = Set[Char]()\n        for (i <- 0 until tup_arr.length) {\n            if (tup_set.contains(tup_arr(i))) return false\n            tup_set += tup_arr(i)\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwp2ujyy.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_set = tup_arr.toSet\n        if (tup_set.size == tup_arr.size) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpts5t45s1.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpts5t45s1.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpts5t45s1.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if given tuple contains no duplicates.\n    def checkDistinct(test_tup : Long) : Boolean = {\n        val tup_str = test_tup.toString\n        for (i <- 0 until tup_str.length) {\n            for (j <- i + 1 until tup_str.length) {\n                if (tup_str(i) == tup_str(j)) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkDistinct((1l, 4l, 5l, 6l, 1l, 4l)) == (false));\n    assert(checkDistinct((1l, 4l, 5l, 6l)) == (true));\n    assert(checkDistinct((2l, 3l, 4l, 5l, 6l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123793,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt97dywdh.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt97dywdh.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkDistinct((\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt97dywdh.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkDistinct((\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                         Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
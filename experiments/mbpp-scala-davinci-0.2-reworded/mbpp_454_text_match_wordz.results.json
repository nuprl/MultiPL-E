{
  "name": "mbpp_454_text_match_wordz",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_454_text_match_wordz.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\"\\\\w*z\\\\w*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmptqxedxb2.scala:9)\n\tat Problem.main(tmptqxedxb2.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        (pattern findFirstIn text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        (pattern findAllIn text).length > 0\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        (pattern findFirstIn text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z.+\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text match {\n            case s if s.contains(\"z\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text match {\n            case s if s.contains(\"z\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        return text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        return text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        val result = pattern.findFirstIn(text)\n        result match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \"\\\\bz\\\\w*\\\\b\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9rcx6898.scala:13)\n\tat Problem.main(tmp9rcx6898.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        (pattern findFirstIn text).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z.*\".r\n        (pattern findFirstIn text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        val result = regex.findFirstIn(text)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        text match {\n            case s if s.contains(\"z\") => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        return text.matches(\".*z.*\")\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \".*z.*\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val pattern = \"z\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a word containing 'z'.\n    def textMatchWordz(text : String) : Boolean = {\n        val regex = \".*z.*\".r\n        regex.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(textMatchWordz((\"pythonz.\")) == (true));\n    assert(textMatchWordz((\"xyz.\")) == (true));\n    assert(textMatchWordz((\"  lang  .\")) == (false));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
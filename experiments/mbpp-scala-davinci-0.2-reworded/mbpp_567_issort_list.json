{
  "name": "mbpp_567_issort_list",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    def issortList(list1 : List[Long]) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(issortList((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 17l.toLong))) == (true));\n    assert(issortList((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 20l.toLong, 17l.toLong))) == (false));\n    assert(issortList((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong, 10l.toLong, 15l.toLong, 14l.toLong, 20l.toLong))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var list2 = list1.sorted\n        if (list1 == list2) return true\n        return false",
    "        list1.zip(list1.tail).forall(x => x._1 <= x._2)",
    "        var flag = true\n        for (i <- 0 until list1.length - 1) {\n            if (list1(i) > list1(i + 1)) {\n                flag = false\n            }\n        }\n        flag",
    "        if (list1.length == 1) true\n        else if (list1.head > list1.tail.head) false\n        else issortList(list1.tail)",
    "        def issortListHelper(list1 : List[Long], list2 : List[Long]) : Boolean = {\n            if (list1.isEmpty) true\n            else if (list1.head < list2.head) false\n            else issortListHelper(list1.tail, list1.head :: list2)\n        }\n        issortListHelper(list1, List())",
    "        if (list1.length <= 1) return true\n        if (list1(0) > list1(1)) return false\n        issortList(list1.tail)",
    "        if (list1.length == 1) true\n        else if (list1.head > list1.tail.head) false\n        else issortList(list1.tail)",
    "        var list2 = list1.sortWith(_ < _)\n        if (list1 == list2) true else false",
    "        var list2 = list1.sortWith(_ < _)\n        if (list1 == list2) true else false",
    "        var sorted = true\n        for (i <- 0 until list1.length - 1) {\n            if (list1(i) > list1(i + 1)) {\n                sorted = false\n            }\n        }\n        sorted",
    "        list1.sorted == list1",
    "        if (list1.length == 0) return true\n        var list2 = list1.tail\n        while (list2.length != 0) {\n            if (list1.head > list2.head) return false\n            list1 = list2\n            list2 = list2.tail\n        }\n        return true",
    "        if (list1.length == 0) return true\n        var prev = list1(0)\n        for (i <- 1 until list1.length) {\n            if (list1(i) < prev) return false\n            prev = list1(i)\n        }\n        return true",
    "        var list2 = list1.sorted\n        if (list1 == list2) true else false",
    "        if (list1.length == 0 || list1.length == 1) return true\n        for (i <- 0 until list1.length - 1) {\n            if (list1(i) > list1(i + 1)) return false\n        }\n        return true",
    "        if (list1.length == 0) return true\n        if (list1.length == 1) return true\n        for (i <- 1 until list1.length) {\n            if (list1(i) < list1(i - 1)) return false\n        }\n        return true",
    "        if (list1.length == 1) return true\n        for (i <- 0 until list1.length - 1) {\n            if (list1(i) > list1(i + 1)) return false\n        }\n        return true",
    "        if (list1.length == 1) return true\n        for (i <- 0 until list1.length - 1) {\n            if (list1(i) > list1(i + 1)) return false\n        }\n        return true",
    "        if (list1.length == 0) return true\n        if (list1.length == 1) return true\n        if (list1(0) > list1(1)) return false\n        return issortList(list1.tail)",
    "        if (list1.length == 1) true\n        else if (list1.length == 2) list1(0) <= list1(1)\n        else list1(0) <= list1(1) && issortList(list1.tail)"
  ]
}
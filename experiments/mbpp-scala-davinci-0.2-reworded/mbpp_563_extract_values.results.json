{
  "name": "mbpp_563_extract_values",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\\\"(.*?)\\\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzp7jkru2.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzp7jkru2.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzp7jkru2.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        for (m <- matches) values += m.substring(1, m.length() - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpms04jwgy.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpms04jwgy.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpms04jwgy.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]()\n        for (m <- matches) result += m.substring(1, m.length - 1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr38movtc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr38movtc.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr38movtc.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var index = 0\n        while (index < text.length) {\n            if (text(index) == '\"') {\n                var value = \"\"\n                index += 1\n                while (index < text.length && text(index) != '\"') {\n                    value += text(index)\n                    index += 1\n                }\n                result = value :: result\n            }\n            index += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprvk291n4.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprvk291n4.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprvk291n4.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val values = new ListBuffer[String]\n        var inQuote = false\n        var currentValue = \"\"\n        for (c <- text) {\n            if (c == '\"') {\n                if (inQuote) {\n                    values += currentValue\n                    currentValue = \"\"\n                }\n                inQuote = !inQuote\n            } else if (inQuote) {\n                currentValue += c\n            }\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxyak0ht.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxyak0ht.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxyak0ht.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val values = pattern.findAllIn(text).toList\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        var list = List[String]()\n        while (matches.hasNext) {\n            list = matches.next :: list\n        }\n        list.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp842qhvv7.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp842qhvv7.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp842qhvv7.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val result = new ListBuffer[String]()\n        var start = 0\n        var end = 0\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                if (start == 0) start = i + 1\n                else {\n                    end = i\n                    result += text.substring(start, end)\n                    start = 0\n                }\n            }\n            i += 1\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwy_0kfs3.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwy_0kfs3.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwy_0kfs3.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                var j = i + 1\n                while (j < text.length && text(j) != '\"') j += 1\n                result = text.substring(i + 1, j) :: result\n                i = j\n            }\n            i += 1\n        }\n        result.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8ftbfgul.scala:20:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8ftbfgul.scala:21:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8ftbfgul.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqrk03m.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqrk03m.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqrk03m.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.replace(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        while (matches.hasNext) {\n            result += matches.group(1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var index = 0\n        while (index < text.length) {\n            if (text(index) == '\"') {\n                var start = index + 1\n                index += 1\n                while (index < text.length && text(index) != '\"') index += 1\n                if (index < text.length) {\n                    result = result :+ text.substring(start, index)\n                }\n            }\n            index += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0r4zs0yk.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0r4zs0yk.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0r4zs0yk.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptsz49j1t.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptsz49j1t.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptsz49j1t.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.next\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp12quez_j.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp12quez_j.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp12quez_j.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text).matchData\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzvb4wdu2.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzvb4wdu2.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzvb4wdu2.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"\"(.*?)\"\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = List[String]()\n        var start = 0\n        var end = 0\n        var inQuotes = false\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (inQuotes) {\n                    end = i\n                    values = values :+ text.substring(start + 1, end)\n                    inQuotes = false\n                } else {\n                    start = i\n                    inQuotes = true\n                }\n            }\n        }\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpypeun35k.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpypeun35k.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpypeun35k.scala:27:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = regex.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmper3nakas.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmper3nakas.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmper3nakas.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(_.replaceAll(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqnr3f2k.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqnr3f2k.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqnr3f2k.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = List[String]()\n        var start = -1\n        var end = -1\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == -1) start = i\n                else {\n                    end = i\n                    values = values :+ text.substring(start + 1, end)\n                    start = -1\n                }\n            }\n        }\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k58snc6.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k58snc6.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k58snc6.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = new ListBuffer[String]\n        var start = 0\n        var end = 0\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == 0) start = i + 1\n                else {\n                    end = i\n                    values += text.substring(start, end)\n                    start = 0\n                }\n            }\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps6d0qmzt.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps6d0qmzt.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps6d0qmzt.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")[^\"]*(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) {\n            result += m.substring(1, m.length - 1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) result += m.substring(1, m.length - 1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnfp8rxwi.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnfp8rxwi.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnfp8rxwi.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuifkgcnb.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuifkgcnb.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuifkgcnb.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                if (start == 0) {\n                    start = i\n                } else {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    start = 0\n                }\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwdc6cqgh.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwdc6cqgh.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwdc6cqgh.scala:27:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text).toList\n        result.map(x => x.substring(1, x.length - 1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp29rgetc3.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp29rgetc3.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp29rgetc3.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"([^\"]*)\"([^\"]*)\"([^\"]*)\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        matches.foreach(m => values += m.split(\"\\\"\")(1))\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeymtt75p.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeymtt75p.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeymtt75p.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq0m8i599.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq0m8i599.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq0m8i599.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"([\"'])(?:(?=(\\\\?))\\2.)*?\\1\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpns04f39r.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpns04f39r.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpns04f39r.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        var inQuotes = false\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (inQuotes) {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    inQuotes = false\n                } else {\n                    start = i\n                    inQuotes = true\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp98emzl1n.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp98emzl1n.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp98emzl1n.scala:27:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        pattern.findAllIn(text).matchData.map(m => m.group(1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppvdbtpbu.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppvdbtpbu.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppvdbtpbu.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                if (start == 0) start = i + 1\n                else {\n                    end = i\n                    result = result :+ text.substring(start, end)\n                    start = 0\n                }\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxpft89is.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxpft89is.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxpft89is.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) {\n            result += m.substring(1, m.length - 1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpipj6_tz8.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpipj6_tz8.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpipj6_tz8.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                if (start == 0) start = i + 1\n                else {\n                    end = i\n                    result = result :+ text.substring(start, end)\n                    start = 0\n                }\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxpft89is.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxpft89is.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxpft89is.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")[^\"]*(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"([^\"]*)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjknj6440.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjknj6440.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjknj6440.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_op6dles.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_op6dles.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_op6dles.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2rx4nq25.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2rx4nq25.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2rx4nq25.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpixuon2cc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpixuon2cc.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpixuon2cc.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (matchString <- matches) values += matchString.substring(1, matchString.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpplpix3yw.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpplpix3yw.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpplpix3yw.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = -1\n        var end = -1\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == -1) start = i\n                else {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    start = -1\n                    end = -1\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqrk03m.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqrk03m.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqrk03m.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = matches.toList\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k35y1pp.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k35y1pp.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k35y1pp.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqksgf3mh.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqksgf3mh.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqksgf3mh.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val result = new ListBuffer[String]\n        var inQuotes = false\n        var current = new StringBuilder\n        for (c <- text) {\n            if (c == '\"') {\n                if (inQuotes) {\n                    result += current.toString\n                    current = new StringBuilder\n                }\n                inQuotes = !inQuotes\n            } else if (inQuotes) {\n                current += c\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1_97ee8k.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1_97ee8k.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1_97ee8k.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        var inQuote = false\n        for (i <- 0 to text.length - 1) {\n            if (text(i) == '\"') {\n                if (inQuote) {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                } else {\n                    start = i\n                }\n                inQuote = !inQuote\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnepfawlo.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnepfawlo.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnepfawlo.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = List[String]()\n        var inQuotes = false\n        var currentValue = \"\"\n        for (c <- text) {\n            if (c == '\"') {\n                if (inQuotes) {\n                    values = values :+ currentValue\n                    currentValue = \"\"\n                }\n                inQuotes = !inQuotes\n            } else if (inQuotes) {\n                currentValue += c\n            }\n        }\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjgfi3vrx.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjgfi3vrx.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjgfi3vrx.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyr7udcyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyr7udcyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyr7udcyb.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmply6de3r3.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmply6de3r3.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmply6de3r3.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.replace(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd3443vje.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd3443vje.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd3443vje.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text).toList\n        result.map(x => x.substring(1, x.length - 1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp29rgetc3.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp29rgetc3.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp29rgetc3.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        return values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcau41klw.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcau41klw.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcau41klw.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        val matches = regex.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm1c9b87d.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm1c9b87d.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm1c9b87d.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbcijjxyb.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        var inQuote = false\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (inQuote) {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    inQuote = false\n                } else {\n                    start = i\n                    inQuote = true\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoaqbx_c9.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoaqbx_c9.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoaqbx_c9.scala:27:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")[^\"]*(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqd05gyq.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt_ffv43f.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(_.replaceAll(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0fdrigzj.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0fdrigzj.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0fdrigzj.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(_.replaceAll(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqnr3f2k.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqnr3f2k.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsqnr3f2k.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"\"([^\"]*)\"\"\"\".r\n        val matches = regex.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmdgk5t6y.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmdgk5t6y.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmdgk5t6y.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        var result = List[String]()\n        for (m <- matches) result = m :: result\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps3mnt3kz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps3mnt3kz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps3mnt3kz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        var j = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                j = i + 1\n                while (j < text.length && text(j) != '\"') j += 1\n                result = result :+ text.substring(i + 1, j)\n                i = j + 1\n            } else i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd8_5su5t.scala:20:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd8_5su5t.scala:21:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd8_5su5t.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
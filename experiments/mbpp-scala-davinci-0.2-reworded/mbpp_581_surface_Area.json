{
  "name": "mbpp_581_surface_Area",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the surface area of a square scalaramid with a given base edge and height.\n    def surfaceArea(b : Long, s : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_581_surface_Area.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(surfaceArea((3l), (4l)) == (33l));\n    assert(surfaceArea((4l), (5l)) == (56l));\n    assert(surfaceArea((1l), (2l)) == (5l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        (b * b) + (2 * b * s)",
    "        return (b * b) + (2 * b * s)",
    "        return b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        b * b + 2 * b * s",
    "        b * b + 2 * b * s",
    "        return (b * b) + (2 * b * s)",
    "        return b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        return (b * b) + (2 * b * s)",
    "        return b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        b * b + 2 * b * s",
    "        b * b + 2 * b * s",
    "        b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        b * b + 2 * b * s"
  ]
}
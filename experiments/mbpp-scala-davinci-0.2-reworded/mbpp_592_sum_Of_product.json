{
  "name": "mbpp_592_sum_Of_product",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of the product of consecutive binomial co-efficients.\n    def sumOfProduct(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumOfProduct((3l)) == (15l));\n    assert(sumOfProduct((4l)) == (56l));\n    assert(sumOfProduct((1l)) == (1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (i - j + 1) * (j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        // Write your code here\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += (binomial(i, j) * binomial(n - i, n - j))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += binomial(n, i) * binomial(n, i + 1)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomialCoefficient(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        def binomial(n : Long, k : Long) : Long = {\n            if (k == 0 || k == n) 1\n            else binomial(n - 1, k - 1) + binomial(n - 1, k)\n        }\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (i - j + 1) * (j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        // The binomial co-efficient is given by the formula (n choose k) = n! / (k! * (n - k)!)\n        // We can use the fact that (n choose k) = (n choose n - k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that (n choose k) = (n - 1 choose k - 1) + (n - 1 choose k) to reduce the number of calculations.\n        // We can also use the fact that",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            for (j <- 0 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += binomial(n, i) * binomial(n, i + 1)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i + j, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        val binomial = Array.ofDim[Long](n.toInt + 1, n.toInt + 1)\n        for (i <- 0 to n.toInt) {\n            for (j <- 0 to i) {\n                if (j == 0 || j == i) binomial(i)(j) = 1\n                else binomial(i)(j) = binomial(i - 1)(j - 1) + binomial(i - 1)(j)\n            }\n        }\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i)(j) * binomial(n.toInt - i)(n.toInt - j)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- i + 1 to n.toInt) {\n                sum += (i * j) * binomial(n, i) * binomial(n, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomialCoefficient(i, j) * binomialCoefficient(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(n - i, j))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (i - j + 1) * (j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j - 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomialCoefficient(i, j) * binomialCoefficient(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            for (j <- 0 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        // Write your code here\n        val mod = 1000000007L\n        val fact = new Array[Long](n.toInt + 1)\n        fact(0) = 1\n        for (i <- 1 to n.toInt) fact(i) = (fact(i - 1) * i) % mod\n        def binomial(n : Long, k : Long) : Long = {\n            if (k == 0 || k == n) 1\n            else (fact(n.toInt) * pow(fact(k.toInt), mod - 2).toLong * pow(fact(n.toInt - k.toInt), mod - 2).toLong) % mod\n        }\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += (binomial(i, j) * binomial(n - i, j)) % mod\n                sum %= mod\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomialCoefficient(i, j) * binomialCoefficient(i, j - 1)\n            }\n        }\n        return sum",
    "        // Write your code here\n        return 0",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomialCoefficient(i, j) * binomialCoefficient(i, j + 1))\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomialCoefficient(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += (binomial(i, j) * binomial(n - i, n - j))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomialCoefficient(i, j) * binomialCoefficient(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (i - j + 1) * (j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += (binomial(i, j) * binomial(n - i, n - j))\n            }\n        }\n        sum",
    "        def factorial(n : Long) : Long = {\n            if (n == 0) 1\n            else n * factorial(n - 1)\n        }\n        def binomial(n : Long, k : Long) : Long = {\n            factorial(n) / (factorial(k) * factorial(n - k))\n        }\n        def sumOfProductHelper(n : Long, k : Long) : Long = {\n            if (k == n) binomial(n, k)\n            else binomial(n, k) * sumOfProductHelper(n, k + 1)\n        }\n        sumOfProductHelper(n, 0)",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        // Write your code here\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(n - i, j))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        val binomial = Array.ofDim[Long](n.toInt + 1, n.toInt + 1)\n        for (i <- 0 to n.toInt) {\n            for (j <- 0 to i) {\n                if (j == 0 || j == i) binomial(i)(j) = 1\n                else binomial(i)(j) = binomial(i - 1)(j - 1) + binomial(i - 1)(j)\n            }\n        }\n        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            for (j <- 0 to i) {\n                sum += binomial(i)(j) * binomial(i)(j)\n            }\n        }\n        sum",
    "        val mod = 1000000007L\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum = (sum + (i * (n - i + 1)) % mod) % mod\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum : Long = 0\n        for (k <- 1 to n.toInt) {\n            sum += (n - k + 1) * (n - k + 1)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            var product : Long = 1\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (n - i + 1) * (n - i + 1)\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i + j, j))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- i to n.toInt) {\n                product *= binomial(j, i)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            for (j <- 0 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (i - j + 1) * (j)\n            }\n        }\n        sum",
    "        // Write your code here\n        0",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += (binomial(i, j) * binomial(n - i, n - j))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += binomial(n, i) * binomial(n, i + 1)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        // Write your code here\n        return 0",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += binomial(n, i) * binomial(n, i - 1)\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            for (j <- 0 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1L to n) {\n            var product = 1L\n            for (j <- 1L to i) {\n                product *= binomialCoefficient(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j + 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += binomial(n, i) * binomial(n, i + 1)\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var product = 1L\n            for (j <- 1 to i) {\n                product *= binomial(i, j)\n            }\n            sum += product\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j - 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        // Write your code here\n        return 0",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i + j, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (i - j + 1) * (j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(n - i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n.toInt) {\n            for (j <- i + 1 to n.toInt) {\n                sum += binomial(i, j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to n.toInt) {\n                sum += binomial(i, j) * binomial(n - i, n - j)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (n - i + 1) * (n - i + 1)\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (n - i + 1))\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j - 1)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            var prod = 1L\n            for (j <- 1 to i) {\n                prod *= binomial(i, j)\n            }\n            sum += prod\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += (binomial(i, j) * binomial(i, j - 1))\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            var product : Long = 1\n            for (j <- 1 to i) {\n                product *= binomialCoefficient(i, j)\n            }\n            sum += product\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1) / 2)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            for (j <- 1 to i) {\n                sum += binomial(i, j) * binomial(i, j + 1)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += (i to n.toInt).product\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += (i * (i + 1)) / 2\n        }\n        return sum"
  ]
}
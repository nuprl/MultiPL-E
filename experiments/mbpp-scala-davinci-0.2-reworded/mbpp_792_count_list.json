{
  "name": "mbpp_792_count_list",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count the number of lists in a given number of lists.\n    def countList(input_list : List[List[Long]]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_792_count_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countList((List[List[Long]](List[Long](1l.toLong, 3l.toLong), List[Long](5l.toLong, 7l.toLong), List[Long](9l.toLong, 11l.toLong), List[Long](13l.toLong, 15l.toLong, 17l.toLong)))) == (4l));\n    assert(countList((List[List[Long]](List[Long](1l.toLong, 2l.toLong), List[Long](2l.toLong, 3l.toLong), List[Long](4l.toLong, 5l.toLong)))) == (3l));\n    assert(countList((List[List[Long]](List[Long](1l.toLong, 0l.toLong), List[Long](2l.toLong, 0l.toLong)))) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        return count",
    "        var count : Long = 0\n        for (i <- input_list) {\n            count += i.length\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            if (i.length > 0) {\n                count += 1\n            }\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += i.length\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        count",
    "        input_list.size",
    "        var count = 0\n        for(i <- 0 until input_list.length) {\n            count += input_list(i).length\n        }\n        return count",
    "        input_list.map(x => x.length).sum",
    "        input_list.map(x => x.size).sum",
    "        var count = 0\n        for (i <- input_list) {\n            if (i.length > 0) count += 1\n        }\n        return count",
    "        if (input_list.isEmpty) return 0\n        else return 1 + countList(input_list.tail)",
    "        var count = 0\n        for (i <- 0 until input_list.length) {\n            count += input_list(i).length\n        }\n        return count",
    "        // Write your code here\n        var count = 0\n        for(i <- input_list) {\n            count = count + 1\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        return count",
    "        var count = 0\n        for (i <- input_list) {\n            count += 1\n        }\n        return count",
    "        var count : Long = 0\n        for (i <- 0 to input_list.length - 1) {\n            count += input_list(i).length\n        }\n        return count"
  ]
}
{
  "name": "mbpp_77_is_Diff",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            if (i % 2 == 0) sum1 += n2 % 10\n            else sum2 += n2 % 10\n            n2 /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var nn = n\n        while (nn > 0) {\n            if (i % 2 == 0) sum1 += nn % 10\n            else sum2 += nn % 10\n            nn /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_g8mhq9.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_g8mhq9.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            if (i % 2 == 0) sum1 += n2 % 10\n            else sum2 += n2 % 10\n            n2 /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) {\n                sum1 += n1 % 10\n            } else {\n                sum2 += n1 % 10\n            }\n            n1 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpra6t28s2.scala:12:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpra6t28s2.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        val d = (0 until l).map(i => if (i % 2 == 0) s(i).asDigit else -s(i).asDigit).sum\n        d % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum1 += n % 10\n            } else {\n                sum2 += n % 10\n            }\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz6gmmh0n.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz6gmmh0n.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz6gmmh0n.scala:15:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) sum1 += n1 % 10\n            else sum2 += n1 % 10\n            n1 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpujwmv5pt.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpujwmv5pt.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var even = 0\n        var odd = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) even += s(i) - '0'\n            else odd += s(i) - '0'\n        }\n        abs(even - odd) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).toInt - '0'\n            else sum -= s(i).toInt - '0'\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n != 0) {\n            if (i % 2 == 0) {\n                sum1 += n % 10\n                i += 1\n            }\n            else {\n                sum2 += n % 10\n                i += 1\n            }\n            n /= 10\n        }\n        if (abs(sum1 - sum2) % 11 == 0) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzhndwlu5.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzhndwlu5.scala:15:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzhndwlu5.scala:18:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var nn = n\n        while (nn > 0) {\n            if (i % 2 == 0) sum1 += nn % 10\n            else sum2 += nn % 10\n            nn /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0 || sum1 - sum2 == 11 || sum1 - sum2 == -11\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqvu72jkd.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqvu72jkd.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var i = 0\n        var sum = 0\n        while (i < l) {\n            if (i % 2 == 0) sum += s(i).toInt - '0'.toInt\n            else sum -= s(i).toInt - '0'.toInt\n            i += 1\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).toInt - '0'.toInt\n            else sum -= s(i).toInt - '0'.toInt\n        }\n        return sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 to s.length - 1) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) sum1 += n1 % 10\n            else sum2 += n1 % 10\n            n1 /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ffc9gp.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ffc9gp.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        return (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0 || sum1 - sum2 == 11 || sum1 - sum2 == -11\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var diff = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) diff += s(i).asDigit\n            else diff -= s(i).asDigit\n        }\n        return diff % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        if (n < 10) return true\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            if (i % 2 == 0) sum1 += n2 % 10\n            else sum2 += n2 % 10\n            n2 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgkh1wrdv.scala:12:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgkh1wrdv.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum += s(i).toString.toInt\n            else sum -= s(i).toString.toInt\n        }\n        if (sum % 11 == 0) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).toString.toInt\n            else sum -= s(i).toString.toInt\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0 || sum1 - sum2 == 11 || sum1 - sum2 == -11\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        if (n < 10) return false\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:13:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0L\n        var sum2 = 0L\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            if (i % 2 == 0) {\n                sum1 += n2 % 10\n            } else {\n                sum2 += n2 % 10\n            }\n            n2 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            if (i % 2 == 0) sum1 += n2 % 10\n            else sum2 += n2 % 10\n            n2 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122642,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpby969c9u.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpby969c9u.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 to s.length - 1) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var n2 = n\n        while (n2 > 0) {\n            sum1 += n2 % 10\n            n2 /= 10\n            sum2 += n2 % 10\n            n2 /= 10\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122642,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdswoqoat.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            sum1 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdswoqoat.scala:12:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            sum2 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).asDigit\n            else sum -= s(i).asDigit\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).toString.toInt\n            else sum -= s(i).toString.toInt\n        }\n        return sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum = 0\n        var diff = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum += n % 10\n            else diff += n % 10\n            n /= 10\n            i += 1\n        }\n        sum - diff == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6qvaxt8g.scala:10:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6qvaxt8g.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m diff += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6qvaxt8g.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum += s(i).toString.toInt\n            else sum -= s(i).toString.toInt\n        }\n        return sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) sum1 += n1 % 10\n            else sum2 += n1 % 10\n            n1 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpujwmv5pt.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpujwmv5pt.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var num = n\n        while (num > 0) {\n            if (i % 2 == 0) sum1 += num % 10\n            else sum2 += num % 10\n            num /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0_ds6p9.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += num % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0_ds6p9.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += num % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum1 += n % 10\n            } else {\n                sum2 += n % 10\n            }\n            n /= 10\n            i += 1\n        }\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0gpjzsep.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0gpjzsep.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0gpjzsep.scala:15:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val diff = s.map(x => x.toString.toInt).zipWithIndex.map(x => if (x._2 % 2 == 0) x._1 else -x._1).sum\n        diff % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var nn = n\n        while (nn > 0) {\n            if (i % 2 == 0) sum1 += nn % 10\n            else sum2 += nn % 10\n            nn /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_g8mhq9.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_g8mhq9.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            if (i % 2 == 0) sum1 += n2 % 10\n            else sum2 += n2 % 10\n            n2 /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        if (n < 0) return isDiff(-n)\n        if (n < 10) return false\n        var even = 0\n        var odd = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) even += n % 10\n            else odd += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(even - odd) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa0d11xqu.scala:12:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) even += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa0d11xqu.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33melse\u001b[0m odd += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa0d11xqu.scala:14:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var i = 0\n        var sum1 = 0\n        var sum2 = 0\n        while (i < l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum += s(i).toInt - '0'.toInt\n            else sum -= s(i).toInt - '0'.toInt\n        }\n        return sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val diff = (0 until s.length - 1).map(i => abs(s(i) - s(i + 1))).sum\n        diff % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9sf7vmrg.scala:12)\n\tat Problem.main(tmp9sf7vmrg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val d = s.map(c => c.toString.toInt)\n        var diff = 0\n        for (i <- 0 until d.length) {\n            if (i % 2 == 0) diff += d(i)\n            else diff -= d(i)\n        }\n        return diff % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        val even = (0 until l).filter(i => i % 2 == 0).map(i => s(i).asDigit).sum\n        val odd = (0 until l).filter(i => i % 2 == 1).map(i => s(i).asDigit).sum\n        even - odd == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        if (n < 0) return isDiff(-n)\n        if (n < 10) return false\n        var i = 0\n        var j = n.toString.length - 1\n        var sum1 = 0\n        var sum2 = 0\n        while (i < j) {\n            sum1 += n.toString.charAt(i).toInt - '0'.toInt\n            sum2 += n.toString.charAt(j).toInt - '0'.toInt\n            i += 1\n            j -= 1\n        }\n        if (i == j) sum1 += n.toString.charAt(i).toInt - '0'.toInt\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmppj7my5u6.scala:23)\n\tat Problem.main(tmppj7my5u6.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) {\n                sum1 += n1 % 10\n            } else {\n                sum2 += n1 % 10\n            }\n            n1 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpra6t28s2.scala:12:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpra6t28s2.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum = 0\n        var sum2 = 0\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            sum += (n2 % 10) * (i % 2)\n            sum2 += (n2 % 10) * ((i + 1) % 2)\n            n2 /= 10\n            i += 1\n        }\n        sum == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc88lt89y.scala:11:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            sum += (n2 % \u001b[31m10\u001b[0m) * (i % \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc88lt89y.scala:12:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            sum2 += (n2 % \u001b[31m10\u001b[0m) * ((i + \u001b[31m1\u001b[0m) % \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) sum1 += n1 % 10\n            else sum2 += n1 % 10\n            n1 /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ffc9gp.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ffc9gp.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        sum1 - sum2 == 0 || sum1 - sum2 == 11 || sum1 - sum2 == -11\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).toInt - '0'\n            else sum -= s(i).toInt - '0'\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 to s.length - 1) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 to s.length - 1) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var diff = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) diff += s(i).toInt - '0'\n            else diff -= s(i).toInt - '0'\n        }\n        return diff % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var diff = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) diff += s(i).toInt - '0'\n            else diff -= s(i).toInt - '0'\n        }\n        diff % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0uwuxnh9.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0uwuxnh9.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0uwuxnh9.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var i = 0\n        var sum = 0\n        while (i < l) {\n            if (i % 2 == 0) sum += s(i).asDigit\n            else sum -= s(i).asDigit\n            i += 1\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) {\n                sum1 += s(i).asDigit\n            } else {\n                sum2 += s(i).asDigit\n            }\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        val d = s.map(_.asDigit).toList\n        val d1 = d.slice(0, l / 2)\n        val d2 = d.slice(l / 2, l)\n        val s1 = d1.sum\n        val s2 = d2.sum\n        s1 - s2 == 0 || s1 - s2 == 11 || s1 - s2 == -11\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpf5i1peiq.scala:17)\n\tat Problem.main(tmpf5i1peiq.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).asDigit\n            else sum -= s(i).asDigit\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var diff = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) diff += s(i).asDigit\n            else diff -= s(i).asDigit\n        }\n        diff == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) sum1 += n1 % 10\n            else sum2 += n1 % 10\n            n1 /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpujwmv5pt.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpujwmv5pt.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi0_ii94j.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi0_ii94j.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi0_ii94j.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        if (l == 1) return false\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i) - '0'\n            else sum2 += s(i) - '0'\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        val a = s.toList.map(_.toString.toInt)\n        if (l % 2 == 0) {\n            val sum1 = a.slice(0, l / 2).sum\n            val sum2 = a.slice(l / 2, l).sum\n            sum1 - sum2 == 0\n        } else {\n            val sum1 = a.slice(0, l / 2).sum\n            val sum2 = a.slice(l / 2 + 1, l).sum\n            sum1 - sum2 == a(l / 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpatmpglxd.scala:21)\n\tat Problem.main(tmpatmpglxd.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n2 = n\n        while (n2 > 0) {\n            if (i % 2 == 0) sum1 += n2 % 10\n            else sum2 += n2 % 10\n            n2 /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2fs5_qx0.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 to s.length - 1) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i) - '0'\n            else sum2 += s(i) - '0'\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnnwhd4p8.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var n1 = n\n        while (n1 > 0) {\n            if (i % 2 == 0) sum1 += n1 % 10\n            else sum2 += n1 % 10\n            n1 /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ffc9gp.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ffc9gp.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) {\n                sum1 += s(i).asDigit\n            } else {\n                sum2 += s(i).asDigit\n            }\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val diff = s.map(x => x.asDigit).zipWithIndex.map(x => if (x._2 % 2 == 0) x._1 else -x._1).sum\n        diff % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val a = s.map(x => x.toString.toInt).toList\n        val b = a.zipWithIndex\n        val c = b.map(x => if (x._2 % 2 == 0) x._1 else -x._1)\n        c.sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        if (n < 10) return false\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:13:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var n1 = n\n        while (n1 > 0) {\n            sum1 += n1 % 10\n            n1 /= 10\n            sum2 += n1 % 10\n            n1 /= 10\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3d5tgk9l.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            sum1 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3d5tgk9l.scala:12:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            sum2 += n1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum += s(i).asDigit\n            else sum -= s(i).asDigit\n        }\n        sum % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i) - '0'\n            else sum2 += s(i) - '0'\n        }\n        return (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        (sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            i += 1\n            n /= 10\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpleqxv2_l.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpleqxv2_l.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpleqxv2_l.scala:13:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp494hk9s6.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 to l - 1) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        if (n < 0) isDiff(-n)\n        else if (n < 10) false\n        else {\n            val s = n.toString\n            val d = s.length\n            val d1 = s.substring(0, d / 2).toLong\n            val d2 = s.substring(d / 2, d).toLong\n            if (d1 == d2) false\n            else isDiff(abs(d1 - d2))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpoggt6ihf.scala:19)\n\tat Problem.main(tmpoggt6ihf.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'\n            else sum2 += s(i).toInt - '0'\n        }\n        abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        sum1 - sum2 == 0 || sum1 - sum2 == 11 || sum1 - sum2 == -11\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).toString.toInt\n            else sum2 += s(i).toString.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphpkbvamj.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphpkbvamj.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphpkbvamj.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb2ef7vxi.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var num = n\n        while (num > 0) {\n            sum1 += (num % 10)\n            num /= 10\n            sum2 += (num % 10)\n            num /= 10\n        }\n        return (sum1 - sum2).abs % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpee3bw6zg.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            sum1 += (num % \u001b[31m10\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpee3bw6zg.scala:12:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            sum2 += (num % \u001b[31m10\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        var nn = n\n        while (nn > 0) {\n            if (i % 2 == 0) sum1 += nn % 10\n            else sum2 += nn % 10\n            nn /= 10\n            i += 1\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_g8mhq9.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_g8mhq9.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += nn % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until s.length) {\n            if (i % 2 == 0) sum1 += s(i).toInt - '0'.toInt\n            else sum2 += s(i).toInt - '0'.toInt\n        }\n        sum1 - sum2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        val s = n.toString\n        val l = s.length\n        var sum1 = 0\n        var sum2 = 0\n        for (i <- 0 until l) {\n            if (i % 2 == 0) sum1 += s(i).asDigit\n            else sum2 += s(i).asDigit\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find whether a number is divisible by 11.\n    def isDiff(n : Long) : Boolean = {\n        if (n < 10) return false\n        var sum1 = 0\n        var sum2 = 0\n        var i = 0\n        while (n > 0) {\n            if (i % 2 == 0) sum1 += n % 10\n            else sum2 += n % 10\n            n /= 10\n            i += 1\n        }\n        return abs(sum1 - sum2) % 11 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) sum1 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33melse\u001b[0m sum2 += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxq5oco_x.scala:13:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
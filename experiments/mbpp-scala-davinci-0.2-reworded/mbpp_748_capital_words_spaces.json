{
  "name": "mbpp_748_capital_words_spaces",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to put spaces between words starting with capital letters in a given string.\n    def capitalWordsSpaces(str1 : String) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(capitalWordsSpaces((\"Python\")).equals((\"Python\")));\n    assert(capitalWordsSpaces((\"PythonProgrammingExamples\")).equals((\"Python Programming Examples\")));\n    assert(capitalWordsSpaces((\"GetReadyToBeCodingFreak\")).equals((\"Get Ready To Be Coding Freak\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toString.toUpperCase\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i).toString\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2",
    "        // split the string into an array of words\n        val words = str1.split(\" \")\n        // iterate through the array of words\n        for (i <- 0 until words.length) {\n            // if the first letter of the word is capital\n            if (words(i)(0).isUpper) {\n                // add a space before the word\n                words(i) = \" \" + words(i)\n            }\n        }\n        // return the array of words joined together\n        return words.mkString(\"\")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) {\n                if (str1(i - 1).isLower) str2 += \" \"\n                str2 += str1(i)\n            }\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = str1.split(\"(?=[A-Z])\")\n        var str3 = \"\"\n        for (i <- 0 until str2.length) {\n            str3 += str2(i) + \" \"\n        }\n        return str3.trim",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (i > 0 && str(i).isUpper) {\n                str = str.substring(0, i) + \" \" + str.substring(i)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else {\n                if (str1(i).isUpper && str1(i - 1).isLower) str2 += \" \" + str1(i)\n                else str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toString\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i).toString\n                } else {\n                    str2 += str1(i).toString\n                }\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str = str1.toCharArray\n        val str2 = new StringBuilder\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                str2.append(str(i))\n            } else if (str(i).isUpper && str(i - 1).isLower) {\n                str2.append(\" \")\n                str2.append(str(i))\n            } else {\n                str2.append(str(i))\n            }\n        }\n        str2.toString",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && !str1(i-1).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\" \").map(x => if (x.head.isUpper) x + \" \" else x).mkString(\"\")\n        str2.substring(0, str2.length - 1)",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str = str1\n        var i = 0\n        while (i < str.length - 1) {\n            if (str(i).isUpper && str(i + 1).isUpper) {\n                str = str.substring(0, i + 1) + \" \" + str.substring(i + 1)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        val str = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && !str1(i - 1).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toString.toUpperCase\n            } else if (str1(i - 1) == ' ') {\n                str2 += str1(i).toString.toUpperCase\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.toCharArray\n        var str3 = \"\"\n        for (i <- 0 until str2.length) {\n            if (i == 0) {\n                str3 += str2(i)\n            } else {\n                if (str2(i).isUpper) {\n                    str3 += \" \" + str2(i)\n                } else {\n                    str3 += str2(i)\n                }\n            }\n        }\n        str3",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.toCharArray.foldLeft(new StringBuilder)((sb, c) => {\n            if (c.isUpper) sb.append(\" \").append(c) else sb.append(c)\n        }).toString\n        str2.trim",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else {\n                if (str1(i).isUpper && str1(i - 1).isLower) str2 += \" \" + str1(i)\n                else str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\" \").map(x => x.split(\"\").map(y => if (y.matches(\"[A-Z]\")) \" \" + y else y).mkString).mkString\n        return str2.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (i > 0 && str(i).isUpper) {\n                str = str.substring(0, i) + \" \" + str.substring(i)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (i > 0 && str(i).isUpper) {\n                str = str.substring(0, i) + \" \" + str.substring(i)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && str1(i - 1).isLower) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i != 0 && str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n            i += 1\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str = str1\n        for (i <- 0 until str.length - 1) {\n            if (str(i).isUpper && str(i + 1).isLower) {\n                str = str.substring(0, i + 1) + \" \" + str.substring(i + 1)\n            }\n        }\n        return str",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\" \").map(x => if (x.head.isUpper) \" \" + x else x).mkString\n        str2.tail",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i > 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper && str1(i - 1).isLower) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = new StringBuilder()\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n        }\n        return str2.toString",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toString\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i).toString\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = str1.split(\" \").map(x => x.capitalize).mkString(\" \")\n        return str2",
    "        val str2 = str1.toList\n        val str3 = str2.foldLeft(\"\")((a,b) => if (b.isUpper) a + \" \" + b else a + b)\n        str3.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i - 1) == ' ') {\n                str2 += str1(i).toUpper\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = str1.toCharArray()\n        for (i <- 0 until str2.length - 1) {\n            if (str2(i).isUpper && str2(i + 1).isLower) {\n                str2 = str2.patch(i + 1, List(' '), 0)\n            }\n        }\n        str2.mkString",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str = str1.toList\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                result += str(i)\n            } else if (str(i).isUpper) {\n                result += \" \" + str(i)\n            } else {\n                result += str(i)\n            }\n        }\n        result",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        var str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2 = str2.replaceAll(\"\\\\s+\", \" \")\n        str2 = str2.trim\n        return str2",
    "        var str = str1\n        var str2 = \"\"\n        for (i <- 0 until str.length) {\n            if (i != 0 && str(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = new StringBuilder\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2.append(str1(i))\n            } else if (str1(i).isUpper) {\n                str2.append(\" \")\n                str2.append(str1(i))\n            } else {\n                str2.append(str1(i))\n            }\n            i += 1\n        }\n        str2.toString",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n            i += 1\n        }\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n            i += 1\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 = str2 + str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 = str2 + \" \" + str1(i)\n                } else {\n                    str2 = str2 + str1(i)\n                }\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 : String = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else {\n                if (str1(i).isUpper) str2 += \" \" + str1(i)\n                else str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else {\n                if (str1(i).isUpper) str2 += \" \" + str1(i)\n                else str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n            i += 1\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i != 0 && str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n            i += 1\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            }\n            else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            }\n            else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str = str1\n        var i = 0\n        while (i < str.length - 1) {\n            if (str(i).isUpper && str(i + 1).isUpper) {\n                str = str.substring(0, i + 1) + \" \" + str.substring(i + 1)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str = str1.toCharArray\n        val str2 = new StringBuilder\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                str2.append(str(i))\n            } else {\n                if (str(i).isUpper) {\n                    str2.append(\" \")\n                    str2.append(str(i))\n                } else {\n                    str2.append(str(i))\n                }\n            }\n        }\n        return str2.toString",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")"
  ]
}
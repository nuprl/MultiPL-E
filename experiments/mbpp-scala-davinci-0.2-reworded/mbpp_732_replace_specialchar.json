{
  "name": "mbpp_732_replace_specialchar",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace all occurrences of spaces, commas, or dots with a colon.\n    def replaceSpecialchar(text : String) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(replaceSpecialchar((\"Python language, Programming language.\")).equals((\"Python:language::Programming:language:\")));\n    assert(replaceSpecialchar((\"a b c,d e f\")).equals((\"a:b:c:d:e:f\")));\n    assert(replaceSpecialchar((\"ram reshma,ram rahim\")).equals((\"ram:reshma:ram:rahim\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        text.replaceAll(\"[ .,]\", \":\")",
    "        val specialChars = List(\" \", \",\", \".\")\n        var result = text\n        for (char <- specialChars) {\n            result = result.replace(char, \":\")\n        }\n        result",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ .,]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[\\\\s,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")",
    "        text.replaceAll(\"[ ,.]\", \":\")"
  ]
}
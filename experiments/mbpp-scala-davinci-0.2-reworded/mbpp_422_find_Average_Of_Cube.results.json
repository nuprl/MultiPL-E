{
  "name": "mbpp_422_find_Average_Of_Cube",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toFloat\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1j5rvbxr.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1L to n) sum += i * i * i\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) sum += i * i * i\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return (sum / n).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpv8nl5bt4.scala:13)\n\tat Problem.main(tmpv8nl5bt4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1trd1nfp.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toFloat\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1j5rvbxr.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwn4y_wa.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_409_min_product_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_409_min_product_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        list(0) * list(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.grouped(2).toList\n        val list4 = list3.map(x => x.product)\n        list4.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7pg8tc0.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7pg8tc0.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7pg8tc0.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7pg8tc0.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val prod = list1(i) * list1(j)\n                if (prod < min) min = prod\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vwixbez.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vwixbez.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vwixbez.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vwixbez.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        if (list1.length < 2) throw new IllegalArgumentException(\"List must have at least 2 elements\")\n        var min = list1(0) * list1(1)\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph8stzny1.scala:17:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph8stzny1.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph8stzny1.scala:17:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph8stzny1.scala:17:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.slice(0, list2.length / 2)\n        val list4 = list2.slice(list2.length / 2, list2.length)\n        val list5 = list3.zip(list4)\n        list5.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_83wrdwi.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_83wrdwi.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_83wrdwi.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_83wrdwi.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = list1(0) * list1(1)\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3yqzgsg.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3yqzgsg.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3yqzgsg.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3yqzgsg.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sortWith(_ < _)\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val list2 = list.reverse\n        val product = list(0) * list2(0)\n        product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljya8pl5.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljya8pl5.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljya8pl5.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljya8pl5.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val n = list.length\n        val a = list(0) * list(1)\n        val b = list(n - 2) * list(n - 1)\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsubgyus.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsubgyus.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsubgyus.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsubgyus.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sortWith(_ < _)\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.filter(x => x._2 % 2 == 0)\n        val list5 = list4.map(x => x._1)\n        val list6 = list5.map(x => x * list5(list5.indexOf(x) + 1))\n        list6.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 to list1.length - 1) {\n            for (j <- i + 1 to list1.length - 1) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                if (list1(i) * list1(j) < min) min = list1(i) * list1(j)\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        list2.head * list3.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.drop(1)\n        val list4 = list2.dropRight(1)\n        val list5 = list3.zip(list4)\n        val list6 = list5.map(x => x._1 * x._2)\n        list6.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val prod = list1(i) * list1(j)\n                if (prod < min) min = prod\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val min = list(0) * list(1)\n        val max = list(list.length - 1) * list(list.length - 2)\n        if (min > max) min else max\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.drop(list2.length - 2)\n        list3.product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val sortedList = list1.sorted\n        sortedList(0) * sortedList(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124331,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        list(0) * list(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sortWith(_ < _)\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.filter(x => x._2 % 2 == 0)\n        val list5 = list4.map(x => x._1)\n        list5.reduce(_ * _)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26fozvh3.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26fozvh3.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26fozvh3.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26fozvh3.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val prod = list1(i) * list1(j)\n                if (prod < min) min = prod\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqcop_d0.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqcop_d0.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqcop_d0.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqcop_d0.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val min1 = list2(0) * list2(1)\n        val min2 = list2(list2.length - 2) * list2(list2.length - 1)\n        if (min1 < min2) min1 else min2\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.dropRight(1)\n        val list4 = list2.drop(1)\n        val list5 = list3.zip(list4)\n        list5.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb_k2850.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb_k2850.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb_k2850.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb_k2850.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                if (list1(i) * list1(j) < min) min = list1(i) * list1(j)\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzi4oojn.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzi4oojn.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzi4oojn.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzi4oojn.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val prod = list1(i) * list1(j)\n                if (prod < min) min = prod\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.filter(x => x._2 % 2 == 0)\n        val list5 = list4.map(x => x._1)\n        val list6 = list5.map(x => x * list5(list5.indexOf(x) + 1))\n        list6.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvb3jbgu.scala:14:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.map(x => (x._1, x._2, x._2 + 1))\n        val list5 = list4.filter(x => x._3 < list4.length)\n        val list6 = list5.map(x => (x._1, list4(x._3)._1))\n        val list7 = list6.map(x => x._1 * x._2)\n        list7.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124355,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sortWith(_ < _)\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        return list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.map(x => (x._1, x._2, list2.length - x._2 - 1))\n        val list5 = list4.map(x => (x._1, x._2, x._3, x._2 * x._3))\n        val list6 = list5.sortBy(x => x._4)\n        val list7 = list6.map(x => x._1)\n        list7.head * list7.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vak6h1m.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vak6h1m.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vak6h1m.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vak6h1m.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 to list1.length - 1) {\n            for (j <- i + 1 to list1.length - 1) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyn5369t.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyn5369t.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyn5369t.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyn5369t.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.map(x => x * x)\n        list3.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk38_spc7.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk38_spc7.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk38_spc7.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk38_spc7.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj969dtcr.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.take(2)\n        list3.product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sortWith(_ < _)\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkgro4n2t.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.filter(x => x._2 % 2 == 0)\n        val list5 = list4.map(x => x._1)\n        val list6 = list5.grouped(2)\n        val list7 = list6.map(x => x.product)\n        val list8 = list7.min\n        list8\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyv3xaxda.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyv3xaxda.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyv3xaxda.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyv3xaxda.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val min1 = list2.head\n        val min2 = list2.tail.head\n        min1 * min2\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124355,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp74fjx560.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp74fjx560.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp74fjx560.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp74fjx560.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val min1 = list2(0) * list2(1)\n        val min2 = list2(list2.length - 1) * list2(list2.length - 2)\n        if (min1 < min2) min1 else min2\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.map(x => (x._1, x._2, x._2 + 1))\n        val list5 = list4.map(x => (x._1, x._2, x._3, x._1 * list2(x._3)))\n        val list6 = list5.filter(x => x._3 < list2.length)\n        val list7 = list6.sorted\n        list7(0)._4\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ek80y7r.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ek80y7r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ek80y7r.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ek80y7r.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        return list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.dropRight(1)\n        val list4 = list2.drop(1)\n        val list5 = list3.zip(list4)\n        val list6 = list5.map(x => x._1 * x._2)\n        list6.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnx2k3hu4.scala:14:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnx2k3hu4.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnx2k3hu4.scala:14:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnx2k3hu4.scala:14:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        return minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul_1pe59.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul_1pe59.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul_1pe59.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul_1pe59.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124355,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.take(2)\n        list3.product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.take(2)\n        list3.product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val (min1, min2) = (list(0), list(1))\n        min1 * min2\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx_mpgbs.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx_mpgbs.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx_mpgbs.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx_mpgbs.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124355,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2q5yoprq.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val min1 = list2(0) * list2(1)\n        val min2 = list2(list2.length - 1) * list2(list2.length - 2)\n        if (min1 < min2) min1 else min2\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiik_gdjr.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.drop(list2.length - 2)\n        list3.product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.map(x => (x._1, x._2, list2.length - x._2 - 1))\n        val list5 = list4.map(x => (x._1, x._2, list2(x._3)))\n        val list6 = list5.map(x => (x._1, x._2, x._3, x._1 * x._3))\n        val list7 = list6.sorted\n        list7(0)._4\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhhcjab4.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhhcjab4.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhhcjab4.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhhcjab4.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0xxw6_be.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        val list4 = list3.map(x => x._1 * x._2)\n        list4.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdstuj9n.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdstuj9n.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdstuj9n.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdstuj9n.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_638_wind_chill",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n    def windChill(v : Long, t : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_638_wind_chill.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(windChill((120l), (35l)) == (40l));\n    assert(windChill((40l), (20l)) == (19l));\n    assert(windChill((10l), (8l)) == (6l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val v1 = v.toDouble\n        val t1 = t.toDouble\n        val w = 13.12 + 0.6215 * t1 - 11.37 * pow(v1, 0.16) + 0.3965 * t1 * pow(v1, 0.16)\n        round(w).toLong",
    "        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val v1 = v.toDouble\n        val t1 = t.toDouble\n        val w = 13.12 + 0.6215 * t1 - 11.37 * pow(v1, 0.16) + 0.3965 * t1 * pow(v1, 0.16)\n        round(w).toLong",
    "        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val v1 = v.toDouble\n        val t1 = t.toDouble\n        val w = 13.12 + 0.6215 * t1 - 11.37 * pow(v1, 0.16) + 0.3965 * t1 * pow(v1, 0.16)\n        round(w).toLong",
    "        val v1 = pow(v, 0.16)\n        val t1 = 0.4275 * t\n        val t2 = 35.74 + 0.6215 * t\n        val t3 = 0.4275 * t + 35.75\n        val t4 = pow(v, 0.16)\n        val t5 = 0.16\n        val t6 = pow(v, 0.16)\n        val t7 = 0.4275 * t\n        val t8 = 35.74 + 0.6215 * t\n        val t9 = 0.4275 * t + 35.75\n        val t10 = pow(v, 0.16)\n        val t11 = 0.16\n        val t12 = pow(v, 0.16)\n        val t13 = 0.4275 * t\n        val t14 = 35.74 + 0.6215 * t\n        val t15 = 0.4275 * t + 35.75\n        val t16 = pow(v, 0.16)\n        val t17 = 0.16\n        val t18 = pow(v, 0.16)\n        val t19 = 0.4275 * t\n        val t20 = 35.74 + 0.6215 * t\n        val t21 = 0.4275 * t + 35.75\n        val t22 = pow(v, 0.16)\n        val t23 = 0.16\n        val t24 = pow(v, 0.16)\n        val t25 = 0.4275 * t\n        val t26 = 35.74 + 0.6215 * t\n        val t27 = 0.4275 * t + 35.75\n        val t28 = pow(v, 0.16)\n        val t29 = 0.16\n        val t30 = pow(v, 0.16)\n        val t31 = 0.4275 * t\n        val t32 = 35.74 + 0.6215 * t\n        val t33 = 0.4275 * t + 35.75\n        val t34 = pow(v, 0.16)\n        val t35 = 0.16\n        val t36 = pow(v, 0.16)\n        val t37 = 0.4275 * t",
    "        if (v < 4.8 || t > 10) return t\n        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val v_ms = v * 1000 / 3600\n        val t_k = t + 273\n        val wci = 13.12 + 0.6215 * t - 11.37 * pow(v_ms, 0.16) + 0.3965 * t * pow(v_ms, 0.16)\n        round(wci).toLong",
    "        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val v1 = v.toDouble\n        val t1 = t.toDouble\n        val w = 13.12 + 0.6215 * t1 - 11.37 * pow(v1, 0.16) + 0.3965 * t1 * pow(v1, 0.16)\n        round(w).toLong",
    "        val v1 = v.toDouble\n        val t1 = t.toDouble\n        val w = 13.12 + 0.6215 * t1 - 11.37 * pow(v1, 0.16) + 0.3965 * t1 * pow(v1, 0.16)\n        round(w).toLong",
    "        val v_ms = v * 1000 / 3600\n        val v_pow = pow(v_ms, 0.16)\n        val wci = 13.12 + 0.6215 * t - 11.37 * v_pow + 0.3965 * t * v_pow\n        round(wci).toLong",
    "        val w = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16))\n        return round(w).toLong",
    "        val vms = v * 1000 / 3600\n        val tk = t + 273\n        val wci = 13.12 + 0.6215 * t - 11.37 * pow(vms, 0.16) + 0.3965 * t * pow(vms, 0.16)\n        round(wci).toLong",
    "        val w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)\n        round(w).toLong",
    "        val v1 = v.toDouble\n        val t1 = t.toDouble\n        val w = 13.12 + 0.6215 * t1 - 11.37 * pow(v1, 0.16) + 0.3965 * t1 * pow(v1, 0.16)\n        round(w).toLong",
    "        val w = (13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16)).toLong\n        if (w < t) t else w"
  ]
}
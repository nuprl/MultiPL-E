{
  "name": "mbpp_785_tuple_str_int",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_785_tuple_str_int.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\").map(_.toLong)\n        val test_int_tuple = (test_str_arr(0), test_str_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvvoiqi8q.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvvoiqi8q.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvvoiqi8q.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvvoiqi8q.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \").map(_.toInt)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpruwwe1dk.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpruwwe1dk.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpruwwe1dk.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpruwwe1dk.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\").map(_.toInt)\n        val test_int = test_str_arr.reduceLeft(_ * 10 + _)\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510328,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2e1sya83.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2e1sya83.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2e1sya83.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2e1sya83.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toInt\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpljj2g33n.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpljj2g33n.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpljj2g33n.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpljj2g33n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\")\n        var test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmprh5mv6ms.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmprh5mv6ms.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmprh5mv6ms.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmprh5mv6ms.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \").map(_.toInt)\n        var test_tup = (test_arr(0), test_arr(1))\n        return test_tup._1 * test_tup._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8m9k_4kj.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m9k_4kj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m9k_4kj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m9k_4kj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var int_arr = new Array[Long](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            int_arr(i) = str_arr(i).toLong\n        }\n        return int_arr(0) * int_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpopdeicag.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpopdeicag.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpopdeicag.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpopdeicag.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\")\n        var test_int = test_arr.map(x => x.toInt)\n        var test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfcglbby_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfcglbby_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfcglbby_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfcglbby_.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        test_arr(0) * test_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        return int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val tuple = (int_arr(0), int_arr(1))\n        val result = tuple._1 * tuple._2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp1hvk_lcr.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1hvk_lcr.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1hvk_lcr.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1hvk_lcr.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        val test_int_tuple = test_tuple._1 * test_tuple._2\n        return test_int_tuple\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptiopc6k9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptiopc6k9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptiopc6k9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptiopc6k9.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int = test_tuple._1 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkgt_yxwo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkgt_yxwo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkgt_yxwo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkgt_yxwo.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_split = test_str.split(\",\")\n        val test_int = (test_str_split(0).toInt, test_str_split(1).toInt)\n        val test_int_product = test_int._1 * test_int._2\n        test_int_product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmae2u8ke.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmae2u8ke.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmae2u8ke.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmae2u8ke.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9sl5r1nh.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9sl5r1nh.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9sl5r1nh.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9sl5r1nh.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_tuple = test_str.split(\",\").map(_.toLong)\n        val test_int = test_tuple.reduceLeft(_ * _)\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4tpmqlcc.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4tpmqlcc.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4tpmqlcc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4tpmqlcc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toInt)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tuple._1 * pow(10, test_tuple._2.toInt).toInt + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpsp51ghe6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsp51ghe6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsp51ghe6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsp51ghe6.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \")\n        var test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp6jnbgqt9.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6jnbgqt9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6jnbgqt9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6jnbgqt9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        test_arr(0) * test_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toInt)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var int_arr = new Array[Int](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            int_arr(i) = str_arr(i).toInt\n        }\n        var int_tuple = (int_arr(0), int_arr(1))\n        return int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_tuple = test_str.split(\",\").map(_.toLong)\n        val test_int = test_tuple(0) * 1000000 + test_tuple(1)\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpw6n7tkt_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw6n7tkt_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw6n7tkt_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw6n7tkt_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var result : Long = 0\n        var str_arr = test_str.split(\",\")\n        for (i <- 0 until str_arr.length) {\n            result += str_arr(i).toLong * pow(10, str_arr.length - i - 1).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpa_09u73w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa_09u73w.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa_09u73w.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa_09u73w.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(x => x.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpp74szk0s.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp74szk0s.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp74szk0s.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp74szk0s.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        val test_tuple_int = test_tuple._1 * test_tuple._2\n        return test_tuple_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_kyqp5pr.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_kyqp5pr.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_kyqp5pr.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_kyqp5pr.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toInt)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        val test_int_tuple = test_tuple._1 * test_tuple._2\n        return test_int_tuple\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpp23cqt6v.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp23cqt6v.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp23cqt6v.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp23cqt6v.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_int = 0L\n        var test_arr = test_str.split(\" \")\n        for (i <- 0 until test_arr.length) {\n            test_int += test_arr(i).toInt * pow(10, test_arr.length - i - 1).toInt\n        }\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvccci2sv.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvccci2sv.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvccci2sv.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvccci2sv.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var int_arr = new Array[Long](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            int_arr(i) = str_arr(i).toLong\n        }\n        return int_arr.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9i_9c04i.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9i_9c04i.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9i_9c04i.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9i_9c04i.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test(0), test(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp17usz4cb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp17usz4cb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp17usz4cb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp17usz4cb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_array = test_str.split(\",\")\n        val test_int_array = test_str_array.map(x => x.toInt)\n        val test_tuple = (test_int_array(0), test_int_array(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqviywxdm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqviywxdm.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqviywxdm.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqviywxdm.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpeva72fgm.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeva72fgm.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeva72fgm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeva72fgm.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        test_int.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9qayyn_6.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9qayyn_6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9qayyn_6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9qayyn_6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpajesy7_i.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpajesy7_i.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpajesy7_i.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpajesy7_i.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tup = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tup._1 * test_tup._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpthfkbnio.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toLong)\n        test_int.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwc7xr7pt.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwc7xr7pt.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwc7xr7pt.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwc7xr7pt.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_l8__ehg.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_l8__ehg.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_l8__ehg.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_l8__ehg.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_sum = test_int_tuple._1 + test_int_tuple._2\n        return test_int_tuple_sum\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp42h8pn6j.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp42h8pn6j.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp42h8pn6j.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp42h8pn6j.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tuple._1 * pow(10, test_arr(1).length).toInt + test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqopd2oeo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqopd2oeo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqopd2oeo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqopd2oeo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123347,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        return int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        return test_str.split(\",\").map(_.toLong).product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123348,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:9:11 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_str_arr = test_str.split(\",\")\n        var test_int_arr = new Array[Long](test_str_arr.length)\n        for (i <- 0 until test_str_arr.length) {\n            test_int_arr(i) = test_str_arr(i).toLong\n        }\n        return test_int_arr.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123347,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwwe8ub4.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwwe8ub4.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwwe8ub4.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwwe8ub4.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\").map(_.toInt)\n        val test_int = test_str_arr.reduceLeft((x, y) => x * 10 + y)\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpecj_axu0.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpecj_axu0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpecj_axu0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpecj_axu0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9q_55hsp.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9q_55hsp.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9q_55hsp.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9q_55hsp.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toInt\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toInt)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_str = test_int_tuple.toString\n        val test_int_tuple_str_int = test_int_tuple_str.toInt\n        return test_int_tuple_str_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwm8wjhhc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwm8wjhhc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwm8wjhhc.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwm8wjhhc.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1), test_arr(2))\n        test_tuple._1 * 1000000 + test_tuple._2 * 1000 + test_tuple._3\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpeb27li5c.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeb27li5c.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeb27li5c.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeb27li5c.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        test_arr(0) * 1000000 + test_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2.toInt).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpq2xnnmg2.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq2xnnmg2.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq2xnnmg2.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq2xnnmg2.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqrw7511r.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt33jtck0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until test_arr.length) {\n            result += test_arr(i) * pow(10, test_arr.length - i - 1).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp817e10k5.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp817e10k5.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp817e10k5.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp817e10k5.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfxbxiq1u.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfxbxiq1u.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfxbxiq1u.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfxbxiq1u.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(_.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_str = test_int_tuple.toString\n        val test_int_tuple_str_int = test_int_tuple_str.toInt\n        return test_int_tuple_str_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123348,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpr0mlef56.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr0mlef56.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr0mlef56.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr0mlef56.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        val test_int_tuple = test_tuple._1 * test_tuple._2\n        test_int_tuple\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123348,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4my_p32k.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4my_p32k.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4my_p32k.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4my_p32k.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        val int_tuple_sum = int_tuple._1 + int_tuple._2\n        return int_tuple_sum\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpsbi1m9fk.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsbi1m9fk.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsbi1m9fk.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsbi1m9fk.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123350,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toInt\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkuldguy.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        test_arr(0) * 1000000 + test_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpazn0b1cm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123350,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmaje3wzb.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123350,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmps9al3ebj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmps9al3ebj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmps9al3ebj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmps9al3ebj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toInt, test_arr(1).toInt)\n        test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123350,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpc8l7whjd.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpc8l7whjd.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpc8l7whjd.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpc8l7whjd.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq586n3qi.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_str = test_int_tuple.toString\n        val test_int_tuple_str_arr = test_int_tuple_str.split(\",\")\n        val test_int_tuple_str_arr_int = test_int_tuple_str_arr.map(x => x.toInt)\n        val test_int_tuple_str_arr_int_str = test_int_tuple_str_arr_int.mkString\n        test_int_tuple_str_arr_int_str.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpbg_5c0k3.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpbg_5c0k3.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpbg_5c0k3.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpbg_5c0k3.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(x => x.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123361,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpjiybw6u6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjiybw6u6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjiybw6u6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjiybw6u6.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_arr = test_str_arr.map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgpr2tra3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgpr2tra3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgpr2tra3.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgpr2tra3.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp6lsk88zg.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6lsk88zg.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6lsk88zg.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6lsk88zg.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8_4h80ww.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8_4h80ww.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8_4h80ww.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8_4h80ww.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\" \")\n        var int_arr = new Array[Long](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            int_arr(i) = str_arr(i).toLong\n        }\n        return int_arr(0) * int_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0fje1r5f.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0fje1r5f.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0fje1r5f.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0fje1r5f.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        val test_tuple_int = test_tuple._1 * test_tuple._2\n        return test_tuple_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpziq9tbob.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpziq9tbob.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpziq9tbob.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpziq9tbob.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1), test_int(2))\n        test_tuple._1 * 1000000 + test_tuple._2 * 1000 + test_tuple._3\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmb1fabce.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmb1fabce.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmb1fabce.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmb1fabce.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        val test_tuple_int = test_tuple._1 * test_tuple._2\n        return test_tuple_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_zlazzi6.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1), test_int_arr(2))\n        val test_int_tuple_sum = test_int_tuple._1 + test_int_tuple._2 + test_int_tuple._3\n        test_int_tuple_sum\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp93200n62.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp93200n62.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp93200n62.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp93200n62.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var result : Long = 0\n        for (i <- 0 until test_str.length) {\n            result += (test_str(i) - '0') * pow(10, test_str.length - i - 1).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx878m_sm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx878m_sm.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx878m_sm.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx878m_sm.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        test_arr(0) * test_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        return int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwg5cof_7.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \")\n        var test_int = test_arr.map(x => x.toInt)\n        var test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuhdx_grb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuhdx_grb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuhdx_grb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuhdx_grb.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        (test_arr(0).toLong, test_arr(1).toLong)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8skw6al.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        (test_arr(\u001b[31m0\u001b[0m).toLong, test_arr(\u001b[31m1\u001b[0m).toLong)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (Long, Long)\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_arr = ArrayBuffer[Long]()\n        for (i <- 0 to test_str_arr.length - 1) {\n            test_arr += test_str_arr(i).toLong\n        }\n        return test_arr(0) * test_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpr8qkdmn7.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr8qkdmn7.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr8qkdmn7.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr8qkdmn7.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tup = (test_int(0), test_int(1))\n        test_tup._1 * test_tup._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpg6a996ae.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpg6a996ae.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpg6a996ae.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpg6a996ae.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkwkmymqx.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\")\n        var test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val res = int_arr.reduce((x, y) => x * 10 + y)\n        return res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpn70o5_nl.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn70o5_nl.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn70o5_nl.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn70o5_nl.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_tuple = test_str.split(\",\").map(_.toLong)\n        val test_int = test_tuple(0) * test_tuple(1)\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpdmxps51m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdmxps51m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdmxps51m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdmxps51m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(_.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpq8kkfxvf.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq8kkfxvf.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq8kkfxvf.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq8kkfxvf.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfn_ftzen.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        val test_long = test_tuple._1 * test_tuple._2\n        return test_long\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_751_check_min_heap",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) false\n                else if (right < arr.length && arr(index) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        if (arr.length == 0) return true\n        for (i <- 0 until arr.length / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = index * 2 + 1\n                val right = index * 2 + 2\n                if (left < arr.length && arr(left) < arr(index)) false\n                else if (right < arr.length && arr(right) < arr(index)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 1 to n/2) {\n            val left = 2 * i - 1\n            val right = 2 * i\n            if (left < n && arr(i - 1) > arr(left)) return false\n            if (right < n && arr(i - 1) > arr(right)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n / 2) {\n            if (2 * i + 1 < n && arr(i) > arr(2 * i + 1)) return false\n            if (2 * i + 2 < n && arr(i) > arr(2 * i + 2)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        if (arr.length == 1) true\n        else {\n            val left = arr(1)\n            val right = if (arr.length >= 3) arr(2) else Long.MaxValue\n            val min = min(left, right)\n            if (arr(0) > min) false\n            else checkMinHeap(arr.slice(1, arr.length))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp1wegqin8.scala:10:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(left, right)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(arr, left) && check(arr, right)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = index * 2 + 1\n                val right = index * 2 + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def isMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                isMinHeap(arr, left) && isMinHeap(arr, right)\n            }\n        }\n        isMinHeap(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        for (i <- 0 until arr.length / 2) {\n            if (arr(i) > arr(2 * i + 1)) return false\n            if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                val leftValid = if (left >= arr.length) true else arr(i) <= arr(left)\n                val rightValid = if (right >= arr.length) true else arr(i) <= arr(right)\n                leftValid && rightValid && check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n) {\n            val l = 2 * i + 1\n            val r = 2 * i + 2\n            if (l < n && arr(i) > arr(l)) return false\n            if (r < n && arr(i) > arr(r)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def checkMinHeap(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(left) < arr(i)) return false\n            if (right < n && arr(right) < arr(i)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) false\n                else if (right < arr.length && arr(index) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                val leftValid = if (left < arr.length) arr(left) >= arr(i) else true\n                val rightValid = if (right < arr.length) arr(right) >= arr(i) else true\n                leftValid && rightValid && check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        if (arr.length == 1) return true\n        val left = arr.length / 2\n        val right = arr.length - 1\n        for (i <- left to right) {\n            if (arr(i) < arr(i / 2)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def recur(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else recur(arr, left) && recur(arr, right)\n            }\n        }\n        recur(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        if (arr.length == 1) return true\n        for (i <- 0 until arr.length / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        for (i <- 0 until arr.length / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) return true\n            val left = 2 * index + 1\n            val right = 2 * index + 2\n            if (left < arr.length && arr(left) < arr(index)) return false\n            if (right < arr.length && arr(right) < arr(index)) return false\n            check(arr, left) && check(arr, right)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i > arr.length / 2 - 1) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(arr, i * 2 + 1) && check(arr, i * 2 + 2)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122419,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left >= arr.length) check(arr, right)\n                else if (right >= arr.length) {\n                    if (arr(i) <= arr(left)) check(arr, right)\n                    else false\n                }\n                else {\n                    if (arr(i) <= arr(left) && arr(i) <= arr(right)) check(arr, right)\n                    else false\n                }\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpet7dlssg.scala:27)\n\tat Problem.main(tmpet7dlssg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(left) < arr(i)) return false\n            if (right < n && arr(right) < arr(i)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def isMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else isMinHeap(arr, left) && isMinHeap(arr, right)\n            }\n        }\n        isMinHeap(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122422,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        for (i <- 1 until arr.length) {\n            if (arr(i) < arr(i / 2)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) false\n                else if (right < arr.length && arr(index) > arr(right)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(arr, left) && check(arr, right)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = index * 2 + 1\n                val right = index * 2 + 2\n                if (left < arr.length && arr(left) < arr(index)) false\n                else if (right < arr.length && arr(right) < arr(index)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = index * 2 + 1\n                val right = index * 2 + 2\n                if (left < arr.length && arr(index) > arr(left)) false\n                else if (right < arr.length && arr(index) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(left) < arr(i)) return false\n            if (right < n && arr(right) < arr(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        if (arr.length == 0) return true\n        for (i <- 0 until arr.length / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(arr, left) && check(arr, right)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        var i = 0\n        while (i < arr.length) {\n            if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) return false\n            if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) return false\n            i += 1\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def checkMinHeap(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(left) < arr(i)) return false\n            if (right < n && arr(right) < arr(i)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(arr, i + 1)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val leftIndex = 2 * index + 1\n                val rightIndex = 2 * index + 2\n                if (leftIndex < arr.length && arr(index) > arr(leftIndex)) return false\n                if (rightIndex < arr.length && arr(index) > arr(rightIndex)) return false\n                check(leftIndex) && check(rightIndex)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index > arr.length - 1) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) false\n                else if (right < arr.length && arr(right) < arr(index)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val l = 2 * i + 1\n                val r = 2 * i + 2\n                if (l < arr.length && arr(l) < arr(i)) return false\n                if (r < arr.length && arr(r) < arr(i)) return false\n                check(arr, l) && check(arr, r)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        if (arr.length == 0) return true\n        var i = 0\n        while (i < arr.length) {\n            if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) return false\n            if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) return false\n            i += 1\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        if (arr.length == 0) return true\n        val lastParent = arr.length / 2 - 1\n        for (i <- 0 to lastParent) {\n            val leftChild = 2 * i + 1\n            val rightChild = 2 * i + 2\n            if (leftChild < arr.length && arr(i) > arr(leftChild)) return false\n            if (rightChild < arr.length && arr(i) > arr(rightChild)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(arr, i + 1)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(arr, left) && check(arr, right)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def checkMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(arr, left) && check(arr, right)\n        }\n        check(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) false\n                else if (right < arr.length && arr(right) < arr(index)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def checkMinHeap(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def checkMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)\n    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
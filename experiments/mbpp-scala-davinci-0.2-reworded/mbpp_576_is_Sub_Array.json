{
  "name": "mbpp_576_is_Sub_Array",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to check whether a list is sublist of another or not.\n    def isSubArray(A : List[Long], B : List[Long]) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(isSubArray((List[Long](1l.toLong, 4l.toLong, 3l.toLong, 5l.toLong)), (List[Long](1l.toLong, 2l.toLong))) == (false));\n    assert(isSubArray((List[Long](1l.toLong, 2l.toLong, 1l.toLong)), (List[Long](1l.toLong, 2l.toLong, 1l.toLong))) == (true));\n    assert(isSubArray((List[Long](1l.toLong, 0l.toLong, 2l.toLong, 2l.toLong)), (List[Long](2l.toLong, 2l.toLong, 0l.toLong))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        val m = A.length\n        val n = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (B(i) == A(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        var i = 0;\n        var j = 0;\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1;\n                j += 1;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.length) true else false",
    "        var result = false\n        for (i <- 0 until A.length) {\n            if (A(i) == B(0)) {\n                var j = 0\n                while (j < B.length && i + j < A.length && A(i + j) == B(j)) {\n                    j += 1\n                }\n                if (j == B.length) {\n                    result = true\n                    return result\n                }\n            }\n        }\n        result",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            val C = B.sliding(A.length).toList\n            C.exists(x => x == A)\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        var i = 0\n        while (i < A.length) {\n            if (A(i) != B(i)) return false\n            i += 1\n        }\n        return true",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < B.length && j < A.length) {\n            if (B(i) == A(j)) {\n                i += 1\n                j += 1\n            } else {\n                i += 1\n                j = 0\n            }\n        }\n        if (j == A.length) return true\n        return false",
    "        var i = 0\n        var j = 0\n        var flag = false\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i += 1\n                j = 0\n            }\n            if(j == B.length) {\n                flag = true\n                return flag\n            }\n        }\n        return flag",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (B.slice(i, i + A.length) == A) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) false\n        else {\n            val n = A.length\n            val m = B.length\n            for (i <- 0 to m - n) {\n                var j = 0\n                while (j < n && A(j) == B(i + j)) j += 1\n                if (j == n) return true\n            }\n            false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 until A.length) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        return false",
    "        if (A.length > B.length) false\n        else {\n            val m = A.length\n            val n = B.length\n            for (i <- 0 to n - m) {\n                var j = 0\n                while (j < m && A(j) == B(i + j)) j += 1\n                if (j == m) return true\n            }\n            false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < B.length && j < A.length) {\n            if (A(j) == B(i)) {\n                j += 1\n            }\n            i += 1\n        }\n        if (j == A.length) return true\n        return false",
    "        if (A.length > B.length) false\n        else {\n            var i = 0\n            var j = 0\n            while (i < B.length && j < A.length) {\n                if (A(j) == B(i)) {\n                    i += 1\n                    j += 1\n                }\n                else {\n                    i += 1\n                    j = 0\n                }\n            }\n            if (j == A.length) true\n            else false\n        }",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.size > B.size) false\n        else {\n            val subArray = B.sliding(A.size).toList\n            subArray.exists(x => x == A)\n        }",
    "        if (A.length > B.length) false\n        else if (A.length == B.length) A.equals(B)\n        else {\n            var i = 0\n            var j = 0\n            while (i < A.length && j < B.length) {\n                if (A(i) == B(j)) {\n                    i += 1\n                    j += 1\n                }\n                else {\n                    i = 0\n                    j += 1\n                }\n            }\n            if (i == A.length) true\n            else false\n        }",
    "        if (A.length > B.length) false\n        else {\n            val A_sorted = A.sorted\n            val B_sorted = B.sorted\n            var i = 0\n            var j = 0\n            while (i < A_sorted.length && j < B_sorted.length) {\n                if (A_sorted(i) == B_sorted(j)) {\n                    i += 1\n                    j += 1\n                }\n                else j += 1\n            }\n            if (i == A_sorted.length) true\n            else false\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.equals(B.slice(i, i + A.length))) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) true else false",
    "        if (A.length > B.length) return false\n        val n = A.length\n        val m = B.length\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        false",
    "        if (A.length > B.length) false\n        else {\n            val a = A.toArray\n            val b = B.toArray\n            var i = 0\n            var j = 0\n            while (i < a.length && j < b.length) {\n                if (a(i) == b(j)) {\n                    i += 1\n                    j += 1\n                } else {\n                    i = 0\n                    j += 1\n                }\n            }\n            i == a.length\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 until A.length) {\n                if (A(j) != B(i + j)) flag = false\n            }\n            if (flag) return true\n        }\n        return false",
    "        val m = A.length\n        val n = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (B(i) == A(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A == B.slice(i, i + A.length)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        var result = false\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) result = true\n        result",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A == B.slice(i, i + A.length)) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            val a = A.toArray\n            val b = B.toArray\n            val n = a.length\n            val m = b.length\n            var i = 0\n            var j = 0\n            while (i < m && j < n) {\n                if (a(j) == b(i)) {\n                    i += 1\n                    j += 1\n                }\n                else {\n                    i = i - j + 1\n                    j = 0\n                }\n            }\n            if (j == n) true\n            else false\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        def isSubArrayHelper(A : List[Long], B : List[Long], i : Int, j : Int) : Boolean = {\n            if (i == A.length) true\n            else if (j == B.length) false\n            else if (A(i) == B(j)) isSubArrayHelper(A, B, i + 1, j + 1)\n            else isSubArrayHelper(A, B, i, j + 1)\n        }\n        isSubArrayHelper(A, B, 0, 0)",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var isSub = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    isSub = false\n                    break\n                }\n            }\n            if (isSub) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            var i = 0\n            var j = 0\n            while (i < A.length && j < B.length) {\n                if (A(i) == B(j)) {\n                    i += 1\n                    j += 1\n                }\n                else {\n                    i = 0\n                    j += 1\n                }\n            }\n            if (i == A.length) true\n            else false\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A == B.slice(i, i + A.length)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) false\n        else {\n            val C = B.sliding(A.length).toList\n            C.exists(x => x == A)\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) false\n        else {\n            val a = A.toArray\n            val b = B.toArray\n            val dp = Array.ofDim[Boolean](n + 1, m + 1)\n            for (i <- 0 to n) dp(i)(0) = true\n            for (i <- 1 to n) {\n                for (j <- 1 to m) {\n                    if (a(i - 1) == b(j - 1)) dp(i)(j) = dp(i - 1)(j - 1)\n                    else dp(i)(j) = dp(i)(j - 1)\n                }\n            }\n            dp(n)(m)\n        }",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        return false",
    "        val n = A.length\n        val m = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        else return false",
    "        var i = 0\n        var j = 0\n        var result = false\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) result = true\n        result",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 until A.length) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            val A_ = A.toArray\n            val B_ = B.toArray\n            for (i <- 0 to B.length - A.length) {\n                var flag = true\n                for (j <- 0 to A.length - 1) {\n                    if (A_(j) != B_(i + j)) {\n                        flag = false\n                        break\n                    }\n                }\n                if (flag) return true\n            }\n            false\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 until A.length) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.size > B.size) false\n        else {\n            var i = 0\n            var j = 0\n            while (i < A.size && j < B.size) {\n                if (A(i) == B(j)) {\n                    i += 1\n                    j += 1\n                }\n                else {\n                    i = 0\n                    j += 1\n                }\n            }\n            if (i == A.size) true\n            else false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var j = 0\n            while (j < A.length && A(j) == B(i + j)) j += 1\n            if (j == A.length) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        if (A.length > B.length) false\n        else {\n            for (i <- 0 to B.length - A.length) {\n                var flag = true\n                for (j <- 0 to A.length - 1) {\n                    if (A(j) != B(i + j)) {\n                        flag = false\n                        break\n                    }\n                }\n                if (flag) return true\n            }\n            false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        def isSubArray(A : List[Long], B : List[Long], i : Int) : Boolean = {\n            if (i == A.length) true\n            else if (A(i) == B(0)) {\n                var j = 1\n                while (j < B.length && A(i + j) == B(j)) j += 1\n                if (j == B.length) true\n                else isSubArray(A, B, i + 1)\n            }\n            else isSubArray(A, B, i + 1)\n        }\n        if (A.length < B.length) false\n        else isSubArray(A, B, 0)",
    "        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.drop(i)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 until B.length - A.length + 1) {\n            if (A.equals(B.slice(i, i + A.length))) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.equals(B.slice(i, i + A.length))) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && B(i + j) == A(j)) {\n                j += 1\n            }\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (B.length > A.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i += 1\n                j = 0\n            }\n        }\n        if (j == B.length) return true\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if(j == B.length) true else false",
    "        if (A.length > B.length) false\n        else {\n            val len = A.length\n            for (i <- 0 to B.length - len) {\n                if (A == B.slice(i, i + len)) return true\n            }\n            false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        val n = A.length\n        val m = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        var i = 0;\n        var j = 0;\n        while(i < A.length && j < B.length) {\n            if(A(i) == B(j)) {\n                i += 1;\n                j += 1;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if(j == B.length) true else false;",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        return i == A.length",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        if (A.length > B.length) false\n        else {\n            var i = 0\n            var j = 0\n            while (i < A.length && j < B.length) {\n                if (A(i) == B(j)) {\n                    i += 1\n                    j += 1\n                }\n                else j += 1\n            }\n            if (i == A.length) true\n            else false\n        }",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        return false",
    "        if (A.size > B.size) return false\n        for (i <- 0 to B.size - A.size) {\n            if (A.equals(B.slice(i, i + A.size))) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        val n = A.length\n        val m = B.length\n        val C = new Array[Long](n + 1)\n        for (i <- 0 until n) {\n            C(i + 1) = C(i) + A(i)\n        }\n        for (i <- 0 until m) {\n            if (C(i + 1) == B(i)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < B.length && j < A.length) {\n            if (A(j) == B(i)) {\n                j += 1\n            }\n            i += 1\n        }\n        if (j == A.length) return true\n        return false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            var i = 0\n            var j = 0\n            while (i < A.length && j < B.length) {\n                if (A(i) == B(j)) {\n                    i += 1\n                    j += 1\n                }\n                else {\n                    i = 0\n                    j += 1\n                }\n            }\n            if (i == A.length) true\n            else false\n        }",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                j += 1\n            }\n        }\n        if (i == A.length) return true\n        else return false",
    "        val m = A.length\n        val n = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (A(j) == B(i)) {\n                j += 1\n            }\n            i += 1\n        }\n        return (j == m)",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            for (i <- 0 to B.length - A.length) {\n                if (A.equals(B.slice(i, i + A.length))) return true\n            }\n            false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            for (i <- 0 to B.length - A.length) {\n                if (A == B.slice(i, i + A.length)) return true\n            }\n            false\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while(i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        return i == A.length",
    "        if (A.length < B.length) return false\n        val C = A.sliding(B.length).toList\n        C.contains(B)",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        if (A.size > B.size) return false\n        for (i <- 0 to B.size - A.size) {\n            var flag = true\n            for (j <- 0 to A.size - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        if (A.isEmpty) return true\n        if (A.head == B.head) {\n            if (isSubArray(A.tail, B.tail)) return true\n        }\n        return isSubArray(A, B.tail)",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A.zip(B.slice(i, i + A.length)).forall(x => x._1 == x._2)) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        val C = new Array[Long](n)\n        for (i <- 0 until n) C(i) = A(i)\n        for (i <- 0 until m - n + 1) {\n            var j = 0\n            while (j < n && C(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            for (i <- 0 to B.length - A.length) {\n                if (A == B.slice(i, i + A.length)) return true\n            }\n            false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) false\n        else if (A.length == B.length) A == B\n        else {\n            val B_ = B.sliding(A.length).toList\n            B_.exists(x => x == A)\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        for (i <- 0 to A.length - B.length) {\n            var flag = true\n            for (j <- 0 to B.length - 1) {\n                if (A(i + j) != B(j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        val m = A.length\n        val n = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (B(i) == A(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = 0\n                j += 1\n            }\n        }\n        if (i == A.length) true else false",
    "        val a = A.toArray\n        val b = B.toArray\n        var i = 0\n        var j = 0\n        while (i < a.length && j < b.length) {\n            if (a(i) == b(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == b.length) true else false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (B.slice(i, i + A.length) == A) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        val n = A.length\n        val m = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        if (A.length > B.length) false\n        else {\n            for (i <- 0 to B.length - A.length) {\n                var flag = true\n                for (j <- 0 to A.length - 1) {\n                    if (A(j) != B(i + j)) {\n                        flag = false\n                        break\n                    }\n                }\n                if (flag) return true\n            }\n            false\n        }",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true\n        else false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) false\n        else {\n            val n = A.length\n            val m = B.length\n            for (i <- 0 to m - n) {\n                var j = 0\n                while (j < n && A(j) == B(i + j)) j += 1\n                if (j == n) return true\n            }\n            false\n        }",
    "        if (A.length > B.length) return false\n        for (i <- 0 until B.length - A.length + 1) {\n            var flag = true\n            for (j <- 0 until A.length) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A == B.slice(i, i + A.length)) return true\n        }\n        false",
    "        if (A.length > B.length) false\n        else {\n            val B_ = B.toArray\n            for (i <- 0 until B.length - A.length + 1) {\n                var flag = true\n                for (j <- 0 until A.length) {\n                    if (A(j) != B_(i + j)) {\n                        flag = false\n                        break\n                    }\n                }\n                if (flag) return true\n            }\n            false\n        }",
    "        if (A.length > B.length) {\n            return false\n        }\n        for (i <- 0 to B.length - A.length) {\n            var j = 0\n            while (j < A.length && A(j) == B(i + j)) {\n                j += 1\n            }\n            if (j == A.length) {\n                return true\n            }\n        }\n        return false",
    "        if (A.length > B.length) {\n            return false\n        }\n        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                j += 1\n            }\n        }\n        if (i == A.length) {\n            return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) {\n                j += 1\n            }\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        val n = A.length\n        val m = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A == B.slice(i, i + A.length)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) false\n        else {\n            var i = 0\n            var j = 0\n            while (i < A.length && j < B.length) {\n                if (A(i) == B(j)) {\n                    i += 1\n                    j += 1\n                }\n                else {\n                    i = 0\n                    j += 1\n                }\n            }\n            if (i == A.length) true\n            else false\n        }",
    "        val m = A.length\n        val n = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (B(i) == A(j)) {\n                i += 1\n                j += 1\n            }\n            else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            var flag = true\n            for (j <- 0 to A.length - 1) {\n                if (A(j) != B(i + j)) {\n                    flag = false\n                    break\n                }\n            }\n            if (flag) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            val a = A.toArray\n            val b = B.toArray\n            for (i <- 0 to b.length - a.length) {\n                var j = 0\n                while (j < a.length && b(i + j) == a(j)) j += 1\n                if (j == a.length) return true\n            }\n            false\n        }",
    "        val n = A.length\n        val m = B.length\n        var i = 0\n        var j = 0\n        while (i < n && j < m) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == m) true else false",
    "        if (A.size > B.size) return false\n        val n = A.size\n        val m = B.size\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) return false\n        for (i <- 0 to B.length - A.length) {\n            if (A == B.slice(i, i + A.length)) return true\n        }\n        return false",
    "        var i = 0\n        var j = 0\n        while (i < A.length && j < B.length) {\n            if (A(i) == B(j)) {\n                i += 1\n                j += 1\n            } else {\n                i = i - j + 1\n                j = 0\n            }\n        }\n        if (j == B.length) true else false",
    "        if (A.length > B.length) false\n        else {\n            val n = A.length\n            val m = B.length\n            for (i <- 0 to m - n) {\n                var j = 0\n                while (j < n && A(j) == B(i + j)) j += 1\n                if (j == n) return true\n            }\n            false\n        }",
    "        if (A.length > B.length) false\n        else {\n            val m = A.length\n            val n = B.length\n            for (i <- 0 to n - m) {\n                var j = 0\n                while (j < m && B(i + j) == A(j)) j += 1\n                if (j == m) return true\n            }\n            false\n        }",
    "        val n = A.length\n        val m = B.length\n        if (n > m) return false\n        for (i <- 0 to m - n) {\n            var j = 0\n            while (j < n && A(j) == B(i + j)) j += 1\n            if (j == n) return true\n        }\n        return false",
    "        if (A.length > B.length) false\n        else {\n            val C = B.sliding(A.length).toList\n            C.exists(x => x == A)\n        }"
  ]
}
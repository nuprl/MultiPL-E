{
  "name": "mbpp_612_merge",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_612_merge.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => merge(ys)\n                case _ => Nil\n            }\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp45phwo83.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp45phwo83.scala:17:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp45phwo83.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        val lst3 = lst2.map(x => x.asInstanceOf[List[Any]])\n        val lst4 = lst3.map(x => x.map(y => y.asInstanceOf[Int]))\n        val lst5 = lst4.map(x => x(0))\n        val lst6 = lst4.map(x => x(1))\n        List(lst5, lst6)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptk5v1r_6.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptk5v1r_6.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptk5v1r_6.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x:Int, y:Int) :: xs => (x :: merge(xs).asInstanceOf[List[Int]], y :: merge(xs).asInstanceOf[List[Int]])\n            case (x:String, y:String) :: xs => (x :: merge(xs).asInstanceOf[List[String]], y :: merge(xs).asInstanceOf[List[String]])\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5dv0psna.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5dv0psna.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5dv0psna.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x\n                merge(xs) match {\n                    case (c, d) => (a :: c, b :: d)\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqmjvjukx.scala:11:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mcase\u001b[0m (c, d) => (a :: c, b :: d)\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqmjvjukx.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mcase\u001b[0m (c, d) => (a :: c, b :: d)\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqmjvjukx.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqmjvjukx.scala:17:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8mwjafje.scala:8:75 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                 ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:9:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:14:18 ----------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.head)\n        val lst3 = lst1.map(x => x.tail.head)\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => x match {\n                case y :: ys => (y :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n                case _ => Nil\n            }\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwk11zc18.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwk11zc18.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwk11zc18.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x\n                merge(xs) match {\n                    case (xs, ys) => ((a :: xs), (b :: ys))\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwxh_9_v.scala:11:41 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mcase\u001b[0m (xs, ys) => ((a :: xs), (b :: ys))\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwxh_9_v.scala:11:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mcase\u001b[0m (xs, ys) => ((a :: xs), (b :: ys))\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwxh_9_v.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwxh_9_v.scala:17:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 : List[Any] = List()\n        var lst2 : List[Any] = List()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        return List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsm7b660z.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsm7b660z.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsm7b660z.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => x match {\n                case (a, b) => merge(xs) match {\n                    case (l1, l2) => (a :: l1, b :: l2)\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb4alqnjl.scala:10:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                    \u001b[33mcase\u001b[0m (l1, l2) => (a :: l1, b :: l2)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb4alqnjl.scala:10:49 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                    \u001b[33mcase\u001b[0m (l1, l2) => (a :: l1, b :: l2)\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb4alqnjl.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb4alqnjl.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Fo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Int, Int)]\n                merge(xs) match {\n                    case (a1 :: b1 :: Nil) => (a :: a1 :: Nil) :: (b :: b1 :: Nil) :: Nil\n                    case _ => (a :: Nil) :: (b :: Nil) :: Nil\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb7waor_u.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb7waor_u.scala:18:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb7waor_u.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = new ListBuffer[Any]()\n        var lst2 = new ListBuffer[Any]()\n        var lst3 = new ListBuffer[Any]()\n        var lst4 = new ListBuffer[Any]()\n        for (i <- 0 to lst.asInstanceOf[List[List[Any]]].length - 1) {\n            lst1 += lst.asInstanceOf[List[List[Any]]](i)(0)\n            lst2 += lst.asInstanceOf[List[List[Any]]](i)(1)\n        }\n        lst3 += lst1\n        lst4 += lst2\n        return lst3 ++ lst4\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3kohno2_.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3kohno2_.scala:19:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3kohno2_.scala:20:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case lst : List[List[Any]] => {\n                val lst1 = new ListBuffer[Any]\n                val lst2 = new ListBuffer[Any]\n                for (i <- 0 until lst.length) {\n                    lst1 += lst(i)(0)\n                    lst2 += lst(i)(1)\n                }\n                return List(lst1.toList, lst2.toList)\n            }\n            case _ => return lst\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjubyu1qm.scala:20:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjubyu1qm.scala:20:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjubyu1qm.scala:21:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var first : List[Any] = Nil\n        var second : List[Any] = Nil\n        lst match {\n            case Nil => List(first, second)\n            case x :: xs => {\n                x match {\n                    case y :: ys => {\n                        first = y :: first\n                        second = ys.head :: second\n                        merge(xs)\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk6lw52_1.scala:22:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk6lw52_1.scala:22:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk6lw52_1.scala:23:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprpsdrfyv.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprpsdrfyv.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprpsdrfyv.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n            case (x :: xs) :: ys => x :: merge(xs :: ys)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptpx_aqpm.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptpx_aqpm.scala:9:38 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) :: ys => x :: merge(xs :: ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                      value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpx_aqpm.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpx_aqpm.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpx_aqp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => merge(ys) :: merge(xs)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1g73sshi.scala:10:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => merge(ys) :: merge(xs)\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1g73sshi.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1g73sshi.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1g73sshi.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                val (a1, b1) = merge(xs).asInstanceOf[Tuple2[List[Any], List[Any]]]\n                (a :: a1, b :: b1)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: merge(ys).asInstanceOf[List[Any]]\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case List() => List()\n            case (x, y) :: xs => List(x) :: List(y) :: merge(xs)\n            case _ => throw new Exception(\"Invalid input\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9dd6dugm.scala:8:52 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x, y) :: xs => List(x) :: List(y) :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9dd6dugm.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9dd6dugm.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9dd6dugm.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.head)\n        val lst3 = lst1.map(x => x.tail.head)\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8mwjafje.scala:8:75 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                 ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => x match {\n                case Nil => merge(xs)\n                case y :: ys => (y :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], ys.asInstanceOf[List[Any]] :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptp4k6gqv.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptp4k6gqv.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptp4k6gqv.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        // Your code here\n        return lst\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ke3jly1.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ke3jly1.scala:10:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ke3jly1.scala:11:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.head)\n        val lst3 = lst1.map(x => x.tail.head)\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8mwjafje.scala:8:75 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                 ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case (x1 :: x2 :: Nil) => (x1 :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], x2 :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n                case _ => Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprkrl8em8.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprkrl8em8.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprkrl8em8.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case (a, b) => (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0hehpuq3.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0hehpuq3.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0hehpuq3.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu72dza8u.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu72dza8u.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72dza8u.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72dza8u.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x\n                (a :: merge(xs).asInstanceOf[List[Any]]).asInstanceOf[Any] -> (b :: merge(xs).asInstanceOf[List[Any]]).asInstanceOf[Any]\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(List(ys) ::: xs)) :: merge(List(ys) ::: xs)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwra7yc7i.scala:10:64 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (y :: merge(List(ys) ::: xs)) :: merge(List(ys) ::: xs)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwra7yc7i.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (y :: merge(List(ys) ::: xs)) :: merge(List(ys) ::: xs)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwra7yc7i.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwra7yc7i.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.head)\n        val lst3 = lst1.map(x => x.tail.head)\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x\n                (a :: merge(xs).asInstanceOf[List[Any]]).asInstanceOf[Any] -> (b :: merge(xs).asInstanceOf[List[Any]]).asInstanceOf[Any]\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- 0 to lst.asInstanceOf[List[List[Any]]].length - 1) {\n            lst1 = lst1 :+ lst.asInstanceOf[List[List[Any]]](i)(0)\n            lst2 = lst2 :+ lst.asInstanceOf[List[List[Any]]](i)(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpztaq5fq1.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpztaq5fq1.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpztaq5fq1.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu72dza8u.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu72dza8u.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72dza8u.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72dza8u.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case lst : List[List[Any]] => {\n                var lst1 : List[Any] = List()\n                var lst2 : List[Any] = List()\n                for (i <- 0 until lst.length) {\n                    lst1 = lst1 :+ lst(i)(0)\n                    lst2 = lst2 :+ lst(i)(1)\n                }\n                List(lst1, lst2)\n            }\n            case _ => lst\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprhr6bmia.scala:20:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprhr6bmia.scala:20:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprhr6bmia.scala:21:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => merge(xs)\n            case (x :: xs) => merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzn4pve68.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzn4pve68.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzn4pve68.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => x match {\n                case Nil => merge(xs)\n                case y :: ys => merge(xs) match {\n                    case Nil => List(List(y), List(ys))\n                    case z :: zs => List(y :: z, ys :: zs)\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwuhufcw_.scala:12:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m z :: zs => List(y :: z, ys :: zs)\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwuhufcw_.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwuhufcw_.scala:18:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwuhufcw_.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => merge(xs) match {\n                case (y :: ys) => (x :: y) :: merge(ys)\n                case Nil => List(x) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppzpcyxmi.scala:9:43 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (x :: y) :: merge(ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppzpcyxmi.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (x :: y) :: merge(ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppzpcyxmi.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppzpcyxmi.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- 0 until lst.asInstanceOf[List[List[Any]]].length) {\n            lst1 = lst1 :+ lst.asInstanceOf[List[List[Any]]](i)(0)\n            lst2 = lst2 :+ lst.asInstanceOf[List[List[Any]]](i)(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcq2fvhf6.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcq2fvhf6.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcq2fvhf6.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (x <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ x(0)\n            lst2 = lst2 :+ x(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprwppiki2.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprwppiki2.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprwppiki2.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = ListBuffer[Int]()\n        val lst3 = ListBuffer[Int]()\n        for (i <- 0 until lst1.length) {\n            lst2 += lst1(i)(0)\n            lst3 += lst1(i)(1)\n        }\n        List(lst2.toList, lst3.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x::xs) => x match {\n                case Nil => merge(xs)\n                case (y::ys) => (y::merge(xs.map(_.head))) :: (ys::merge(xs.map(_.tail)))\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc6emmvy9.scala:10:82 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m (y::ys) => (y::merge(xs.map(_.head))) :: (ys::merge(xs.map(_.tail)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       value tail is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc6emmvy9.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc6emmvy9.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc6emmvy9.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.to",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.head)\n        val lst3 = lst1.map(x => x.tail.head)\n        val lst4 = List(lst2, lst3)\n        lst4\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123169,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmicot93s.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmicot93s.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmicot93s.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x\n                (a :: merge(xs).asInstanceOf[List[Any]]).asInstanceOf[Any] -> (b :: merge(xs).asInstanceOf[List[Any]]).asInstanceOf[Any]\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxjc0xgzz.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x\n                (a :: merge(xs).asInstanceOf[List[Any]]) :: (b :: merge(xs).asInstanceOf[List[Any]]) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsl5tfkzp.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsl5tfkzp.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsl5tfkzp.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Int]]]\n        val lst3 = lst2.map(x => x(0))\n        val lst4 = lst2.map(x => x(1))\n        List(lst3, lst4)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc07b0ki5.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc07b0ki5.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc07b0ki5.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => merge(xs) match {\n                case (a :: b :: Nil) => (x :: a) :: (b :: Nil)\n                case _ => throw new Exception(\"Invalid input\")\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6cfdpxli.scala:9:43 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m (a :: b :: Nil) => (x :: a) :: (b :: Nil)\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6cfdpxli.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6cfdpxli.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6cfdpxli.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = ListBuffer[Int]()\n        val lst3 = ListBuffer[Int]()\n        for (i <- 0 until lst1.length) {\n            lst2 += lst1(i)(0)\n            lst3 += lst1(i)(1)\n        }\n        List(lst2.toList, lst3.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                (a :: merge(xs).asInstanceOf[List[Any]].head.asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].tail.head.asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123169,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenqkqkds.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenqkqkds.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenqkqkds.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n            case (x :: xs) :: ys => x :: merge(xs :: ys)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptpx_aqpm.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptpx_aqpm.scala:9:38 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) :: ys => x :: merge(xs :: ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                      value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpx_aqpm.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpx_aqpm.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpx_aqp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = new ListBuffer[Any]()\n        val lst3 = new ListBuffer[Any]()\n        for (i <- 0 until lst1.length) {\n            lst2 += lst1(i)(0)\n            lst3 += lst1(i)(1)\n        }\n        List(lst2.toList, lst3.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprn7eqfhm.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprn7eqfhm.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprn7eqfhm.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n            case (x :: xs) :: ys => x :: merge(xs :: ys)\n            case x :: (y :: ys) :: zs => x :: merge(y :: ys :: zs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa3owxvcy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa3owxvcy.scala:9:38 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) :: ys => x :: merge(xs :: ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                      value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa3owxvcy.scala:10:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m x :: (y :: ys) :: zs => x :: merge(y :: ys :: zs)\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa3owxvcy.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa3owxvcy.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        val lst3 = lst2.map(x => x.asInstanceOf[List[Any]])\n        val lst4 = lst3.map(x => x(0))\n        val lst5 = lst3.map(x => x(1))\n        List(lst4, lst5)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tqv_eca.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tqv_eca.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tqv_eca.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Int, Int)]\n                (a :: merge(xs).asInstanceOf[List[Int]]) :: (b :: merge(xs).asInstanceOf[List[Int]]) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8mwjafje.scala:8:75 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1) :: (x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                 ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8mwjafje.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: merge(ys).asInstanceOf[List[Any]]\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        // your code here\n        return lst\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk01_iyy9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk01_iyy9.scala:10:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk01_iyy9.scala:11:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- 0 until lst.asInstanceOf[List[List[Any]]].length) {\n            lst1 = lst1 :+ lst.asInstanceOf[List[List[Any]]](i)(0)\n            lst2 = lst2 :+ lst.asInstanceOf[List[List[Any]]](i)(1)\n        }\n        return List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case (a :: b :: Nil) => merge(xs) match {\n                    case (c :: d :: Nil) => (a :: c :: Nil) :: (b :: d :: Nil) :: Nil\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm9hde7iy.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm9hde7iy.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm9hde7iy.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => head match {\n                case Nil => merge(tail)\n                case head2 :: tail2 => (head2 :: merge(tail).asInstanceOf[List[Any]]) :: (tail2 :: merge(tail).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpez6ptthl.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpez6ptthl.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpez6ptthl.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- 0 until lst.asInstanceOf[List[List[Any]]].length) {\n            lst1 = lst1 :+ lst.asInstanceOf[List[List[Any]]](i)(0)\n            lst2 = lst2 :+ lst.asInstanceOf[List[List[Any]]](i)(1)\n        }\n        return List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.asInstanceOf[List[Any]])\n        val lst3 = lst2.map(x => x.map(y => y.asInstanceOf[Int]))\n        val lst4 = lst3.map(x => x(0))\n        val lst5 = lst3.map(x => x(1))\n        List(lst4, lst5)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_9khbs32.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_9khbs32.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_9khbs32.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]].head.asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].tail.head.asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpin8gqzwb.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpin8gqzwb.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpin8gqzwb.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                val (a1, b1) = merge(xs).asInstanceOf[Tuple2[List[Any], List[Any]]]\n                (a :: a1, b :: b1)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = ListBuffer[Int]()\n        val lst3 = ListBuffer[Int]()\n        for (i <- 0 until lst1.length) {\n            lst2 += lst1(i)(0)\n            lst3 += lst1(i)(1)\n        }\n        List(lst2.toList, lst3.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: merge(ys).asInstanceOf[List[Any]]\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnvp4_0kj.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                (a :: merge(xs).asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123173,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5il44ig.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5il44ig.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5il44ig.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case (a, b) => (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0hehpuq3.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0hehpuq3.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0hehpuq3.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Int, Int)]\n                (a :: merge(xs).asInstanceOf[List[Int]]) :: (b :: merge(xs).asInstanceOf[List[Int]]) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.head)\n        val lst3 = lst1.map(x => x.tail.head)\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kkygsnx.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = ListBuffer[Int]()\n        val lst3 = ListBuffer[Int]()\n        for (i <- 0 until lst1.length) {\n            lst2 += lst1(i)(0)\n            lst3 += lst1(i)(1)\n        }\n        List(lst2.toList, lst3.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:9:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:14:18 ----------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val list = lst.asInstanceOf[List[List[Int]]]\n        val list1 = new ListBuffer[Int]()\n        val list2 = new ListBuffer[Int]()\n        for (i <- 0 until list.length) {\n            list1 += list(i)(0)\n            list2 += list(i)(1)\n        }\n        List(list1.toList, list2.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp9jhc4um.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp9jhc4um.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp9jhc4um.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => x match {\n                case Nil => merge(xs)\n                case y :: ys => y match {\n                    case Nil => merge(xs)\n                    case z :: zs => merge(xs)\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzd4z6hkd.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzd4z6hkd.scala:18:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzd4z6hkd.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], ys.head :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpglacpdih.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpglacpdih.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpglacpdih.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: (b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf57zcvv3.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf57zcvv3.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf57zcvv3.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        val lst3 = lst2.map(x => x.asInstanceOf[List[Any]])\n        val lst4 = lst3.map(x => x.map(y => y.asInstanceOf[Int]))\n        val lst5 = lst4.map(x => x(0))\n        val lst6 = lst4.map(x => x(1))\n        List(lst5, lst6)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptk5v1r_6.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptk5v1r_6.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptk5v1r_6.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Int, Int)]\n                merge(xs) match {\n                    case (a1 :: b1 :: Nil) => (a :: a1 :: Nil) :: (b :: b1 :: Nil) :: Nil\n                    case _ => (a :: Nil) :: (b :: Nil) :: Nil\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb7waor_u.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb7waor_u.scala:18:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb7waor_u.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        var lst2 = List[Int]()\n        var lst3 = List[Int]()\n        for (i <- lst1) {\n            lst2 = lst2 :+ i(0)\n            lst3 = lst3 :+ i(1)\n        }\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphefth1lg.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphefth1lg.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphefth1lg.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                val (a1, b1) = merge(xs).asInstanceOf[Tuple2[List[Any], List[Any]]]\n                (a :: a1, b :: b1)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32pjny4_.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case (x :: xs) => {\n                val (a, b) = x\n                (a :: merge(xs).asInstanceOf[List[Any]]) :: (b :: merge(xs).asInstanceOf[List[Any]]) :: Nil\n            }\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj4hs9ej4.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj4hs9ej4.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj4hs9ej4.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 : List[Any] = List()\n        var lst2 : List[Any] = List()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = i(0) :: lst1\n            lst2 = i(1) :: lst2\n        }\n        return List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfp1glncd.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfp1glncd.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfp1glncd.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Int, Int)]\n                (a :: merge(xs).asInstanceOf[List[Int]]) :: (b :: merge(xs).asInstanceOf[List[Int]]) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvw0ehr46.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x::xs) => x match {\n                case (a, b) => merge(xs) match {\n                    case (c, d) => (a::c, b::d)\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpigso29bw.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                    \u001b[33mcase\u001b[0m (c, d) => (a::c, b::d)\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpigso29bw.scala:10:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                    \u001b[33mcase\u001b[0m (c, d) => (a::c, b::d)\n\u001b[31m\u001b[31m   |\u001b[0m                                           ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpigso29bw.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpigso29bw.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpigso29bw.scal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg9wh_asf.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => x match {\n                case y :: ys => merge(xs) match {\n                    case z :: zs => (y :: z) :: (ys :: zs)\n                    case _ => Nil\n                }\n                case _ => Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmporwfr_5n.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                    \u001b[33mcase\u001b[0m z :: zs => (y :: z) :: (ys :: zs)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmporwfr_5n.scala:18:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmporwfr_5n.scala:18:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmporwfr_5n.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => merge(xs) match {\n                case (y :: ys) => (x :: y) :: merge(ys)\n                case Nil => List(x) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppzpcyxmi.scala:9:43 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (x :: y) :: merge(ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppzpcyxmi.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (x :: y) :: merge(ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppzpcyxmi.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppzpcyxmi.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = new ListBuffer[Any]()\n        var lst2 = new ListBuffer[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 += i(0)\n            lst2 += i(1)\n        }\n        List(lst1.toList, lst2.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnr9zec3.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnr9zec3.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnr9zec3.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        val lst3 = lst2.map(x => x.asInstanceOf[List[Any]])\n        val lst4 = lst3.map(x => x.asInstanceOf[List[Int]])\n        val lst5 = lst4.map(x => x.asInstanceOf[List[Int]])\n        val lst6 = lst5.map(x => x.asInstanceOf[List[Int]])\n        val lst7 = lst6.map(x => x.asInstanceOf[List[Int]])\n        val lst8 = lst7.map(x => x.asInstanceOf[List[Int]])\n        val lst9 = lst8.map(x => x.asInstanceOf[List[Int]])\n        val lst10 = lst9.map(x => x.asInstanceOf[List[Int]])\n        val lst11 = lst10.map(x => x.asInstanceOf[List[Int]])\n        val lst12 = lst11.map(x => x.asInstanceOf[List[Int]])\n        val lst13 = lst12.map(x => x.asInstanceOf[List[Int]])\n        val lst14 = lst13.map(x => x.asInstanceOf[List[Int]])\n        val lst15 = lst14.map(x => x.asInstanceOf[List[Int]])\n        val lst16 = lst15.map(x => x.asInstanceOf[List[Int]])\n        val lst17 = lst16.map(x => x.asInstanceOf[List[Int]])\n        val lst18 = lst17.map(x => x.asInstanceOf[List[Int]])\n        val lst19 = lst18.map(x => x.asInstanceOf[List[Int]])\n        val lst20 = lst19.map(x => x.asInstanceOf[List[Int]])\n        val lst21 = lst20.map(x => x.asInstanceOf[List[\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpti2zwgq4.scala:26:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpti2zwgq4.scala:28:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpti2zwgq4.scala:28:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpti2zwgq4.scala:29:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp04uooy2g.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (a :: b) :: tail => (a :: merge(tail.map(_.head))) :: (b :: merge(tail.map(_.tail)))\n            case _ => lst\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3_hl64ue.scala:8:94 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (a :: b) :: tail => (a :: merge(tail.map(_.head))) :: (b :: merge(tail.map(_.tail)))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                         value tail is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3_hl64ue.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3_hl64ue.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3_hl64ue.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- 0 until lst.asInstanceOf[List[List[Any]]].length) {\n            lst1 = lst1 :+ lst.asInstanceOf[List[List[Any]]](i)(0)\n            lst2 = lst2 :+ lst.asInstanceOf[List[List[Any]]](i)(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcq2fvhf6.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcq2fvhf6.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcq2fvhf6.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:9:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:14:18 ----------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[(Any, Any)]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: (b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]]) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf57zcvv3.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf57zcvv3.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf57zcvv3.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl7q8ex4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.asInstanceOf[List[Any]])\n        val lst3 = lst2.map(x => x.head)\n        val lst4 = lst2.map(x => x.tail.head)\n        List(lst3, lst4)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj30vbytl.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj30vbytl.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj30vbytl.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Int]()\n        var lst2 = List[Int]()\n        for (i <- 0 until lst.asInstanceOf[List[List[Int]]].length) {\n            lst1 = lst1 :+ lst.asInstanceOf[List[List[Int]]](i)(0)\n            lst2 = lst2 :+ lst.asInstanceOf[List[List[Int]]](i)(1)\n        }\n        return List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpraunypj0.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpraunypj0.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpraunypj0.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x.asInstanceOf[List[Any]])\n        val lst3 = lst2.map(x => x.map(y => y.asInstanceOf[Int]))\n        val lst4 = lst3.map(x => x(0))\n        val lst5 = lst3.map(x => x(1))\n        List(lst4, lst5)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_9khbs32.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_9khbs32.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_9khbs32.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 : List[Any] = List()\n        var lst2 : List[Any] = List()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqaax5nym.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqaax5nym.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqaax5nym.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                (a :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22ligjed.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => merge(xs) match {\n                case (y :: ys) => (x :: y) :: merge(ys)\n                case Nil => List(x) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123172,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppzpcyxmi.scala:9:43 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (x :: y) :: merge(ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppzpcyxmi.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m (y :: ys) => (x :: y) :: merge(ys)\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppzpcyxmi.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppzpcyxmi.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4a8g_66o.scala:9:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4a8g_66o.scala:14:18 ----------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case (a :: b) => (a :: merge(xs).asInstanceOf[List[Any]]) :: (b :: merge(xs).asInstanceOf[List[Any]]) :: Nil\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcsoj69kj.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcsoj69kj.scala:14:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcsoj69kj.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        val lst2 = ListBuffer[Int]()\n        val lst3 = ListBuffer[Int]()\n        for (i <- 0 until lst1.length) {\n            lst2 += lst1(i)(0)\n            lst3 += lst1(i)(1)\n        }\n        List(lst2.toList, lst3.toList)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt9_u39p.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu72dza8u.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu72dza8u.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72dza8u.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72dza8u.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        val lst3 = lst2.map(x => x.asInstanceOf[List[Any]])\n        val lst4 = lst3.map(x => x.head)\n        val lst5 = lst3.map(x => x.tail.head)\n        List(lst4, lst5)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo4zc_of4.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo4zc_of4.scala:13:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo4zc_of4.scala:14:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr288qe27.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                (a :: merge(xs).asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123173,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5il44ig.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5il44ig.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5il44ig.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:49 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       value _1 is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpb577z446.scala:8:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => (x._1 :: merge(xs)._1, x._2 :: merge(xs)._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                           value _2 is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb577z446.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        var lst2 = List[Int]()\n        var lst3 = List[Int]()\n        for (i <- lst1) {\n            lst2 = lst2 :+ i(0)\n            lst3 = lst3 :+ i(1)\n        }\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphefth1lg.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphefth1lg.scala:16:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphefth1lg.scala:17:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x match {\n                case Nil => merge(xs)\n                case (y :: ys) => (y :: merge(xs).asInstanceOf[List[Any]]) :: (ys :: merge(xs).asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8xji7abs.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.map(x => x(0))\n        val lst3 = lst1.map(x => x(1))\n        List(lst2, lst3)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpas1n2al7.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (a, b) :: tail => (a :: merge(tail).asInstanceOf[List[Any]], b :: merge(tail).asInstanceOf[List[Any]])\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqdjc5000.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqdjc5000.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqdjc5000.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- 0 until lst.asInstanceOf[List[List[Any]]].length) {\n            lst1 = lst1 :+ lst.asInstanceOf[List[List[Any]]](i)(0)\n            lst2 = lst2 :+ lst.asInstanceOf[List[List[Any]]](i)(1)\n        }\n        return List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpasalhacb.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        var lst1 = List[Any]()\n        var lst2 = List[Any]()\n        for (i <- lst.asInstanceOf[List[List[Any]]]) {\n            lst1 = lst1 :+ i(0)\n            lst2 = lst2 :+ i(1)\n        }\n        return List(lst1, lst2)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0v73zee.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0v73zee.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0v73zee.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val (a, b) = x.asInstanceOf[Tuple2[Any, Any]]\n                (a :: merge(xs).asInstanceOf[List[Any]].head.asInstanceOf[List[Any]], b :: merge(xs).asInstanceOf[List[Any]].tail.head.asInstanceOf[List[Any]])\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123169,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenqkqkds.scala:15:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenqkqkds.scala:15:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenqkqkds.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x, y) :: xs => (x :: merge(xs).asInstanceOf[List[Any]], y :: merge(xs).asInstanceOf[List[Any]])\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwl6j9zht.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwl6j9zht.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwl6j9zht.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        val lst3 = lst2.map(x => x(0))\n        val lst4 = lst2.map(x => x(1))\n        List(lst3, lst4)\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q6kg2ic.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q6kg2ic.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q6kg2ic.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m2l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    def merge(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => x :: merge(xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(merge((Any(List[String](\"x\", \"y\"), List[String](\"a\", \"b\"), List[String](\"m\", \"n\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\")))));\n    assert(merge((Any(List[Long](1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong), List[Long](7l.toLong, 8l.toLong)))).equals((Any(List[Long](1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong), List[Long](2l.toLong, 4l.toLong, 6l.toLong, 8l.toLong)))));\n    assert(merge((Any(List[String](\"x\", \"y\", \"z\"), List[String](\"a\", \"b\", \"c\"), List[String](\"m\", \"n\", \"o\")))).equals((Any(List[String](\"x\", \"a\", \"m\"), List[String](\"y\", \"b\", \"n\"), List[String](\"z\", \"c\", \"o\")))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7zs0dyyy.scala:8:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m (x :: xs) => x :: merge(xs)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                value :: is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:12:104 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(merge((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"m\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"x\"\u001b[0m, \u001b[31m\"a\"\u001b[0m, \u001b[31m\"m\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"y\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7zs0dyyy.scala:13:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(merge((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((A",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
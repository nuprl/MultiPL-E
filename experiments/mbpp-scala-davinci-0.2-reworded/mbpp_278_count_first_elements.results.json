{
  "name": "mbpp_278_count_first_elements",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_278_count_first_elements.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val count = n - k + 1\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj5douxtr.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj5douxtr.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5douxtr.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5douxtr.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5douxtr.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val max_num = pow(10, n).toLong\n        val max_k = pow(10, k).toLong\n        val nums = new Array[Long](max_num.toInt)\n        for (i <- 0 until max_num.toInt) nums(i) = i\n        val nums_perm = nums.permutations.toList\n        val nums_perm_str = nums_perm.map(x => x.mkString)\n        val nums_perm_str_sorted = nums_perm_str.sorted\n        val nums_perm_str_sorted_filtered = nums_perm_str_sorted.filter(x => x.startsWith(\"0\") == false)\n        val nums_perm_str_sorted_filtered_sub = nums_perm_str_sorted_filtered.take(max_k.toInt)\n        val nums_perm_str_sorted_filtered_sub_last = nums_perm_str_sorted_filtered_sub.last\n        val nums_perm_str_sorted_filtered_sub_last_index = nums_perm_str_sorted_filtered.indexOf(nums_perm_str_sorted_filtered_sub_last)\n        nums_perm_str_sorted_filtered_sub_last_index\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8qk9cvfn.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8qk9cvfn.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qk9cvfn.scala:23:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qk9cvfn.scala:24:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qk9cvfn.scala:25:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val r = n - k\n        val result = (n * (n - 1)) / 2 - (r * (r - 1)) / 2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpguxxnt6m.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpguxxnt6m.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpguxxnt6m.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpguxxnt6m.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpguxxnt6m.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val a = tup._3\n        val b = tup._4\n        val c = tup._5\n        val r = tup._6\n        val m = tup._7\n        val x = tup._8\n        val y = tup._9\n        val z = tup._10\n        val mod = tup._11\n        val arr = Array.ofDim[Long](n.toInt)\n        arr(0) = x\n        arr(1) = y\n        arr(2) = z\n        for (i <- 3 until n.toInt) {\n            arr(i) = (a * arr(i - 1) + b * arr(i - 2) + c) % r\n        }\n        val arr2 = Array.ofDim[Long](m.toInt)\n        arr2(0) = x\n        arr2(1) = y\n        arr2(2) = z\n        for (i <- 3 until m.toInt) {\n            arr2(i) = (a * arr2(i - 1) + b * arr2(i - 2) + c) % r\n        }\n        val arr3 = Array.ofDim[Long](m.toInt)\n        for (i <- 0 until m.toInt) {\n            arr3(i) = arr2(i) % n\n        }\n        val arr4 = Array.ofDim[Long](n.toInt)\n        for (i <- 0 until m.toInt) {\n            arr4(arr3(i).toInt) += 1\n        }\n        var count = 0L\n        for (i <- 0 until n.toInt) {\n            if (arr4(i) == 0) {\n                count += 1\n            }\n            else {\n                break\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36ma\u001b[0m = tup._3\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _3 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mb\u001b[0m = tup._4\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _4 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mc\u001b[0m = tup._5\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _5 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mr\u001b[0m = tup._6\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _6 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = tup._7\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _7 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_m8vet58.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mx\u001b[0m = tup._8\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _8 i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val a = tup._3\n        val b = tup._4\n        val c = tup._5\n        val r = tup._6\n        val m = tup._7\n        val x = tup._8\n        val y = tup._9\n        val z = tup._10\n        val mod = 1000000007\n        val arr = Array.fill(n.toInt)(0L)\n        arr(0) = x\n        arr(1) = y\n        arr(2) = z\n        for (i <- 3 until n.toInt) {\n            arr(i) = (a * arr(i - 1) + b * arr(i - 2) + c * arr(i - 3)) % r\n        }\n        val arr2 = Array.fill(k.toInt)(0L)\n        for (i <- 0 until k.toInt) {\n            arr2(i) = arr(i)\n        }\n        scala.util.Sorting.quickSort(arr2)\n        val arr3 = Array.fill(k.toInt)(0L)\n        for (i <- 0 until k.toInt) {\n            arr3(i) = arr2(i)\n        }\n        var count = 0L\n        for (i <- 0 until k.toInt) {\n            val index = arr3.indexOf(arr(i))\n            count += index\n            arr3(index) = -1\n        }\n        for (i <- k.toInt until n.toInt) {\n            val index = arr3.indexOf(arr(i))\n            count += index\n            arr3(index) = arr(i - k.toInt)\n            val index2 = arr3.indexOf(arr(i - k.toInt))\n            arr3(index2) = -1\n        }\n        count % mod\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36ma\u001b[0m = tup._3\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _3 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mb\u001b[0m = tup._4\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _4 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mc\u001b[0m = tup._5\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _5 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mr\u001b[0m = tup._6\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _6 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = tup._7\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _7 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplcbyk6rh.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mx\u001b[0m = tup._8\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _8 i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count = 0\n        for (i <- 0 to test_tup.length - 1) {\n            if (test_tup(i) == test_tup.length - 1) {\n                return count\n            }\n            count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbgjgujn5.scala:7:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tup.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue length is not a member of Either[Long, Long] - did you mean test_tup.left?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpbgjgujn5.scala:8:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mif\u001b[0m (test_tup(i) == test_tup.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mtest_tup\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbgjgujn5.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbgjgujn5.scala:17:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbgjgujn5.scala:18:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => 0\n            case Right(x) => 1 + countFirstElements(x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123391,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uzkwfmo.scala:8:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m Right(x) => \u001b[31m1\u001b[0m + countFirstElements(x)\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                                              Found:    (x : Long)\n\u001b[31m  |\u001b[0m                                              Required: Either[Long, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uzkwfmo.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uzkwfmo.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uzkwfmo.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val tup_len = tup.productArity\n        var count = 0\n        for (i <- 0 until tup_len) {\n            if (tup.productElement(i) == tup_len) {\n                count = i\n                return count\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtzzca0b.scala:7:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup_len\u001b[0m = tup.productArity\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      value productArity is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtzzca0b.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (tup.productElement(i) == tup_len) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjtzzca0b.scala:18:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjtzzca0b.scala:19:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjtzzca0b.scala:20:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val sqrt_tup = sqrt(tup).toLong\n        val num_elements = sqrt_tup * (sqrt_tup + 1) / 2\n        val num_elements_before = num_elements - (tup - sqrt_tup * sqrt_tup)\n        num_elements_before\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1gahnhox.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1gahnhox.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1gahnhox.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val r = tup._3\n        val s = tup._4\n        val p = tup._5\n        val j = tup._6\n        val d = tup._7\n        val m = tup._8\n        val t = tup._9\n        val w = tup._10\n        val f = tup._11\n        val l = tup._12\n        val c = tup._13\n        val h = tup._14\n        val v = tup._15\n        val b = tup._16\n        val x = tup._17\n        val q = tup._18\n        val z = tup._19\n        val g = tup._20\n        val y = tup._21\n        val count = n + k + r + s + p + j + d + m + t + w + f + l + c + h + v + b + x + q + z + g + y\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mr\u001b[0m = tup._3\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _3 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36ms\u001b[0m = tup._4\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _4 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = tup._5\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _5 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mj\u001b[0m = tup._6\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _6 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = tup._7\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _7 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpncw12ija.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = tup._8\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _8 i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count : Long = 0\n        test_tup match {\n            case Left(x) => count = x\n            case Right(x) => count = x\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6fcd_em.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6fcd_em.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6fcd_em.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val (a, b) = test_tup match {\n            case Left(a) => (a, 0)\n            case Right(b) => (0, b)\n        }\n        a + b\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi5425mzh.scala:10:10 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        a + b\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5425mzh.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5425mzh.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5425mzh.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val max_num = n - k + 1\n        val min_num = n - 2 * k + 2\n        val max_count = max_num * (max_num - 1) / 2\n        val min_count = min_num * (min_num - 1) / 2\n        max_count - min_count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123391,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_amsz6o.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_amsz6o.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_amsz6o.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_amsz6o.scala:17:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_amsz6o.scala:18:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val tup_list = tup.productIterator.toList\n        val index = tup_list.indexOf(tup_list.last)\n        val first_elements = tup_list.take(index)\n        first_elements.length\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5ql00x3p.scala:7:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup_list\u001b[0m = tup.productIterator.toList\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value productIterator is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ql00x3p.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ql00x3p.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ql00x3p.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count : Long = 0\n        test_tup match {\n            case Left(x) => count = x\n            case Right(x) => count = count + x\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp118tln00.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp118tln00.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp118tln00.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val m = tup._3\n        val a = tup._4\n        val b = tup._5\n        val c = tup._6\n        val r = tup._7\n        val x0 = tup._8\n        val y0 = tup._9\n        val z0 = tup._10\n        var x = x0\n        var y = y0\n        var z = z0\n        var count = 0\n        for (i <- 1 to k) {\n            val xi = (a * x + b * y + c) % r\n            val yi = (a * y + b * z + c) % r\n            val zi = (a * z + b * x + c) % r\n            x = xi\n            y = yi\n            z = zi\n            if (x % 3 == 0 && y % 3 == 0 && z % 3 == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = tup._3\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _3 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36ma\u001b[0m = tup._4\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _4 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mb\u001b[0m = tup._5\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _5 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mc\u001b[0m = tup._6\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _6 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mr\u001b[0m = tup._7\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _7 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkeff9i1v.scala:14:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mx0\u001b[0m = tup._8\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value _",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(y) => y\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0clx55jf.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0clx55jf.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0clx55jf.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val first = tup._1\n        val second = tup._2\n        val first_count = first - 1\n        val second_count = (second - 1) * first\n        first_count + second_count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz80dwxih.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfirst\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz80dwxih.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msecond\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz80dwxih.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz80dwxih.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz80dwxih.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup.productArity\n        var count = 0\n        for (i <- 0 until n) {\n            if (tup.productElement(i) == tup._2) return count\n            count += 1\n        }\n        return -1\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpisljsjkh.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup.productArity\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productArity is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpisljsjkh.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (tup.productElement(i) == tup._2) \u001b[33mreturn\u001b[0m count\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpisljsjkh.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpisljsjkh.scala:17:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpisljsjkh.scala:18:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup_list = test_tup match {\n            case Left(x) => List(x)\n            case Right(x) => List(x)\n        }\n        tup_list.length\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmjwafd2.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmjwafd2.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmjwafd2.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count : Long = 0\n        for (i <- 0 to test_tup.length - 1) {\n            if (test_tup(i) == test_tup(test_tup.length - 1)) {\n                return count\n            }\n            count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqckj7gpr.scala:7:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tup.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue length is not a member of Either[Long, Long] - did you mean test_tup.left?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpqckj7gpr.scala:8:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mif\u001b[0m (test_tup(i) == test_tup(test_tup.length - \u001b[31m1\u001b[0m)) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mtest_tup\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqckj7gpr.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqckj7gpr.scala:17:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqckj7gpr.scala:18:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
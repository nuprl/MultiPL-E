{
  "name": "mbpp_172_count_occurance",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    def countOccurance(s : String) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countOccurance((\"letstdlenstdporstd\")) == (3l));\n    assert(countOccurance((\"truststdsolensporsd\")) == (1l));\n    assert(countOccurance((\"makestdsostdworthit\")) == (2l));\n    assert(countOccurance((\"stds\")) == (1l));\n    assert(countOccurance((\"\")) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        val pattern = \"std\".r\n        val matches = pattern.findAllIn(s)\n        matches.length",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        val pattern = \"std\".r\n        val matches = pattern.findAllIn(s)\n        matches.size",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        val pattern = \"std\".r\n        val result = pattern.findAllIn(s).length\n        result",
    "        val pattern = \"std\".r\n        val matches = pattern.findAllIn(s)\n        matches.length",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1",
    "        s.split(\"std\").length - 1"
  ]
}
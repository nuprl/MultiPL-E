{
  "name": "mbpp_294_max_val",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_294_max_val.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(str) => str.toLong\n            case Right(num) => num\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgxpo7zs.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgxpo7zs.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgxpo7zs.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgxpo7zs.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (max < x.toLong) max = x.toLong\n                }\n                case Right(x) => {\n                    if (max < x) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprp1detsk.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprp1detsk.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprp1detsk.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprp1detsk.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => println(\"String \" + x)\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp31ukxs1z.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp31ukxs1z.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp31ukxs1z.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp31ukxs1z.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => {\n                val num = s.toLong\n                if (num > max) max = num\n            }\n            case Right(l) => {\n                if (l > max) max = l\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- 0 until listval.length) {\n            listval(i) match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(s) => {\n                    if (s > max) max = s\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ske_tz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ske_tz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ske_tz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ske_tz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => max = max\n            case Right(l) => max = max max l\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyg32dkum.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyg32dkum.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyg32dkum.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyg32dkum.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(s)\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamqxh4wu.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamqxh4wu.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamqxh4wu.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamqxh4wu.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(n) => {\n                    if (n > max) max = n\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((x, y) => y match {\n            case Left(str) => x\n            case Right(num) => max(x, num)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqrc10m11.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqrc10m11.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqrc10m11.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqrc10m11.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => max = max\n                case Right(x) => max = max(max, x)\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpqdx0p_py.scala:10:39 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m Right(x) => max = max(max, x)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdx0p_py.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdx0p_py.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdx0p_py.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(\"String found\")\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5z4x6pk.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5z4x6pk.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5z4x6pk.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5z4x6pk.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((x, y) => {\n            y match {\n                case Left(s) => x\n                case Right(l) => max(x, l)\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for(i <- listval) {\n            i match {\n                case Left(x) => {\n                    if(x.toLong > max)\n                        max = x.toLong\n                }\n                case Right(x) => {\n                    if(x > max)\n                        max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5lcy6ok.scala:22:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5lcy6ok.scala:22:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5lcy6ok.scala:22:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5lcy6ok.scala:22:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => {\n                    if (num > max) max = num\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(_ match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5dy1ln0.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5dy1ln0.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5dy1ln0.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5dy1ln0.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for(i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if(l > max) max = l\n                }\n                case Right(l) => {\n                    if(l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbua4kseh.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbua4kseh.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbua4kseh.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbua4kseh.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            if (i.isLeft) {\n                val temp = i.left.get.toLong\n                if (temp > max) max = temp\n            }\n            else {\n                val temp = i.right.get\n                if (temp > max) max = temp\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_3nwggnq.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_3nwggnq.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_3nwggnq.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_3nwggnq.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num > max) max = num\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        list.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    //println(x)\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2z7rreab.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2z7rreab.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2z7rreab.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2z7rreab.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.length > max) max = x.length\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0m0s7im.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0m0s7im.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0m0s7im.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0m0s7im.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    max = max\n                }\n                case Right(x) => {\n                    if (x > max) {\n                        max = x\n                    }\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bq6efrf.scala:22:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bq6efrf.scala:22:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bq6efrf.scala:22:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bq6efrf.scala:22:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num > max) max = num\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => {\n                if (s.length > max) max = s.length\n            }\n            case Right(l) => {\n                if (l > max) max = l\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrfjxppu.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrfjxppu.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrfjxppu.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrfjxppu.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x.fold(y => 0, z => z)).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmppxy1nq_3.scala:6:52 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        listval.map(\u001b[36mx\u001b[0m => x.fold(\u001b[36my\u001b[0m => \u001b[31m0\u001b[0m, \u001b[36mz\u001b[0m => z)).max\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for B\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mwhere:    B is a type variable with constraint >: AnyVal\n\u001b[31m  |\u001b[0m..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mB\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[B]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[B].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppxy1nq_3.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppxy1nq_3.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppxy1nq_3.scala:9:60",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => if (num > max) max = num\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => {\n            if (x.isRight) {\n                val y = x.right.get\n                if (y > max) max = y\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_k8q4jwl.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_k8q4jwl.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_k8q4jwl.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_k8q4jwl.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        })\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnlb9gtqu.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnlb9gtqu.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnlb9gtqu.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnlb9gtqu.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => max = max\n            case Right(l) => max = max.max(l)\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3elb4pv1.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3elb4pv1.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3elb4pv1.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3elb4pv1.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((x, y) => {\n            y match {\n                case Left(s) => x\n                case Right(l) => if (l > x) l else x\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmm1yx16.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmm1yx16.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmm1yx16.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmm1yx16.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => x match {\n            case Left(s) => max = max\n            case Right(l) => max = max(max, l)\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpsvp9kq1n.scala:9:35 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m Right(l) => max = max(max, l)\n\u001b[31m\u001b[31m  |\u001b[0m                                   ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvp9kq1n.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvp9kq1n.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvp9kq1n.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) {\n                        max = s.toLong\n                    }\n                }\n                case Right(l) => {\n                    if (l > max) {\n                        max = l\n                    }\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkjjqcrol.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkjjqcrol.scala:24:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkjjqcrol.scala:24:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkjjqcrol.scala:24:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidir1a62.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- 0 until listval.length) {\n            if (listval(i).isRight) {\n                if (listval(i).right.get > max) max = listval(i).right.get\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97npe3vk.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97npe3vk.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97npe3vk.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97npe3vk.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get > max) max = i.right.get\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccbds5es.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccbds5es.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccbds5es.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccbds5es.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) {\n                        max = s.length\n                    }\n                }\n                case Right(l) => {\n                    if (l > max) {\n                        max = l\n                    }\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmyzy4dko.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmyzy4dko.scala:24:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmyzy4dko.scala:24:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmyzy4dko.scala:24:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => {\n                    if (num > max) max = num\n                }\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70vzaxhe.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70vzaxhe.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70vzaxhe.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70vzaxhe.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => max = max max l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkrxp8l.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkrxp8l.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkrxp8l.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkrxp8l.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3mbmfshg.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3mbmfshg.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3mbmfshg.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3mbmfshg.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0;\n        for(i <- listval) {\n            if(i.isRight) {\n                if(i.right.get > max) {\n                    max = i.right.get;\n                }\n            }\n        }\n        return max;\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22pcngdl.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22pcngdl.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22pcngdl.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22pcngdl.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get > max) {\n                    max = i.right.get\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpje4wyh_p.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpje4wyh_p.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpje4wyh_p.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpje4wyh_p.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            if (i.isRight) {\n                val temp = i.right.get\n                if (temp > max) max = temp\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_79cy58x.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_79cy58x.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_79cy58x.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_79cy58x.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = Long.MinValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => max = max(max, l)\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp84kz_2we.scala:10:39 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m Right(l) => max = max(max, l)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84kz_2we.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84kz_2we.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84kz_2we.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num > max) max = num\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8i7jxp7t.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get > max) {\n                    max = i.right.get\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (x <- listval) {\n            if (x.isRight) {\n                if (x.right.get > max) max = x.right.get\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd4qgkg1.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd4qgkg1.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd4qgkg1.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd4qgkg1.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => x match {\n            case Left(s) => {\n                if (s.length > max) max = s.length\n            }\n            case Right(l) => {\n                if (l > max) max = l\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu7nnp3s.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu7nnp3s.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu7nnp3s.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu7nnp3s.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => x match {\n            case Left(s) =>\n            case Right(l) => if (l > max) max = l\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpduw4sz.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_p0njiy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_p0njiy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_p0njiy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_p0njiy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    println(\"String: \" + x)\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (max < s.toLong) max = s.toLong\n                }\n                case Right(l) => {\n                    if (max < l) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8qu_5g9.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8qu_5g9.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8qu_5g9.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8qu_5g9.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    var num : Long = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82d963zf.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82d963zf.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82d963zf.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82d963zf.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        return listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp00n2o5bg.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp00n2o5bg.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp00n2o5bg.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp00n2o5bg.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var maxval = 0L\n        listval.foreach(x => x match {\n            case Left(s) =>\n            case Right(l) => if (l > maxval) maxval = l\n        })\n        maxval\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80ctdm7u.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80ctdm7u.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80ctdm7u.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80ctdm7u.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- 0 until listval.length) {\n            if (listval(i).isRight) {\n                if (listval(i).right.get > max) max = listval(i).right.get\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes_06arw.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes_06arw.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes_06arw.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes_06arw.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => max = max\n                case Right(x) => if (x > max) max = x\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptec_rlc0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptec_rlc0.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptec_rlc0.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptec_rlc0.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        list.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => println(\"String \" + s)\n            case Right(l) => if (l > max) max = l\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5bh9hg1.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5bh9hg1.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5bh9hg1.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5bh9hg1.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_5e9eg9.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => {\n                if (s.length > max) max = s.length\n            }\n            case Right(l) => {\n                if (l > max) max = l\n            }\n        })\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6nyeghx.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6nyeghx.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6nyeghx.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6nyeghx.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => x match {\n            case Left(s) => if (s.length > max) max = s.length\n            case Right(l) => if (l > max) max = l\n        })\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphaev1xbv.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphaev1xbv.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphaev1xbv.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphaev1xbv.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => {\n            x match {\n                case Left(s) =>\n                case Right(l) => if (l > max) max = l\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprecal4vx.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprecal4vx.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprecal4vx.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprecal4vx.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => x match {\n            case Left(s) => {\n                val v = s.toLong\n                if (v > max) max = v\n            }\n            case Right(v) => {\n                if (v > max) max = v\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123609,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp48kde0vc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp48kde0vc.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp48kde0vc.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp48kde0vc.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        })\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeue4ewh.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeue4ewh.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeue4ewh.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeue4ewh.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => {\n                val l = s.toLong\n                if (l > max) max = l\n            }\n            case Right(l) => {\n                if (l > max) max = l\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqugcsysh.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqugcsysh.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqugcsysh.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqugcsysh.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => {\n            x match {\n                case Left(y) => {\n                    if (y.length > max) max = y.length\n                }\n                case Right(y) => {\n                    if (y > max) max = y\n                }\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123609,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpotwu8a0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpotwu8a0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpotwu8a0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpotwu8a0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for(i <- listval) {\n            i match {\n                case Left(s) => {\n                    if(s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if(l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptxedyxma.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptxedyxma.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptxedyxma.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptxedyxma.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_q_r5s6.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_405_check_tuplex",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether an element exists within a tuple.\n    def checkTuplex(tuplex : Either[String, Long], tuple1 : Any) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"r\"))) == (true));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"5\"))) == (false));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(3l))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b, c, d) => {\n                        if (a == x || b == x || c == x || d == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e) => {\n                        if (a == x || b == x || c == x || d == x || e == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i, j) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x || j == x) true\n                       ",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }"
  ]
}
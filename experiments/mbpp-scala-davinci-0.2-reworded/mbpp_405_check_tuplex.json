{
  "name": "mbpp_405_check_tuplex",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether an element exists within a tuple.\n    def checkTuplex(tuplex : Either[String, Long], tuple1 : Any) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"r\"))) == (true));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"5\"))) == (false));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(3l))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b, c, d) => {\n                        if (a == x || b == x || c == x || d == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e) => {\n                        if (a == x || b == x || c == x || d == x || e == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i, j) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x || j == x) true\n                       ",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case s : String => s == tuplex.right.get.toString\n                    case l : Long => l == tuplex.right.get\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (tuple1.toString == x) true else false\n            case Right(x) => if (tuple1.toString == x.toString) true else false\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => true\n            case Right(l) => false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == x\n                    case tup : Tuple2[Any, Any] => tup._1 == x || tup._2 == x\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x || tup._8 == x\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Tuple1[Any]]) {\n                    val tuple = tuple1.asInstanceOf[Tuple1[Any]]\n                    if (tuple._1 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple2[Any, Any]]) {\n                    val tuple = tuple1.asInstanceOf[Tuple2[Any, Any]]\n                    if (tuple._1 == l || tuple._2 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple3[Any, Any, Any]]) {\n                    val tuple = tuple1.asInstanceOf[Tuple3[Any, Any, Any]]\n                    if (tuple._1 == l || tuple._2 == l || tuple._3 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple4[Any, Any, Any, Any]]) {\n                    val tuple = tuple1.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                    if (tuple._1 == l || tuple._2 == l || tuple._3 == l || tuple._4 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple5[Any, Any, Any, Any, Any]]) {\n                    val tuple = tuple1.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n                    if (tuple._1 == l || tuple._2 == l || tuple._3 == l || tuple._4 == l || tuple._5 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]) {\n                    val tuple = tuple1.asInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]\n                    if (tuple._1 == l || tuple._2 == l || tuple._3 == l || tuple._4 == l || tuple._5 == l || tuple._6 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                l match {\n                    case (a, b) => {\n                        if (a == tuple1 || b == tuple1) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                val tuple = (l, l, l)\n                tuple1 match {\n                    case x : Int => tuple._1 == x\n                    case x : Long => tuple._1 == x\n                    case x : Double => tuple._1 == x\n                    case x : Float => tuple._1 == x\n                    case x : String => tuple._1 == x\n                    case x : Char => tuple._1 == x\n                    case x : Boolean => tuple._1 == x\n                    case _ => false\n                }\n            }\n        }",
    "        if (tuplex.isLeft) {\n            val tuple = tuplex.left.get\n            if (tuple.contains(tuple1)) true\n            else false\n        }\n        else {\n            val tuple = tuplex.right.get\n            if (tuple.contains(tuple1)) true\n            else false\n        }",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => true\n        }",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == x\n                    case t : Tuple2[Any, Any] => t._1 == x || t._2 == x\n                    case t : Tuple3[Any, Any, Any] => t._1 == x || t._2 == x || t._3 == x\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == x || t._2 == x || t._3 == x || t._4 == x\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == x || t._2 == x || t._3 == x || t._4 == x || t._5 == x\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == x || t._2 == x || t._3 == x || t._4 == x || t._5 == x || t._6 == x\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == x || t._2 == x || t._3 == x || t._4 == x || t._5 == x || t._6 == x || t._7 == x\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == x || t._2 == x || t._3 == x || t._4 == x || t._5 == x || t._6 == x || t._7 == x || t._8 == x\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == x || t._2 == x || t._3 == x || t._4 == x || t._5 == x || t._6 == x || t._7 == x || t._8 == x || t._9 == x\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == x || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case a => {\n                        if (a == x) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1.isInstanceOf[String]) {\n                    if (s == tuple1) true\n                    else false\n                } else false\n            }\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Long]) {\n                    if (l == tuple1) true\n                    else false\n                } else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuple1 match {\n            case (a, b, c) => {\n                if (tuplex.isRight) {\n                    if (tuplex.right.get == a || tuplex.right.get == b || tuplex.right.get == c) true\n                    else false\n                }\n                else {\n                    if (tuplex.left.get == a || tuplex.left.get == b || tuplex.left.get == c) true\n                    else false\n                }\n            }\n            case _ => false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b, c, d) => {\n                        if (a == x || b == x || c == x || d == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e) => {\n                        if (a == x || b == x || c == x || d == x || e == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i, j) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x || j == x) true\n                       ",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(n) => n == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => true\n            case Right(l) => false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(n) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == n || b == n || c == n) true\n                        else false\n                    }\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1.isInstanceOf[String]) {\n                    if (s == tuple1.asInstanceOf[String]) true else false\n                }\n                else false\n            }\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Long]) {\n                    if (l == tuple1.asInstanceOf[Long]) true else false\n                }\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b, c, d) => {\n                        if (a == x || b == x || c == x || d == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e) => {\n                        if (a == x || b == x || c == x || d == x || e == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i, j) => {\n                        if (a == x || b == x || c == x || d == x || e == x || f == x || g == x || h == x || i == x || j == x) true\n                       ",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                val tup = x.asInstanceOf[Tuple2[Any, Any]]\n                tup._1 == tuple1 || tup._2 == tuple1\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (x1, x2) => {\n                        if (x == x1 || x == x2) true\n                        else false\n                    }\n                    case (x1, x2, x3) => {\n                        if (x == x1 || x == x2 || x == x3) true\n                        else false\n                    }\n                    case (x1, x2, x3, x4) => {\n                        if (x == x1 || x == x2 || x == x3 || x == x4) true\n                        else false\n                    }\n                    case (x1, x2, x3, x4, x5) => {\n                        if (x == x1 || x == x2 || x == x3 || x == x4 || x == x5) true\n                        else false\n                    }\n                    case (x1, x2, x3, x4, x5, x6) => {\n                        if (x == x1 || x == x2 || x == x3 || x == x4 || x == x5 || x == x6) true\n                        else false\n                    }\n                    case (x1, x2, x3, x4, x5, x6, x7) => {\n                        if (x == x1 || x == x2 || x == x3 || x == x4 || x == x5 || x == x6 || x == x7) true\n                        else false\n                    }\n                    case (x1, x2, x3, x4, x5, x6, x7, x8) => {\n                        if (x == x1 || x == x2 || x == x3 || x == x4 || x == x5 || x == x6 || x == x7 || x == x8) true\n                        else false\n                    }\n                    case (x1, x2, x3, x4, x5, x6, x7, x8, x9) => {\n                        if (x == x1 || x == x2 || x == x3 || x == x4 || x == x5 || x == x6 || x == x7 || x == x",
    "        if (tuplex.isRight) {\n            val tuplexValue = tuplex.right.get\n            if (tuple1.isInstanceOf[Tuple1[Long]]) {\n                val tuple1Value = tuple1.asInstanceOf[Tuple1[Long]]._1\n                return tuplexValue == tuple1Value\n            } else if (tuple1.isInstanceOf[Tuple2[Long, Long]]) {\n                val tuple1Value1 = tuple1.asInstanceOf[Tuple2[Long, Long]]._1\n                val tuple1Value2 = tuple1.asInstanceOf[Tuple2[Long, Long]]._2\n                return tuplexValue == tuple1Value1 || tuplexValue == tuple1Value2\n            } else if (tuple1.isInstanceOf[Tuple3[Long, Long, Long]]) {\n                val tuple1Value1 = tuple1.asInstanceOf[Tuple3[Long, Long, Long]]._1\n                val tuple1Value2 = tuple1.asInstanceOf[Tuple3[Long, Long, Long]]._2\n                val tuple1Value3 = tuple1.asInstanceOf[Tuple3[Long, Long, Long]]._3\n                return tuplexValue == tuple1Value1 || tuplexValue == tuple1Value2 || tuplexValue == tuple1Value3\n            } else if (tuple1.isInstanceOf[Tuple4[Long, Long, Long, Long]]) {\n                val tuple1Value1 = tuple1.asInstanceOf[Tuple4[Long, Long, Long, Long]]._1\n                val tuple1Value2 = tuple1.asInstanceOf[Tuple4[Long, Long, Long, Long]]._2\n                val tuple1Value3 = tuple1.asInstanceOf[Tuple4[Long, Long, Long, Long]]._3\n                val tuple1Value4 = tuple1.asInstanceOf[Tuple4[Long, Long, Long, Long]]._4\n                return tuplexValue == tuple1Value1 || tuplexValue == tuple1Value2 || tuplexValue == tuple1Value3 || tuplexValue == tuple1Value4\n",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1)\n                    true\n                else\n                    false\n            }\n            case Right(l) => {\n                if (l == tuple1)\n                    true\n                else\n                    false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => tuple1 match {\n                case s : String => false\n                case l1 : Long => l == l1\n                case _ => false\n            }\n        }",
    "        tuplex match {\n            case Right(x) => x == tuple1\n            case Left(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case (a, b) => {\n                        if (a == l || b == l) true\n                        else false\n                    }\n                    case (a, b, c) => {\n                        if (a == l || b == l || c == l) true\n                        else false\n                    }\n                    case (a, b, c, d) => {\n                        if (a == l || b == l || c == l || d == l) true\n                        else false\n                    }\n                    case (a, b, c, d, e) => {\n                        if (a == l || b == l || c == l || d == l || e == l) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f) => {\n                        if (a == l || b == l || c == l || d == l || e == l || f == l) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g) => {\n                        if (a == l || b == l || c == l || d == l || e == l || f == l || g == l) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h) => {\n                        if (a == l || b == l || c == l || d == l || e == l || f == l || g == l || h == l) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i) => {\n                        if (a == l || b == l || c == l || d == l || e == l || f == l || g == l || h == l || i == l) true\n                        else false\n                    }\n                    case (a, b, c, d, e, f, g, h, i, j) => {\n                        if (a == l || b == l || c == l || d == l || e == l || f == l || g == l || h == l || i == l || j == l) true\n                       ",
    "        tuplex match {\n            case Right(x) => x == tuple1\n            case Left(x) => false\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1.isInstanceOf[String]) {\n                    if (s == tuple1) true\n                    else false\n                }\n                else false\n            }\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Long]) {\n                    if (l == tuple1) true\n                    else false\n                }\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1.isInstanceOf[String]) {\n                    if (tuple1.asInstanceOf[String] == s) {\n                        return true\n                    }\n                }\n            }\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Long]) {\n                    if (tuple1.asInstanceOf[Long] == l) {\n                        return true\n                    }\n                }\n            }\n        }\n        return false",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                val tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                val tup = (l, l, l)\n                tup.productIterator.toList.contains(tuple1)\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case (a) => {\n                        if (a == x) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(str) => {\n                if (str == tuple1) true\n                else false\n            }\n            case Right(num) => {\n                if (num == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => tuple1 match {\n                case s : String => s == l.toString\n                case l : Long => l == l\n                case _ => false\n            }\n        }",
    "        if (tuple1.isInstanceOf[Tuple1[Any]]) {\n            val tuple1 = tuple1.asInstanceOf[Tuple1[Any]]\n            if (tuplex.isLeft) {\n                if (tuple1._1.isInstanceOf[String]) {\n                    val str = tuple1._1.asInstanceOf[String]\n                    if (str == tuplex.left.get) return true\n                }\n            } else {\n                if (tuple1._1.isInstanceOf[Long]) {\n                    val lng = tuple1._1.asInstanceOf[Long]\n                    if (lng == tuplex.right.get) return true\n                }\n            }\n        } else if (tuple1.isInstanceOf[Tuple2[Any, Any]]) {\n            val tuple2 = tuple1.asInstanceOf[Tuple2[Any, Any]]\n            if (tuplex.isLeft) {\n                if (tuple2._1.isInstanceOf[String]) {\n                    val str = tuple2._1.asInstanceOf[String]\n                    if (str == tuplex.left.get) return true\n                }\n                if (tuple2._2.isInstanceOf[String]) {\n                    val str = tuple2._2.asInstanceOf[String]\n                    if (str == tuplex.left.get) return true\n                }\n            } else {\n                if (tuple2._1.isInstanceOf[Long]) {\n                    val lng = tuple2._1.asInstanceOf[Long]\n                    if (lng == tuplex.right.get) return true\n                }\n                if (tuple2._2.isInstanceOf[Long]) {\n                    val lng = tuple2._2.asInstanceOf[Long]\n                    if (lng == tuplex.right.get) return true\n                }\n            }\n        } else if (tuple1.isInstanceOf[Tuple3[Any, Any, Any]]) {\n            val tuple3 = tuple1.asInstanceOf[Tuple3[Any, Any, Any]]\n            if (tuplex.isLeft) {\n                if (tuple3._1",
    "        tuplex match {\n            case Left(s) => true\n            case Right(l) => false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Tuple1[Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple1[Any]]\n                    if (tuple1x._1 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple2[Any, Any]]) {\n                    val tuple2x = tuple1.asInstanceOf[Tuple2[Any, Any]]\n                    if (tuple2x._1 == l || tuple2x._2 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple3[Any, Any, Any]]) {\n                    val tuple3x = tuple1.asInstanceOf[Tuple3[Any, Any, Any]]\n                    if (tuple3x._1 == l || tuple3x._2 == l || tuple3x._3 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple4[Any, Any, Any, Any]]) {\n                    val tuple4x = tuple1.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                    if (tuple4x._1 == l || tuple4x._2 == l || tuple4x._3 == l || tuple4x._4 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple5[Any, Any, Any, Any, Any]]) {\n                    val tuple5x = tuple1.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n                    if (tuple5x._1 == l || tuple5x._2 == l || tuple5x._3 == l || tuple5x._4 == l || tuple5x._5 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]) {\n                    val tuple6x = tuple1.asInstanceOf[Tuple6[Any, Any, Any, Any, Any",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(n) => n == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                val tuple2 = (l, l)\n                tuple1 == tuple2\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => l match {\n                case tuple2 : Tuple2[Any, Any] => {\n                    if (tuple2._1 == tuple1 || tuple2._2 == tuple1) true\n                    else false\n                }\n                case tuple3 : Tuple3[Any, Any, Any] => {\n                    if (tuple3._1 == tuple1 || tuple3._2 == tuple1 || tuple3._3 == tuple1) true\n                    else false\n                }\n                case tuple4 : Tuple4[Any, Any, Any, Any] => {\n                    if (tuple4._1 == tuple1 || tuple4._2 == tuple1 || tuple4._3 == tuple1 || tuple4._4 == tuple1) true\n                    else false\n                }\n                case tuple5 : Tuple5[Any, Any, Any, Any, Any] => {\n                    if (tuple5._1 == tuple1 || tuple5._2 == tuple1 || tuple5._3 == tuple1 || tuple5._4 == tuple1 || tuple5._5 == tuple1) true\n                    else false\n                }\n                case tuple6 : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                    if (tuple6._1 == tuple1 || tuple6._2 == tuple1 || tuple6._3 == tuple1 || tuple6._4 == tuple1 || tuple6._5 == tuple1 || tuple6._6 == tuple1) true\n                    else false\n                }\n                case tuple7 : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                    if (tuple7._1 == tuple1 || tuple7._2 == tuple1 || tuple7._3 == tuple1 || tuple7._4 == tuple1 || tuple7._5 == tuple1 || tuple7._6 == tuple1 || tuple7._7 == tuple1) true\n                    else false\n                }\n                case tuple8 : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                    if (tuple8._1 == tuple1 || tuple8._2 == tuple1 || tuple8._3 == tuple1 || tuple8._4 == tuple1 ||",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => if (tup._1 == l) true else false\n                    case tup : Tuple2[Any, Any] => if (tup._1 == l || tup._2 == l) true else false\n                    case tup : Tuple3[Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l) true else false\n                    case tup : Tuple4[Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true else false\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true else false\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true else false\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true else false\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l) true else false\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] =>",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1.isInstanceOf[String]) {\n                    if (s == tuple1) true else false\n                } else false\n            }\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Long]) {\n                    if (l == tuple1) true else false\n                } else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l) true\n                        else if (tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l) true\n                        else if (tup._2 == l) true\n                        else if (tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l) true\n                        else if (tup._2 == l) true\n                        else if (tup._3 == l) true\n                        else if (tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l) true\n                        else if (tup._2 == l) true\n                        else if (tup._3 == l) true\n                        else if (tup._4 == l) true\n                        else if (tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l) true\n                        else if (tup._2 == l) true\n                        else if (tup._3 == l) true\n                        else if (tup._4 == l) true\n                        else if (tup._5 == l) true\n                        else if (tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l) true\n                        else if (tup._2 == l) true\n                        else if (tup._3 == l) true\n                        else if (tup._4 == l) true\n                        else if (tup._5 == l) true\n",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple2[Any, Any] => {\n                        if (t._1 == l) true\n                        else if (t._2 == l) true\n                        else false\n                    }\n                    case t : Tuple3[Any, Any, Any] => {\n                        if (t._1 == l) true\n                        else if (t._2 == l) true\n                        else if (t._3 == l) true\n                        else false\n                    }\n                    case t : Tuple4[Any, Any, Any, Any] => {\n                        if (t._1 == l) true\n                        else if (t._2 == l) true\n                        else if (t._3 == l) true\n                        else if (t._4 == l) true\n                        else false\n                    }\n                    case t : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (t._1 == l) true\n                        else if (t._2 == l) true\n                        else if (t._3 == l) true\n                        else if (t._4 == l) true\n                        else if (t._5 == l) true\n                        else false\n                    }\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l) true\n                        else if (t._2 == l) true\n                        else if (t._3 == l) true\n                        else if (t._4 == l) true\n                        else if (t._5 == l) true\n                        else if (t._6 == l) true\n                        else false\n                    }\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l) true\n                        else if (t._2 == l) true\n                        else if (t._3 == l) true\n                        else if (t._4 == l) true\n                        else if (t._5 == l) true\n                        else if (t._6 == l) true\n                        else if (t._7 == l) true\n                        else false\n                    }\n",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => tuple1.isInstanceOf[String]\n            case Right(l) => tuple1.isInstanceOf[Long]\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => tuple1 match {\n                case x : Long => x == tuplex.right.get\n                case _ => false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                val tuple = s.split(\",\").map(_.toInt)\n                tuple.contains(tuple1)\n            }\n            case Right(l) => {\n                val tuple = l.toString.split(\",\").map(_.toInt)\n                tuple.contains(tuple1)\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1.isInstanceOf[String]) {\n                    if (s == tuple1.asInstanceOf[String]) {\n                        return true\n                    }\n                }\n            }\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Long]) {\n                    if (l == tuple1.asInstanceOf[Long]) {\n                        return true\n                    }\n                }\n            }\n        }\n        return false",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        if (tuplex.isLeft) {\n            if (tuple1.isInstanceOf[String]) {\n                val str = tuple1.asInstanceOf[String]\n                if (str == tuplex.left.get) return true\n            }\n        } else {\n            if (tuple1.isInstanceOf[Long]) {\n                val num = tuple1.asInstanceOf[Long]\n                if (num == tuplex.right.get) return true\n            }\n        }\n        false",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(n) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == n || b == n || c == n) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == n || b == n) true\n                        else false\n                    }\n                    case a => {\n                        if (a == n) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => if (tup._1 == l) true else false\n                    case tup : Tuple2[Any, Any] => if (tup._1 == l || tup._2 == l) true else false\n                    case tup : Tuple3[Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l) true else false\n                    case tup : Tuple4[Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true else false\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true else false\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true else false\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true else false\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l) true else false\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] =>",
    "        tuplex match {\n            case Left(s) => if (s == tuple1) true else false\n            case Right(l) => if (l == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1 == s) true\n                else false\n            }\n            case Right(l) => {\n                if (tuple1 == l) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => if (tup._1 == l) true else false\n                    case tup : Tuple2[Any, Any] => if (tup._1 == l || tup._2 == l) true else false\n                    case tup : Tuple3[Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l) true else false\n                    case tup : Tuple4[Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true else false\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true else false\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true else false\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true else false\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l) true else false\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] =>",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case a => {\n                        if (a == x) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => if (s == tuple1) true else false\n            case Right(l) => if (l == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case x : Tuple1[Any] => x._1 == l\n                    case x : Tuple2[Any, Any] => x._1 == l || x._2 == l\n                    case x : Tuple3[Any, Any, Any] => x._1 == l || x._2 == l || x._3 == l\n                    case x : Tuple4[Any, Any, Any, Any] => x._1 == l || x._2 == l || x._3 == l || x._4 == l\n                    case x : Tuple5[Any, Any, Any, Any, Any] => x._1 == l || x._2 == l || x._3 == l || x._4 == l || x._5 == l\n                    case x : Tuple6[Any, Any, Any, Any, Any, Any] => x._1 == l || x._2 == l || x._3 == l || x._4 == l || x._5 == l || x._6 == l\n                    case x : Tuple7[Any, Any, Any, Any, Any, Any, Any] => x._1 == l || x._2 == l || x._3 == l || x._4 == l || x._5 == l || x._6 == l || x._7 == l\n                    case x : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => x._1 == l || x._2 == l || x._3 == l || x._4 == l || x._5 == l || x._6 == l || x._7 == l || x._8 == l\n                    case x : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => x._1 == l || x._2 == l || x._3 == l || x._4 == l || x._5 == l || x._6 == l || x._7 == l || x._8 == l || x._9 == l\n                    case x : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => x._1 == l || x._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuple1 match {\n            case (a, b, c) => {\n                if (tuplex.isRight) {\n                    if (tuplex.right.get == a || tuplex.right.get == b || tuplex.right.get == c) true\n                    else false\n                }\n                else false\n            }\n            case _ => false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => {\n                        if (t._1 == l) true else false\n                    }\n                    case t : Tuple2[Any, Any] => {\n                        if (t._1 == l || t._2 == l) true else false\n                    }\n                    case t : Tuple3[Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l) true else false\n                    }\n                    case t : Tuple4[Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l) true else false\n                    }\n                    case t : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l) true else false\n                    }\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l) true else false\n                    }\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l) true else false\n                    }\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l) true else false\n                    }\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any,",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => tuple1 match {\n                case s1 : String => s == s1\n                case _ => false\n            }\n            case Right(l) => tuple1 match {\n                case l1 : Long => l == l1\n                case _ => false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(n) => {\n                if (n == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuple1 match {\n            case (a, b, c) => {\n                tuplex match {\n                    case Left(a) => {\n                        if (a == tuple1._1) true\n                        else if (a == tuple1._2) true\n                        else if (a == tuple1._3) true\n                        else false\n                    }\n                    case Right(a) => {\n                        if (a == tuple1._1) true\n                        else if (a == tuple1._2) true\n                        else if (a == tuple1._3) true\n                        else false\n                    }\n                }\n            }\n            case _ => false\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == l || b == l || c == l) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == l || b == l) true\n                        else false\n                    }\n                    case a => {\n                        if (a == l) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == x\n                    case tup : Tuple2[Any, Any] => tup._1 == x || tup._2 == x\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x || tup._8 == x\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x"
  ]
}
{
  "name": "mbpp_765_is_polite",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\n    def isPolite(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(isPolite((7l)) == (11l));\n    assert(isPolite((4l)) == (7l));\n    assert(isPolite((9l)) == (13l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var i = 1\n        var j = 1\n        while (i <= n) {\n            if (n % i == 0) {\n                j += 1\n                i += 1\n            } else {\n                i += 1\n            }\n        }\n        j",
    "        var i = 1L\n        while (i * i <= n) {\n            if (n % i == 0) {\n                return i + n / i\n            }\n            i += 1\n        }\n        return 0",
    "        var sum = 0L\n        var i = 1L\n        while (i <= sqrt(n)) {\n            if (n % i == 0) {\n                sum += i\n                if (i != n / i) sum += n / i\n            }\n            i += 1\n        }\n        sum",
    "        var i = 1\n        var sum = 0L\n        while (sum < n) {\n            sum += i\n            i += 1\n        }\n        if (sum == n) i - 1 else -1",
    "        var sum = 0L\n        var i = 1L\n        while (i * i <= n) {\n            if (n % i == 0) {\n                sum += i\n                if (i * i != n) sum += n / i\n            }\n            i += 1\n        }\n        sum - n",
    "        var i = 1\n        var sum = 0L\n        while (sum < n) {\n            sum += i\n            i += 1\n        }\n        if (sum == n) i - 1 else -1",
    "        var i = 1\n        var sum = 0L\n        while (sum < n) {\n            sum += i\n            i += 1\n        }\n        if (sum == n) i - 1 else -1",
    "        var result = 0L\n        for (i <- 1L to n) {\n            if (n % i == 0) result += i\n        }\n        result",
    "        var i = 1\n        while (i * i <= n) {\n            if (n % i == 0) {\n                val j = n / i\n                if (i % 2 == 1 && j % 2 == 1) return i\n            }\n            i += 1\n        }\n        return -1",
    "        var i = 1\n        while (i * i <= n) {\n            if (n % i == 0) {\n                val j = n / i\n                if (j != i) return i + j\n                else return i\n            }\n            i += 1\n        }\n        return -1",
    "        var i = 1\n        while (i * i <= n) {\n            if (n % i == 0) return i + n / i\n            i += 1\n        }\n        return -1",
    "        var i = 1\n        while (i * i <= n) {\n            if (n % i == 0) return i + n / i\n            i += 1\n        }\n        return 0",
    "        var i = 1\n        while (i * i <= n) {\n            if (n % i == 0) return i + n / i\n            i += 1\n        }\n        return 0",
    "        var i = 1\n        var sum = 0L\n        while (sum < n) {\n            sum += i\n            i += 1\n        }\n        if (sum == n) i - 1 else -1",
    "        var i = 1\n        var sum = 0L\n        while (sum < n) {\n            sum += i\n            i += 1\n        }\n        if (sum == n) i - 1 else -1",
    "        var i = 1\n        var sum = 0L\n        while (sum < n) {\n            sum += i\n            i += 1\n        }\n        if (sum == n) i - 1 else -1",
    "        var i = 1L\n        while (i * i <= n) {\n            if (n % i == 0) {\n                return i + n / i\n            }\n            i += 1\n        }\n        return 0",
    "        var i = 1\n        while (i * i <= n) {\n            if (n % i == 0) return i + n / i\n            i += 1\n        }\n        return -1",
    "        var i = 1L\n        var sum = 0L\n        while (sum < n) {\n            if (n % i == 0) sum += i\n            i += 1\n        }\n        return sum",
    "        var i = 1L\n        var sum = 0L\n        while (sum < n) {\n            sum += i\n            i += 1\n        }\n        if (sum == n) i - 1 else -1"
  ]
}
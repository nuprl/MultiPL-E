{
  "name": "HumanEval_4_mean_absolute_deviation",
  "language": "php",
  "prompt": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n",
  "tests": "function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the mean absolute deviation\n    return $sum / $numbers->length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmppk5cnb7h.php:11\nStack trace:\n#0 /tmp/tmppk5cnb7h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmppk5cnb7h.php(28): candidate(Array)\n#2 /tmp/tmppk5cnb7h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmppk5cnb7h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpicas0b3m.php:11\nStack trace:\n#0 /tmp/tmpicas0b3m.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpicas0b3m.php(28): candidate(Array)\n#2 /tmp/tmpicas0b3m.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpicas0b3m.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpx_m81w9z.php:11\nStack trace:\n#0 /tmp/tmpx_m81w9z.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpx_m81w9z.php(30): candidate(Array)\n#2 /tmp/tmpx_m81w9z.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpx_m81w9z.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp07pdf0j0.php:11\nStack trace:\n#0 /tmp/tmp07pdf0j0.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp07pdf0j0.php(28): candidate(Array)\n#2 /tmp/tmp07pdf0j0.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp07pdf0j0.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpffg3yfkr.php:11\nStack trace:\n#0 /tmp/tmpffg3yfkr.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpffg3yfkr.php(28): candidate(Array)\n#2 /tmp/tmpffg3yfkr.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpffg3yfkr.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $n = array_flip($numbers);\n    $mean = mean($n);\n    $deviations = array();\n    foreach($n as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj5lpqeni.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj5lpqeni.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpj5lpqeni.php:11\nStack trace:\n#0 /tmp/tmpj5lpqeni.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpj5lpqeni.php(24): candidate(Array)\n#2 /tmp/tmpj5lpqeni.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpj5lpqeni.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5881ea5h.php:11\nStack trace:\n#0 /tmp/tmp5881ea5h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp5881ea5h.php(28): candidate(Array)\n#2 /tmp/tmp5881ea5h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp5881ea5h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $n = array();\n    foreach($numbers as $value) {\n        $n[] = abs($value - mean($n));\n    }\n    return mean($n);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpswweg33v.php:12\nStack trace:\n#0 /tmp/tmpswweg33v.php(18): mean_absolute_deviation(Array)\n#1 /tmp/tmpswweg33v.php(22): candidate(Array)\n#2 /tmp/tmpswweg33v.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpswweg33v.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_count = count($numbers);\n    $numbers_mean = mean($numbers);\n    $numbers_deviations = array();\n    foreach($numbers as $number) {\n        $numbers_deviations[] = abs($number - $numbers_mean);\n    }\n    return mean($numbers_deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5sadzm9q.php:11\nStack trace:\n#0 /tmp/tmp5sadzm9q.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp5sadzm9q.php(24): candidate(Array)\n#2 /tmp/tmp5sadzm9q.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp5sadzm9q.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute differences between each input number and the\n    // mean.\n    $differences = array();\n    foreach($numbers as $value) {\n        $differences[] = abs($value - $mean);\n    }\n\n    // Calculate the mean of the absolute differences.\n    $mad = mean($differences);\n\n    // Return the mean absolute deviation.\n    return $mad;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp39t7javs.php:11\nStack trace:\n#0 /tmp/tmp39t7javs.php(28): mean_absolute_deviation(Array)\n#1 /tmp/tmp39t7javs.php(32): candidate(Array)\n#2 /tmp/tmp39t7javs.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp39t7javs.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5881ea5h.php:11\nStack trace:\n#0 /tmp/tmp5881ea5h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp5881ea5h.php(28): candidate(Array)\n#2 /tmp/tmp5881ea5h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp5881ea5h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute differences between each element and the mean\n    $differences = array_map(\n        function ($n) {\n            return abs($n - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean of the absolute differences\n    $mad = mean($differences);\n\n    // Return the mean absolute deviation\n    return $mad;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpysl38azw.php:11\nStack trace:\n#0 /tmp/tmpysl38azw.php(29): mean_absolute_deviation(Array)\n#1 /tmp/tmpysl38azw.php(33): candidate(Array)\n#2 /tmp/tmpysl38azw.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpysl38azw.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations) / $numbers_length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpoyoxge5n.php:11\nStack trace:\n#0 /tmp/tmpoyoxge5n.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpoyoxge5n.php(24): candidate(Array)\n#2 /tmp/tmpoyoxge5n.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpoyoxge5n.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return (float) mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpvpov_olq.php:11\nStack trace:\n#0 /tmp/tmpvpov_olq.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpvpov_olq.php(24): candidate(Array)\n#2 /tmp/tmpvpov_olq.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpvpov_olq.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations) / $numbers_length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpjgvf0mcp.php:11\nStack trace:\n#0 /tmp/tmpjgvf0mcp.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpjgvf0mcp.php(24): candidate(Array)\n#2 /tmp/tmpjgvf0mcp.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpjgvf0mcp.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj7edgovb.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj7edgovb.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpj7edgovb.php:11\nStack trace:\n#0 /tmp/tmpj7edgovb.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpj7edgovb.php(24): candidate(Array)\n#2 /tmp/tmpj7edgovb.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpj7edgovb.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp8s6w3ejn.php:11\nStack trace:\n#0 /tmp/tmp8s6w3ejn.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp8s6w3ejn.php(28): candidate(Array)\n#2 /tmp/tmp8s6w3ejn.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp8s6w3ejn.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5881ea5h.php:11\nStack trace:\n#0 /tmp/tmp5881ea5h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp5881ea5h.php(28): candidate(Array)\n#2 /tmp/tmp5881ea5h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp5881ea5h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array_map(\n        function ($n) {\n            return abs($n - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpj0pcyyvn.php:11\nStack trace:\n#0 /tmp/tmpj0pcyyvn.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpj0pcyyvn.php(30): candidate(Array)\n#2 /tmp/tmpj0pcyyvn.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpj0pcyyvn.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7540h5ij.php:11\nStack trace:\n#0 /tmp/tmp7540h5ij.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7540h5ij.php(28): candidate(Array)\n#2 /tmp/tmp7540h5ij.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7540h5ij.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7540h5ij.php:11\nStack trace:\n#0 /tmp/tmp7540h5ij.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7540h5ij.php(28): candidate(Array)\n#2 /tmp/tmp7540h5ij.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7540h5ij.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp07pdf0j0.php:11\nStack trace:\n#0 /tmp/tmp07pdf0j0.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp07pdf0j0.php(28): candidate(Array)\n#2 /tmp/tmp07pdf0j0.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp07pdf0j0.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $numbers_mean = mean($numbers);\n    $numbers_deviations = array();\n    foreach($numbers as $number) {\n        $numbers_deviations[] = abs($number - $numbers_mean);\n    }\n    return mean($numbers_deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp1b41_tvm.php:11\nStack trace:\n#0 /tmp/tmp1b41_tvm.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp1b41_tvm.php(24): candidate(Array)\n#2 /tmp/tmp1b41_tvm.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1b41_tvm.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each number and the mean\n    $differences = array_map(\n        function ($number) {\n            return abs($number - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean of the absolute differences\n    return mean($differences);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpklouf0bk.php:11\nStack trace:\n#0 /tmp/tmpklouf0bk.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpklouf0bk.php(30): candidate(Array)\n#2 /tmp/tmpklouf0bk.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpklouf0bk.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array_map(\n        function ($number) {\n            return abs($number - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp16u2b029.php:11\nStack trace:\n#0 /tmp/tmp16u2b029.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmp16u2b029.php(30): candidate(Array)\n#2 /tmp/tmp16u2b029.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp16u2b029.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpaz68843u.php:11\nStack trace:\n#0 /tmp/tmpaz68843u.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpaz68843u.php(24): candidate(Array)\n#2 /tmp/tmpaz68843u.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpaz68843u.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpaz68843u.php:11\nStack trace:\n#0 /tmp/tmpaz68843u.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpaz68843u.php(24): candidate(Array)\n#2 /tmp/tmpaz68843u.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpaz68843u.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Initialize the mean\n    var mean = 0;\n\n    // For each number in the array, add it to the mean\n    for (var i = 0; i < $numbers.length; i++) {\n        mean += $numbers[i];\n    }\n\n    // Return the mean\n    return mean / $numbers.length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpy8kkqj40.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj7edgovb.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj7edgovb.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpj7edgovb.php:11\nStack trace:\n#0 /tmp/tmpj7edgovb.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpj7edgovb.php(24): candidate(Array)\n#2 /tmp/tmpj7edgovb.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpj7edgovb.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations) / $numbers_length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpoyoxge5n.php:11\nStack trace:\n#0 /tmp/tmpoyoxge5n.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpoyoxge5n.php(24): candidate(Array)\n#2 /tmp/tmpoyoxge5n.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpoyoxge5n.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_count = count($numbers);\n    $numbers_sum = array_sum($numbers);\n    $numbers_mean = $numbers_sum / $numbers_count;\n    $numbers_difference = array_diff($numbers, $numbers_mean);\n    $numbers_absolute_difference = array_abs($numbers_difference);\n    return array_sum($numbers_absolute_difference) / $numbers_count;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught TypeError: array_diff(): Argument #2 must be of type array, float given in /tmp/tmp_wzhb0yw.php:13\nStack trace:\n#0 /tmp/tmp_wzhb0yw.php(13): array_diff(Array, 1.5)\n#1 /tmp/tmp_wzhb0yw.php(19): mean_absolute_deviation(Array)\n#2 /tmp/tmp_wzhb0yw.php(23): candidate(Array)\n#3 /tmp/tmp_wzhb0yw.php(28): test()\n#4 {main}\n  thrown in /tmp/tmp_wzhb0yw.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7540h5ij.php:11\nStack trace:\n#0 /tmp/tmp7540h5ij.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7540h5ij.php(28): candidate(Array)\n#2 /tmp/tmp7540h5ij.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7540h5ij.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Initialize the mean\n    var mean = 0;\n    // Initialize the sum of absolute deviations\n    var sum = 0;\n    // Initialize the number of elements\n    var n = 0;\n    // For each element in the array\n    for (var i = 0; i < $numbers.length; i++) {\n        // Add the element to the sum\n        sum += Math.abs($numbers[i] - mean);\n        // Increment the number of elements\n        n++;\n    }\n    // Return the mean absolute deviation\n    return sum / n;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptt11xvd0.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the\n    // mean.\n    $differences = array();\n    foreach($numbers as $value) {\n        $differences[] = abs($value - $mean);\n    }\n\n    // Calculate the mean of the absolute differences.\n    $mad = mean($differences);\n\n    // Return the mean absolute deviation.\n    return $mad;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmphhfdkdti.php:11\nStack trace:\n#0 /tmp/tmphhfdkdti.php(28): mean_absolute_deviation(Array)\n#1 /tmp/tmphhfdkdti.php(32): candidate(Array)\n#2 /tmp/tmphhfdkdti.php(37): test()\n#3 {main}\n  thrown in /tmp/tmphhfdkdti.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute differences between each value and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0ict2a60.php:11\nStack trace:\n#0 /tmp/tmp0ict2a60.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmp0ict2a60.php(30): candidate(Array)\n#2 /tmp/tmp0ict2a60.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp0ict2a60.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the mean absolute deviation\n    return $sum / $numbers->length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmppk5cnb7h.php:11\nStack trace:\n#0 /tmp/tmppk5cnb7h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmppk5cnb7h.php(28): candidate(Array)\n#2 /tmp/tmppk5cnb7h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmppk5cnb7h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $differences = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean of the absolute differences\n    return mean($differences);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpu8tr828t.php:11\nStack trace:\n#0 /tmp/tmpu8tr828t.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpu8tr828t.php(30): candidate(Array)\n#2 /tmp/tmpu8tr828t.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpu8tr828t.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations) / $numbers_length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpjgvf0mcp.php:11\nStack trace:\n#0 /tmp/tmpjgvf0mcp.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpjgvf0mcp.php(24): candidate(Array)\n#2 /tmp/tmpjgvf0mcp.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpjgvf0mcp.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpicas0b3m.php:11\nStack trace:\n#0 /tmp/tmpicas0b3m.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpicas0b3m.php(28): candidate(Array)\n#2 /tmp/tmpicas0b3m.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpicas0b3m.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_count = count($numbers);\n    $numbers_sum = array_sum($numbers);\n    $numbers_mean = $numbers_sum / $numbers_count;\n    $numbers_deviations = array();\n    foreach($numbers as $number) {\n        $numbers_deviations[] = abs($number - $numbers_mean);\n    }\n    return array_mean($numbers_deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_mean() in /tmp/tmpw9okzq38.php:17\nStack trace:\n#0 /tmp/tmpw9okzq38.php(21): mean_absolute_deviation(Array)\n#1 /tmp/tmpw9okzq38.php(25): candidate(Array)\n#2 /tmp/tmpw9okzq38.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpw9okzq38.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp8s6w3ejn.php:11\nStack trace:\n#0 /tmp/tmp8s6w3ejn.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp8s6w3ejn.php(28): candidate(Array)\n#2 /tmp/tmp8s6w3ejn.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp8s6w3ejn.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the mean absolute deviation\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpibzwcted.php:11\nStack trace:\n#0 /tmp/tmpibzwcted.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpibzwcted.php(28): candidate(Array)\n#2 /tmp/tmpibzwcted.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpibzwcted.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute differences between each input number and the\n    // mean, and then average these absolute differences.\n    return mean(array_map(\n        $numbers,\n        function ($number) {\n            return abs($number - $mean);\n        }\n    ));\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpebpr1ey3.php:11\nStack trace:\n#0 /tmp/tmpebpr1ey3.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpebpr1ey3.php(28): candidate(Array)\n#2 /tmp/tmpebpr1ey3.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpebpr1ey3.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpe3b85rcj.php:11\nStack trace:\n#0 /tmp/tmpe3b85rcj.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpe3b85rcj.php(30): candidate(Array)\n#2 /tmp/tmpe3b85rcj.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpe3b85rcj.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $n = array();\n    foreach($numbers as $i => $n[$i]) {\n        $n[$i] = abs($n[$i] - mean($n));\n    }\n    return mean($n);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: Undefined variable $i in /tmp/tmpux292zcr.php on line 11\n\nWarning: Undefined array key 0 in /tmp/tmpux292zcr.php on line 12\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpux292zcr.php:12\nStack trace:\n#0 /tmp/tmpux292zcr.php(18): mean_absolute_deviation(Array)\n#1 /tmp/tmpux292zcr.php(22): candidate(Array)\n#2 /tmp/tmpux292zcr.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpux292zcr.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp8s6w3ejn.php:11\nStack trace:\n#0 /tmp/tmp8s6w3ejn.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp8s6w3ejn.php(28): candidate(Array)\n#2 /tmp/tmp8s6w3ejn.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp8s6w3ejn.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the average of the absolute differences\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpi261rixs.php:11\nStack trace:\n#0 /tmp/tmpi261rixs.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpi261rixs.php(28): candidate(Array)\n#2 /tmp/tmpi261rixs.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpi261rixs.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the average of the absolute differences\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpgiuhrhun.php:11\nStack trace:\n#0 /tmp/tmpgiuhrhun.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpgiuhrhun.php(28): candidate(Array)\n#2 /tmp/tmpgiuhrhun.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpgiuhrhun.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5881ea5h.php:11\nStack trace:\n#0 /tmp/tmp5881ea5h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp5881ea5h.php(28): candidate(Array)\n#2 /tmp/tmp5881ea5h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp5881ea5h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations) / $numbers_length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpjgvf0mcp.php:11\nStack trace:\n#0 /tmp/tmpjgvf0mcp.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpjgvf0mcp.php(24): candidate(Array)\n#2 /tmp/tmpjgvf0mcp.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpjgvf0mcp.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpx_m81w9z.php:11\nStack trace:\n#0 /tmp/tmpx_m81w9z.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpx_m81w9z.php(30): candidate(Array)\n#2 /tmp/tmpx_m81w9z.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpx_m81w9z.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean of the absolute differences\n    $deviations_mean = mean($deviations);\n\n    // Return the mean absolute deviation\n    return $deviations_mean;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp_4oyke3n.php:11\nStack trace:\n#0 /tmp/tmp_4oyke3n.php(27): mean_absolute_deviation(Array)\n#1 /tmp/tmp_4oyke3n.php(31): candidate(Array)\n#2 /tmp/tmp_4oyke3n.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp_4oyke3n.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute differences between each input number and the\n    // mean and return the average of these differences\n    return array_map(\n        $numbers,\n        function ($number) {\n            return abs($number - $mean);\n        }\n    );\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpawwr8hv9.php:11\nStack trace:\n#0 /tmp/tmpawwr8hv9.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpawwr8hv9.php(28): candidate(Array)\n#2 /tmp/tmpawwr8hv9.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpawwr8hv9.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean of the absolute differences\n    $deviations_mean = mean($deviations);\n\n    // Return the mean absolute deviation\n    return $deviations_mean;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp438hclz8.php:11\nStack trace:\n#0 /tmp/tmp438hclz8.php(27): mean_absolute_deviation(Array)\n#1 /tmp/tmp438hclz8.php(31): candidate(Array)\n#2 /tmp/tmp438hclz8.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp438hclz8.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_count = count($numbers);\n    $numbers_sum = array_sum($numbers);\n    $numbers_mean = $numbers_sum / $numbers_count;\n    $numbers_deviations = array();\n    foreach($numbers as $number) {\n        $numbers_deviations[] = abs($number - $numbers_mean);\n    }\n    return array_mean($numbers_deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_mean() in /tmp/tmpw9okzq38.php:17\nStack trace:\n#0 /tmp/tmpw9okzq38.php(21): mean_absolute_deviation(Array)\n#1 /tmp/tmpw9okzq38.php(25): candidate(Array)\n#2 /tmp/tmpw9okzq38.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpw9okzq38.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array_map(\n        function ($number) {\n            return abs($number - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpcxhexcu8.php:11\nStack trace:\n#0 /tmp/tmpcxhexcu8.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpcxhexcu8.php(30): candidate(Array)\n#2 /tmp/tmpcxhexcu8.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpcxhexcu8.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean of the absolute differences\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxry8qj66.php:11\nStack trace:\n#0 /tmp/tmpxry8qj66.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpxry8qj66.php(30): candidate(Array)\n#2 /tmp/tmpxry8qj66.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpxry8qj66.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array_map(\n        function ($number) {\n            return abs($number - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpcxhexcu8.php:11\nStack trace:\n#0 /tmp/tmpcxhexcu8.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpcxhexcu8.php(30): candidate(Array)\n#2 /tmp/tmpcxhexcu8.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpcxhexcu8.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7540h5ij.php:11\nStack trace:\n#0 /tmp/tmp7540h5ij.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7540h5ij.php(28): candidate(Array)\n#2 /tmp/tmp7540h5ij.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7540h5ij.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpicas0b3m.php:11\nStack trace:\n#0 /tmp/tmpicas0b3m.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpicas0b3m.php(28): candidate(Array)\n#2 /tmp/tmpicas0b3m.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpicas0b3m.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations) / $numbers_length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpoyoxge5n.php:11\nStack trace:\n#0 /tmp/tmpoyoxge5n.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpoyoxge5n.php(24): candidate(Array)\n#2 /tmp/tmpoyoxge5n.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpoyoxge5n.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the mean absolute deviation\n    return $sum / $numbers->length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmppk5cnb7h.php:11\nStack trace:\n#0 /tmp/tmppk5cnb7h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmppk5cnb7h.php(28): candidate(Array)\n#2 /tmp/tmppk5cnb7h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmppk5cnb7h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5881ea5h.php:11\nStack trace:\n#0 /tmp/tmp5881ea5h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp5881ea5h.php(28): candidate(Array)\n#2 /tmp/tmp5881ea5h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp5881ea5h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the\n    // mean of the input numbers.\n    $differences = array();\n    foreach($numbers as $value) {\n        $differences[] = abs($value - $mean);\n    }\n\n    // Calculate the mean of the absolute differences\n    $mean_differences = mean($differences);\n\n    // Return the mean absolute deviation\n    return $mean_differences;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpafy6ou9l.php:11\nStack trace:\n#0 /tmp/tmpafy6ou9l.php(28): mean_absolute_deviation(Array)\n#1 /tmp/tmpafy6ou9l.php(32): candidate(Array)\n#2 /tmp/tmpafy6ou9l.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpafy6ou9l.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_count = count($numbers);\n    $numbers_sum = array_sum($numbers);\n    $numbers_mean = $numbers_sum / $numbers_count;\n    $numbers_difference = array_diff($numbers, $numbers_mean);\n    return array_sum($numbers_difference) / $numbers_count;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught TypeError: array_diff(): Argument #2 must be of type array, float given in /tmp/tmpqstdlbmi.php:13\nStack trace:\n#0 /tmp/tmpqstdlbmi.php(13): array_diff(Array, 1.5)\n#1 /tmp/tmpqstdlbmi.php(18): mean_absolute_deviation(Array)\n#2 /tmp/tmpqstdlbmi.php(22): candidate(Array)\n#3 /tmp/tmpqstdlbmi.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpqstdlbmi.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpaz68843u.php:11\nStack trace:\n#0 /tmp/tmpaz68843u.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpaz68843u.php(24): candidate(Array)\n#2 /tmp/tmpaz68843u.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpaz68843u.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj7edgovb.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpj7edgovb.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpj7edgovb.php:11\nStack trace:\n#0 /tmp/tmpj7edgovb.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpj7edgovb.php(24): candidate(Array)\n#2 /tmp/tmpj7edgovb.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpj7edgovb.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $numbers_mean = mean($numbers);\n    $numbers_deviations = array();\n    foreach($numbers as $value) {\n        $numbers_deviations[] = abs($value - $numbers_mean);\n    }\n    return mean($numbers_deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmprhz0dblj.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmprhz0dblj.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmprhz0dblj.php:11\nStack trace:\n#0 /tmp/tmprhz0dblj.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmprhz0dblj.php(24): candidate(Array)\n#2 /tmp/tmprhz0dblj.php(29): test()\n#3 {main}\n  thrown in /tmp/tmprhz0dblj.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean of the absolute differences\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpqcg6gspz.php:11\nStack trace:\n#0 /tmp/tmpqcg6gspz.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpqcg6gspz.php(30): candidate(Array)\n#2 /tmp/tmpqcg6gspz.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpqcg6gspz.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_count = count($numbers);\n    $numbers_mean = mean($numbers);\n    $numbers_deviations = array();\n    foreach($numbers as $number) {\n        $numbers_deviations[] = abs($number - $numbers_mean);\n    }\n    return mean($numbers_deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5sadzm9q.php:11\nStack trace:\n#0 /tmp/tmp5sadzm9q.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp5sadzm9q.php(24): candidate(Array)\n#2 /tmp/tmp5sadzm9q.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp5sadzm9q.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7540h5ij.php:11\nStack trace:\n#0 /tmp/tmp7540h5ij.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7540h5ij.php(28): candidate(Array)\n#2 /tmp/tmp7540h5ij.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7540h5ij.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the\n    // mean.\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpmupjizmq.php:11\nStack trace:\n#0 /tmp/tmpmupjizmq.php(25): mean_absolute_deviation(Array)\n#1 /tmp/tmpmupjizmq.php(29): candidate(Array)\n#2 /tmp/tmpmupjizmq.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpmupjizmq.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences between each element\n    // and the mean\n    $sum = 0;\n    foreach ($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq0fuipr4.php:11\nStack trace:\n#0 /tmp/tmpq0fuipr4.php(25): mean_absolute_deviation(Array)\n#1 /tmp/tmpq0fuipr4.php(29): candidate(Array)\n#2 /tmp/tmpq0fuipr4.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpq0fuipr4.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpicas0b3m.php:11\nStack trace:\n#0 /tmp/tmpicas0b3m.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpicas0b3m.php(28): candidate(Array)\n#2 /tmp/tmpicas0b3m.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpicas0b3m.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the mean absolute deviation\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7j_7as3k.php:11\nStack trace:\n#0 /tmp/tmp7j_7as3k.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7j_7as3k.php(28): candidate(Array)\n#2 /tmp/tmp7j_7as3k.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7j_7as3k.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the mean\n    $deviations = array_map(\n        function ($number) {\n            return abs($number - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpr8b2qoqs.php:11\nStack trace:\n#0 /tmp/tmpr8b2qoqs.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpr8b2qoqs.php(30): candidate(Array)\n#2 /tmp/tmpr8b2qoqs.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpr8b2qoqs.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $numbers_mean = mean($numbers);\n    $numbers_deviations = array();\n    foreach($numbers as $number) {\n        $numbers_deviations[] = abs($number - $numbers_mean);\n    }\n    return mean($numbers_deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp1b41_tvm.php:11\nStack trace:\n#0 /tmp/tmp1b41_tvm.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp1b41_tvm.php(24): candidate(Array)\n#2 /tmp/tmp1b41_tvm.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1b41_tvm.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpx_m81w9z.php:11\nStack trace:\n#0 /tmp/tmpx_m81w9z.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpx_m81w9z.php(30): candidate(Array)\n#2 /tmp/tmpx_m81w9z.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpx_m81w9z.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the\n    // mean.\n    $differences = array();\n    foreach($numbers as $value) {\n        $differences[] = abs($value - $mean);\n    }\n\n    // Calculate the mean of the absolute differences\n    $mad = mean($differences);\n\n    // Return the mean absolute deviation\n    return $mad;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp43j550bt.php:11\nStack trace:\n#0 /tmp/tmp43j550bt.php(28): mean_absolute_deviation(Array)\n#1 /tmp/tmp43j550bt.php(32): candidate(Array)\n#2 /tmp/tmp43j550bt.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp43j550bt.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Return the average of the absolute differences\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpguop0dar.php:11\nStack trace:\n#0 /tmp/tmpguop0dar.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpguop0dar.php(30): candidate(Array)\n#2 /tmp/tmpguop0dar.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpguop0dar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array_map(\n        function ($value) {\n            return abs($value - $mean);\n        },\n        $numbers\n    );\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpx_m81w9z.php:11\nStack trace:\n#0 /tmp/tmpx_m81w9z.php(26): mean_absolute_deviation(Array)\n#1 /tmp/tmpx_m81w9z.php(30): candidate(Array)\n#2 /tmp/tmpx_m81w9z.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpx_m81w9z.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the mean absolute deviation\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7j_7as3k.php:11\nStack trace:\n#0 /tmp/tmp7j_7as3k.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7j_7as3k.php(28): candidate(Array)\n#2 /tmp/tmp7j_7as3k.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7j_7as3k.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each number and the mean\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpn506c6me.php:11\nStack trace:\n#0 /tmp/tmpn506c6me.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpn506c6me.php(28): candidate(Array)\n#2 /tmp/tmpn506c6me.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpn506c6me.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the average of the absolute differences\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp44z_jhj3.php:11\nStack trace:\n#0 /tmp/tmp44z_jhj3.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp44z_jhj3.php(28): candidate(Array)\n#2 /tmp/tmp44z_jhj3.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp44z_jhj3.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpicas0b3m.php:11\nStack trace:\n#0 /tmp/tmpicas0b3m.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpicas0b3m.php(28): candidate(Array)\n#2 /tmp/tmpicas0b3m.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpicas0b3m.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_count = count($numbers);\n    $numbers_sum = array_sum($numbers);\n    $numbers_mean = $numbers_sum / $numbers_count;\n    $numbers_difference = array_diff($numbers, $numbers_mean);\n    return array_sum($numbers_difference) / $numbers_count;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught TypeError: array_diff(): Argument #2 must be of type array, float given in /tmp/tmpqstdlbmi.php:13\nStack trace:\n#0 /tmp/tmpqstdlbmi.php(13): array_diff(Array, 1.5)\n#1 /tmp/tmpqstdlbmi.php(18): mean_absolute_deviation(Array)\n#2 /tmp/tmpqstdlbmi.php(22): candidate(Array)\n#3 /tmp/tmpqstdlbmi.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpqstdlbmi.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the mean absolute deviation\n    return $sum / $numbers->length;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmppk5cnb7h.php:11\nStack trace:\n#0 /tmp/tmppk5cnb7h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmppk5cnb7h.php(28): candidate(Array)\n#2 /tmp/tmppk5cnb7h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmppk5cnb7h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp07pdf0j0.php:11\nStack trace:\n#0 /tmp/tmp07pdf0j0.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp07pdf0j0.php(28): candidate(Array)\n#2 /tmp/tmp07pdf0j0.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp07pdf0j0.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute differences between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpve_z4ct3.php:11\nStack trace:\n#0 /tmp/tmpve_z4ct3.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpve_z4ct3.php(28): candidate(Array)\n#2 /tmp/tmpve_z4ct3.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpve_z4ct3.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the sum of the absolute differences from the mean\n    $sum = 0;\n    foreach($numbers as $value) {\n        $sum += abs($value - $mean);\n    }\n\n    // Return the average of the absolute differences\n    return $sum / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7540h5ij.php:11\nStack trace:\n#0 /tmp/tmp7540h5ij.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp7540h5ij.php(28): candidate(Array)\n#2 /tmp/tmp7540h5ij.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7540h5ij.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each input number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5881ea5h.php:11\nStack trace:\n#0 /tmp/tmp5881ea5h.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp5881ea5h.php(28): candidate(Array)\n#2 /tmp/tmp5881ea5h.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp5881ea5h.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpaz68843u.php:11\nStack trace:\n#0 /tmp/tmpaz68843u.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmpaz68843u.php(24): candidate(Array)\n#2 /tmp/tmpaz68843u.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpaz68843u.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers = array_flip($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp2ddr59i7.php on line 10\n\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2ddr59i7.php:11\nStack trace:\n#0 /tmp/tmp2ddr59i7.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp2ddr59i7.php(24): candidate(Array)\n#2 /tmp/tmp2ddr59i7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp2ddr59i7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    for ($i = 0; $i < $numbers_length; $i++) {\n        $deviations[$i] = abs($numbers[$i] - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0prw15ed.php:11\nStack trace:\n#0 /tmp/tmp0prw15ed.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp0prw15ed.php(24): candidate(Array)\n#2 /tmp/tmp0prw15ed.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp0prw15ed.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each element and the mean\n    $deviations = array_map(function($n) {\n        return abs($n - $mean);\n    }, $numbers);\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmppydsmgnb.php:11\nStack trace:\n#0 /tmp/tmppydsmgnb.php(23): mean_absolute_deviation(Array)\n#1 /tmp/tmppydsmgnb.php(27): candidate(Array)\n#2 /tmp/tmppydsmgnb.php(32): test()\n#3 {main}\n  thrown in /tmp/tmppydsmgnb.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input numbers\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each number and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean absolute deviation\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp07pdf0j0.php:11\nStack trace:\n#0 /tmp/tmp07pdf0j0.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmp07pdf0j0.php(28): candidate(Array)\n#2 /tmp/tmp07pdf0j0.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp07pdf0j0.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    // Calculate the mean of the input array\n    $mean = mean($numbers);\n\n    // Calculate the absolute difference between each value and the mean\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n\n    // Calculate the mean of the absolute differences\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpb2rjfw_m.php:11\nStack trace:\n#0 /tmp/tmpb2rjfw_m.php(24): mean_absolute_deviation(Array)\n#1 /tmp/tmpb2rjfw_m.php(28): candidate(Array)\n#2 /tmp/tmpb2rjfw_m.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpb2rjfw_m.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// For a given array of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $numbers_length = count($numbers);\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach($numbers as $value) {\n        $deviations[] = abs($value - $mean);\n    }\n    return mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293376,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp36g7nyar.php:11\nStack trace:\n#0 /tmp/tmp36g7nyar.php(20): mean_absolute_deviation(Array)\n#1 /tmp/tmp36g7nyar.php(24): candidate(Array)\n#2 /tmp/tmp36g7nyar.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp36g7nyar.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
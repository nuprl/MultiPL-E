{
  "name": "HumanEval_143_words_in_sentence",
  "language": "php",
  "prompt": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n",
  "tests": "function candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var length = words.length;\n    for (var i = 0; i < length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpg65weau0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsk_5r_ug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let result = '';\n    let words = $sentence.split(' ');\n    let prime = [];\n    let count = 0;\n    for (let i = 0; i < words.length; i++) {\n        if (isPrime(words[i])) {\n            prime.push(words[i]);\n            count++;\n        }\n    }\n    for (let i = 0; i < prime.length; i++) {\n        result += prime[i];\n        if (i < prime.length - 1) {\n            result += ' ';\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"result\" in /tmp/tmpquny3xp4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp7cv_dd_4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var len = words.length;\n    for (var i = 0; i < len; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb2dnhhgl.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var len = words.length;\n    for(var i = 0; i < len; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp78a2y3b6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var len = words.length;\n    for (var i = 0; i < len; i++) {\n        var word = words[i];\n        if (isPrime(word.length)) {\n            result += word;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_jfmnlq9.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var count = 0;\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n            count++;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1uzehexn.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp70l6kl1s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmphe3wbtfg.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0phrwy5e.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var len = words.length;\n    for (var i = 0; i < len; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb2dnhhgl.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var primes = [];\n    for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        var prime = isPrime(word.length);\n        if (prime) {\n            primes.push(prime);\n        }\n    }\n    var prime_index = 0;\n    for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        if (primes[prime_index] == word.length) {\n            result += word;\n            prime_index++;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmporb9xr1w.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var prime = [];\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            prime.push(words[i]);\n        }\n    }\n    for(var i = 0; i < prime.length; i++){\n        result += prime[i];\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_xlcfe1x.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsk_5r_ug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let arr = $sentence.split(' ');\n    let result = '';\n    for (let i = 0; i < arr.length; i++) {\n        if (isPrime(arr[i].length())) {\n            result += arr[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"arr\" in /tmp/tmp3xnpta0l.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0phrwy5e.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var prime = [];\n    for(var i = 0; i < words.length; i++){\n        var prime = prime_check(words[i]);\n        if(prime.length > 0){\n            result += words[i];\n            result += \" \";\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpv0u7iedd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0phrwy5e.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var prime = true;\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result += words[i];\n        }\n        else{\n            prime = false;\n        }\n    }\n    if(prime){\n        return result;\n    }\n    else{\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpehzp9tut.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var res = [];\n    for(var i = 0; i < arr.length; i++){\n        if(isPrime(arr[i].length())){\n            res.push(arr[i]);\n        }\n    }\n    return res.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpm1je30vd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpthsbkpvz.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var prime = [];\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i])){\n            prime.push(words[i]);\n        }\n    }\n    for(var i = 0; i < prime.length; i++){\n        result += prime[i];\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpqlxk491c.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp70l6kl1s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < arr.length; i++) {\n        if (isPrime(arr[i].length())) {\n            result += arr[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp56s3_w3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0phrwy5e.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let result = [];\n    let words = $sentence.split(' ');\n    let prime = [];\n    let prime_length = 0;\n    let i = 0;\n    for (i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            prime.push(words[i]);\n            prime_length += words[i].length;\n        }\n    }\n    for (i = 0; i < prime.length; i++) {\n        result.push(prime[i]);\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"result\" in /tmp/tmpjkd06agr.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        if (isPrime(word.length)) {\n            result.push(word);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyb4rmkcw.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var prime = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            prime.push(words[i]);\n        }\n    }\n    for (var i = 0; i < prime.length; i++) {\n        result.push(prime[i]);\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp52luyxeq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let words = $sentence.split(' ');\n    let result = '';\n    let count = 0;\n    for (let i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n            count++;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"words\" in /tmp/tmpe28njxov.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let words = $sentence.split(' ');\n    let result = '';\n    for (let i = 0; i < words.length; i++) {\n        let word = words[i];\n        if (isPrime(word.length)) {\n            result += word;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"words\" in /tmp/tmpcpcs14aj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for(var i = 0; i < words.length; i++){\n        var word = words[i];\n        if(isPrime(word.length)){\n            new_words.push(word);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzys8m72o.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < words.length) {\n        if(isPrime(words[i].length)) {\n            result.push(words[i]);\n            i++;\n        } else {\n            j = i;\n            while(j < words.length) {\n                if(isPrime(words[j].length)) {\n                    result.push(words[j]);\n                    j++;\n                } else {\n                    k = j;\n                    while(k < words.length) {\n                        if(isPrime(words[k].length)) {\n                            result.push(words[k]);\n                            k++;\n                        } else {\n                            k = words.length;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpp95urxva.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp70l6kl1s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsk_5r_ug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let words = $sentence.split(' ');\n    let result = '';\n    for (let i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"words\" in /tmp/tmpduqn96j1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var len = words.length;\n    for(var i = 0; i < len; i++){\n        if(isPrime(words[i].length)){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpaxff83nu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let result = [];\n    let words = $sentence.split(' ');\n    for (let i = 0; i < words.length; i++) {\n        let word = words[i];\n        if (isPrime(word.length)) {\n            result.push(word);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"result\" in /tmp/tmp5g6ol4a8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsk_5r_ug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var i = 0;\n    for(i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpa87p2x53.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0phrwy5e.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp7cv_dd_4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(\" \");\n    var result = \"\";\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpbz5nsa7n.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp70l6kl1s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let res = [];\n    let words = $sentence.split(' ');\n    let len = words.length;\n    let i = 0;\n    while (i < len) {\n        let word = words[i];\n        let prime = isPrime(word.length);\n        if (prime) {\n            res.push(word);\n        }\n        i++;\n    }\n    return res.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"res\" in /tmp/tmp0e4sb4j0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsk_5r_ug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var result = '';\n    for(var i = 0; i < arr.length; i++){\n        if(isPrime(arr[i].length())){\n            result += arr[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp2pwv73uv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        if (isPrime(word.length)) {\n            new_words.push(word);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp5dc2n3dv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpthsbkpvz.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var len = words.length;\n    for (var i = 0; i < len; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpi9vq15no.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp7cv_dd_4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwodev8uj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (is_prime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4ncylxci.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++) {\n        if(isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp2xtsmyvq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var count = 0;\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n            count++;\n        }\n    }\n    if (count == 1) {\n        return result;\n    } else {\n        return '';\n    }\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcye_4i2m.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var prime = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            prime.push(words[i]);\n        }\n    }\n    for (var i = 0; i < prime.length; i++) {\n        result += prime[i];\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmppvel46y9.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var i = 0;\n    var j = 0;\n    while (i < words.length) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n            i++;\n        } else {\n            j = i;\n            while (j < words.length) {\n                if (isPrime(words[j].length)) {\n                    result += words[j];\n                    j++;\n                } else {\n                    break;\n                }\n            }\n            i = j;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkfr6abdj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let res = [];\n    let arr = $sentence.split(' ');\n    for(let i = 0; i < arr.length; i++){\n        if(isPrime(arr[i].length())){\n            res.push(arr[i]);\n        }\n    }\n    return res.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"res\" in /tmp/tmpb2ihh15c.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var count = 0;\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n            count++;\n        }\n    }\n    if (count == words.length) {\n        return result;\n    } else {\n        return '';\n    }\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp9tu07ign.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < arr.length; i++) {\n        if (isPrime(arr[i].length())) {\n            result += arr[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp56s3_w3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsk_5r_ug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let arr = $sentence.split(\" \");\n    let result = \"\";\n    let count = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(isPrime(arr[i].length())){\n            result += arr[i];\n            count++;\n        }\n    }\n    if(count == 0){\n        return \"\";\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"arr\" in /tmp/tmpm211le2n.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmphe3wbtfg.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let result = [];\n    let words = $sentence.split(' ');\n    let word_length = [];\n    let prime_length = [];\n    let i = 0;\n    for(let word of words) {\n        word_length.push(word.length);\n        prime_length.push(isPrime(word.length));\n    }\n    for(let j = 0; j < word_length.length; j++) {\n        if(prime_length[j]) {\n            result.push(words[i]);\n            i++;\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"result\" in /tmp/tmp8bpkxlsm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var prime = true;\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpnjim53hg.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var prime = true;\n    while(i < words.length) {\n        if(isPrime(words[i].length)) {\n            prime = true;\n            result += words[i];\n            i++;\n        } else {\n            if(prime) {\n                prime = false;\n                result += words[i];\n                i++;\n            } else {\n                j = i;\n                while(j < words.length) {\n                    if(isPrime(words[j].length)) {\n                        prime = true;\n                        result += words[j];\n                        j++;\n                        break;\n                    } else {\n                        j++;\n                    }\n                }\n                i = j;\n            }\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoq9033su.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for(var i = 0; i < words.length; i++){\n        var word = words[i];\n        if(isPrime(word.length)){\n            result += word;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpppk_kiy6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var result = '';\n    var count = 0;\n    for (var i = 0; i < arr.length; i++) {\n        if (isPrime(arr[i].length)) {\n            result += arr[i];\n            count++;\n        }\n    }\n    if (count == 0) {\n        return $sentence;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpq719wybq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmphe3wbtfg.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let res = [];\n    let words = $sentence.split(' ');\n    let len = words.length;\n    for (let i = 0; i < len; i++) {\n        let word = words[i];\n        let prime = isPrime(word.length);\n        if (prime) {\n            res.push(word);\n        }\n    }\n    return res.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"res\" in /tmp/tmpyrzhr_ex.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var length = words.length;\n    var i = 0;\n    var j = 0;\n    var prime = 0;\n    var prime_flag = 0;\n    var prime_flag_2 = 0;\n    var prime_flag_3 = 0;\n    var prime_flag_4 = 0;\n    var prime_flag_5 = 0;\n    var prime_flag_6 = 0;\n    var prime_flag_7 = 0;\n    var prime_flag_8 = 0;\n    var prime_flag_9 = 0;\n    var prime_flag_10 = 0;\n    var prime_flag_11 = 0;\n    var prime_flag_12 = 0;\n    var prime_flag_13 = 0;\n    var prime_flag_14 = 0;\n    var prime_flag_15 = 0;\n    var prime_flag_16 = 0;\n    var prime_flag_17 = 0;\n    var prime_flag_18 = 0;\n    var prime_flag_19 = 0;\n    var prime_flag_20 = 0;\n    var prime_flag_21 = 0;\n    var prime_flag_22 = 0;\n    var prime_flag_23 = 0;\n    var prime_flag_24 = 0;\n    var prime_flag_25 = 0;\n    var prime_flag_26 = 0;\n    var prime_flag_27 = 0;\n    var prime_flag_28 = 0;\n    var prime_flag_29 = 0;\n    var prime_flag_30 = 0;\n    var prime_flag_31 = 0;\n    var prime_flag_32 = 0;\n    var prime_flag_33 = 0;\n    var prime_flag_34 = 0;\n    var prime_flag_35 = 0;\n    var prime_flag_36 = 0;\n    var prime_flag_37 = 0;\n    var prime_flag_38 = 0;\n    var prime_flag_39 = 0;\n    var prime_flag_40 = 0;\n    var prime_flag_41 = 0;\n    var prime_flag_\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpshotcxs_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = '';\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpz5655xi3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let result = '';\n    let words = $sentence.split(' ');\n    let word_count = 0;\n    let prime_count = 0;\n    for (let i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            prime_count++;\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"result\" in /tmp/tmpzpg8hoy0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    var i = 0;\n    for (i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp9cx49m9u.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(\" \");\n    var result = \"\";\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpy5ti5ct9.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let words = $sentence.split(' ');\n    let result = '';\n    for (let i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"words\" in /tmp/tmpduqn96j1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = '';\n    var words = $sentence.split(' ');\n    var primes = [];\n    var prime = true;\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i])){\n            primes.push(words[i]);\n        }\n    }\n    for(var i = 0; i < primes.length; i++){\n        for(var j = 0; j < primes.length; j++){\n            if(primes[i] === primes[j]){\n                prime = false;\n                break;\n            }\n        }\n        if(prime){\n            result += primes[i];\n        }\n        prime = true;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvm1vt6h8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var res = [];\n    for(var i=0;i<arr.length;i++){\n        if(isPrime(arr[i].length())){\n            res.push(arr[i]);\n        }\n    }\n    return res.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpo_zd60xn.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var new_words = [];\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            new_words.push(words[i]);\n        }\n    }\n    return new_words.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsk_5r_ug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    var primes = [];\n    for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        var prime = isPrime(word.length);\n        if (prime) {\n            primes.push(prime);\n        }\n    }\n    for (var i = 0; i < primes.length; i++) {\n        var prime = primes[i];\n        var index = primes.indexOf(prime);\n        result += words[index];\n        if (i < primes.length - 1) {\n            result += \" \";\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpy_wf0tp7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    var len = words.length;\n    for(var i = 0; i < len; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp78a2y3b6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = '';\n    var words = $sentence.split(' ');\n    var len = words.length;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var prime = 0;\n    while (i < len) {\n        prime = isPrime(words[i]);\n        if (prime) {\n            result += words[i];\n            j = i + 1;\n            while (j < len) {\n                prime = isPrime(words[j]);\n                if (prime) {\n                    result += ' ' + words[j];\n                    k = j + 1;\n                    while (k < len) {\n                        prime = isPrime(words[k]);\n                        if (prime) {\n                            result += ' ' + words[k];\n                            k++;\n                        } else {\n                            break;\n                        }\n                    }\n                    break;\n                } else {\n                    j++;\n                }\n            }\n            break;\n        } else {\n            i++;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpo4i1l_1n.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < arr.length; i++) {\n        if (isPrime(arr[i].length())) {\n            result += arr[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp56s3_w3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = [];\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpo97y3e1s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0phrwy5e.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = '';\n    var words = $sentence.split(' ');\n    var len = words.length;\n    for (var i = 0; i < len; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3l1vbd7t.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var arr = $sentence.split(' ');\n    var result = '';\n    var count = 0;\n    for (var i = 0; i < arr.length; i++) {\n        if (isPrime(arr[i].length)) {\n            result += arr[i];\n            count++;\n        }\n    }\n    if (count == 0) {\n        return $sentence;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpq719wybq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    let words = $sentence.split(' ');\n    let result = '';\n    for (let i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected identifier \"words\" in /tmp/tmpduqn96j1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp70l6kl1s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = \"\";\n    var words = $sentence.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length())){\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1lr6y63p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw6x77fb1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var result = [];\n    var words = $sentence.split(' ');\n    for(var i = 0; i < words.length; i++){\n        if(isPrime(words[i].length)){\n            result.push(words[i]);\n        }\n    }\n    return result.join(' ');\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0phrwy5e.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence($sentence) {\n    // Write your code here\n    var words = $sentence.split(' ');\n    var result = '';\n    for (var i = 0; i < words.length; i++) {\n        if (isPrime(words[i].length)) {\n            result += words[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return words_in_sentence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\") !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"there is no place available here\") !== \"there is no place\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !== \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293407,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpebk89r8p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
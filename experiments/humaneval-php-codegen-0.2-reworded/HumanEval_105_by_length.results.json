{
  "name": "HumanEval_105_by_length",
  "language": "php",
  "prompt": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n",
  "tests": "function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpqkgn381m.php:24\nStack trace:\n#0 /tmp/tmpqkgn381m.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpqkgn381m.php(29): by_length(Array)\n#2 /tmp/tmpqkgn381m.php(33): candidate(Array)\n#3 /tmp/tmpqkgn381m.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpqkgn381m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpmigfwrc3.php:27\nStack trace:\n#0 /tmp/tmpmigfwrc3.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpmigfwrc3.php(33): by_length(Array)\n#2 /tmp/tmpmigfwrc3.php(37): candidate(Array)\n#3 /tmp/tmpmigfwrc3.php(44): test()\n#4 {main}\n  thrown in /tmp/tmpmigfwrc3.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpq7_4vu38.php:27\nStack trace:\n#0 /tmp/tmpq7_4vu38.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpq7_4vu38.php(33): by_length(Array)\n#2 /tmp/tmpq7_4vu38.php(37): candidate(Array)\n#3 /tmp/tmpq7_4vu38.php(44): test()\n#4 {main}\n  thrown in /tmp/tmpq7_4vu38.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxdqdazqc.php:24\nStack trace:\n#0 /tmp/tmpxdqdazqc.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpxdqdazqc.php(29): by_length(Array)\n#2 /tmp/tmpxdqdazqc.php(33): candidate(Array)\n#3 /tmp/tmpxdqdazqc.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpxdqdazqc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + str_replace('0', 'One', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpvz0o_7wp.php:24\nStack trace:\n#0 /tmp/tmpvz0o_7wp.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpvz0o_7wp.php(29): by_length(Array)\n#2 /tmp/tmpvz0o_7wp.php(33): candidate(Array)\n#3 /tmp/tmpvz0o_7wp.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpvz0o_7wp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmphc01f9mv.php:21\nStack trace:\n#0 /tmp/tmphc01f9mv.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmphc01f9mv.php(25): by_length(Array)\n#2 /tmp/tmphc01f9mv.php(29): candidate(Array)\n#3 /tmp/tmphc01f9mv.php(36): test()\n#4 {main}\n  thrown in /tmp/tmphc01f9mv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return str_replace(\"0\", \"One\", \"Nine\", $i);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpp2m_tlzt.php:24\nStack trace:\n#0 /tmp/tmpp2m_tlzt.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpp2m_tlzt.php(29): by_length(Array)\n#2 /tmp/tmpp2m_tlzt.php(33): candidate(Array)\n#3 /tmp/tmpp2m_tlzt.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpp2m_tlzt.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push($arr[$i]);\n        }\n    }\n\n    $result.sort(function($a, $b) {\n        return $b - $a;\n    });\n\n    for (var $i = 0; $i < $result.length; $i++) {\n        $result[$i] = $result[$i] + \"\";\n    }\n\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmprlr7dl7v.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return str_replace(\"One\", \"One\", $i);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpwrq99nq9.php:24\nStack trace:\n#0 /tmp/tmpwrq99nq9.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpwrq99nq9.php(29): by_length(Array)\n#2 /tmp/tmpwrq99nq9.php(33): candidate(Array)\n#3 /tmp/tmpwrq99nq9.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpwrq99nq9.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($x) {\n        return $x >= 1 && $x <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($x) {\n        return $x + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpv5sjt9gd.php:24\nStack trace:\n#0 /tmp/tmpv5sjt9gd.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpv5sjt9gd.php(29): by_length(Array)\n#2 /tmp/tmpv5sjt9gd.php(33): candidate(Array)\n#3 /tmp/tmpv5sjt9gd.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpv5sjt9gd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp2y8zp_ml.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($n) {\n        return $n + ' ' + $n;\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpiq16t7rw.php:24\nStack trace:\n#0 /tmp/tmpiq16t7rw.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpiq16t7rw.php(28): by_length(Array)\n#2 /tmp/tmpiq16t7rw.php(32): candidate(Array)\n#3 /tmp/tmpiq16t7rw.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpiq16t7rw.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($i) {\n        return $i + ' ' + str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcjge708p.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push($arr[$i]);\n        }\n    }\n    $result.sort(function($a, $b) {\n        return $b - $a;\n    });\n    for (var $i = 0; $i < $result.length; $i++) {\n        $result[$i] = $result[$i] + \"\";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpboo5w2di.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp2y8zp_ml.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_sort($arr, function ($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function ($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1w025mkj.php:21\nStack trace:\n#0 /tmp/tmp1w025mkj.php(30): by_length(Array)\n#1 /tmp/tmp1w025mkj.php(34): candidate(Array)\n#2 /tmp/tmp1w025mkj.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp1w025mkj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpz91anrn4.php:21\nStack trace:\n#0 /tmp/tmpz91anrn4.php(30): by_length(Array)\n#1 /tmp/tmpz91anrn4.php(34): candidate(Array)\n#2 /tmp/tmpz91anrn4.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpz91anrn4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    $arr = $arr.filter(function(n) {\n        return n >= 1 && n <= 9;\n    });\n    $arr = $arr.sort(function(a, b) {\n        return b - a;\n    });\n    $arr = $arr.map(function(n) {\n        return \"One\".substr(n - 1, 1);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmpu2e2u507.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + $i;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbx10w_yv.php:21\nStack trace:\n#0 /tmp/tmpbx10w_yv.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbx10w_yv.php(26): by_length(Array)\n#2 /tmp/tmpbx10w_yv.php(30): candidate(Array)\n#3 /tmp/tmpbx10w_yv.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbx10w_yv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + ' ' + $n;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp2lrqtrx8.php:24\nStack trace:\n#0 /tmp/tmp2lrqtrx8.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp2lrqtrx8.php(29): by_length(Array)\n#2 /tmp/tmp2lrqtrx8.php(33): candidate(Array)\n#3 /tmp/tmp2lrqtrx8.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp2lrqtrx8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpkme6nco6.php:24\nStack trace:\n#0 /tmp/tmpkme6nco6.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpkme6nco6.php(28): by_length(Array)\n#2 /tmp/tmpkme6nco6.php(32): candidate(Array)\n#3 /tmp/tmpkme6nco6.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpkme6nco6.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + ' ' + $n;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpiqx5v1sz.php:21\nStack trace:\n#0 /tmp/tmpiqx5v1sz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpiqx5v1sz.php(26): by_length(Array)\n#2 /tmp/tmpiqx5v1sz.php(30): candidate(Array)\n#3 /tmp/tmpiqx5v1sz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpiqx5v1sz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    var $arr_len = $arr.length;\n    var $arr_tmp = [];\n    for (var $i = 0; $i < $arr_len; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $arr_tmp.push($arr[$i]);\n        }\n    }\n    $arr_tmp.sort(function($a, $b) {\n        return $b - $a;\n    });\n    var $arr_tmp_len = $arr_tmp.length;\n    var $arr_tmp_tmp = [];\n    for (var $i = 0; $i < $arr_tmp_len; $i++) {\n        $arr_tmp_tmp.push($arr_tmp[$i] + \" \" + $arr_tmp[$i]);\n    }\n    return $arr_tmp_tmp;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp8fzeor7d.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num == 1 ? \"One\" : $num == 2 ? \"Two\" : $num == 3 ? \"Three\" : $num == 4 ? \"Four\" : $num == 5 ? \"Five\" : $num == 6 ? \"Six\" : $num == 7 ? \"Seven\" : $num == 8 ? \"Eight\" : $num == 9 ? \"Nine\" : \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpme7offfp.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr) {\n        return [];\n    }\n    $arr = $arr.sort(function (a, b) {\n        return a - b;\n    });\n    $arr = $arr.filter(function (i) {\n        return i >= 1 && i <= 9;\n    });\n    $arr = $arr.sort(function (a, b) {\n        return b - a;\n    });\n    $arr = $arr.map(function (i) {\n        return $arr.indexOf(i) + 1;\n    });\n    return $arr.map(function (i) {\n        return $arr[i - 1];\n    });\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmpw1uatgvy.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n[0];\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpzs7yqfko.php:20\nStack trace:\n#0 /tmp/tmpzs7yqfko.php(20): array_map(Array, Object(Closure))\n#1 /tmp/tmpzs7yqfko.php(32): by_length(Array)\n#2 /tmp/tmpzs7yqfko.php(36): candidate(Array)\n#3 /tmp/tmpzs7yqfko.php(43): test()\n#4 {main}\n  thrown in /tmp/tmpzs7yqfko.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(Number($arr[$i]).toString());\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp8rvjqysh.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function($num1, $num2) {\n        return $num1 - $num2;\n    });\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp25ar8j6t.php:21\nStack trace:\n#0 /tmp/tmp25ar8j6t.php(31): by_length(Array)\n#1 /tmp/tmp25ar8j6t.php(35): candidate(Array)\n#2 /tmp/tmp25ar8j6t.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp25ar8j6t.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpe20gudll.php:24\nStack trace:\n#0 /tmp/tmpe20gudll.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpe20gudll.php(28): by_length(Array)\n#2 /tmp/tmpe20gudll.php(32): candidate(Array)\n#3 /tmp/tmpe20gudll.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpe20gudll.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpdvqk29mf.php:24\nStack trace:\n#0 /tmp/tmpdvqk29mf.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpdvqk29mf.php(29): by_length(Array)\n#2 /tmp/tmpdvqk29mf.php(33): candidate(Array)\n#3 /tmp/tmpdvqk29mf.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpdvqk29mf.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(Number($arr[$i]).toString());\n        }\n    }\n\n    $result.sort(function($a, $b) {\n        return $a - $b;\n    });\n\n    for (var $i = 0; $i < $result.length; $i++) {\n        $result[$i] = $result[$i] + \"\";\n    }\n\n    return $result;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpiq1m_r4c.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr.sort(function(a, b) {\n        return a - b;\n    });\n    $arr = $arr.map(function($num) {\n        if ($num < 1 || $num > 9) {\n            return $num;\n        }\n        return $arr[$num - 1];\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp9msv7yeu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($val) {\n        return $val >= 1 && $val <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($val) {\n        return $val + ' ' + $val;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgz4_hi6.php:24\nStack trace:\n#0 /tmp/tmppgz4_hi6.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmppgz4_hi6.php(29): by_length(Array)\n#2 /tmp/tmppgz4_hi6.php(33): candidate(Array)\n#3 /tmp/tmppgz4_hi6.php(40): test()\n#4 {main}\n  thrown in /tmp/tmppgz4_hi6.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + str_replace('0', 'One', '$num');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpvh6h8d_4.php:24\nStack trace:\n#0 /tmp/tmpvh6h8d_4.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpvh6h8d_4.php(29): by_length(Array)\n#2 /tmp/tmpvh6h8d_4.php(33): candidate(Array)\n#3 /tmp/tmpvh6h8d_4.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpvh6h8d_4.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmptg6ejjnv.php:27\nStack trace:\n#0 /tmp/tmptg6ejjnv.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmptg6ejjnv.php(32): by_length(Array)\n#2 /tmp/tmptg6ejjnv.php(36): candidate(Array)\n#3 /tmp/tmptg6ejjnv.php(43): test()\n#4 {main}\n  thrown in /tmp/tmptg6ejjnv.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxdqdazqc.php:24\nStack trace:\n#0 /tmp/tmpxdqdazqc.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpxdqdazqc.php(29): by_length(Array)\n#2 /tmp/tmpxdqdazqc.php(33): candidate(Array)\n#3 /tmp/tmpxdqdazqc.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpxdqdazqc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($num) {\n        return $num + ' ' + $num;\n    });\n\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp86k77iie.php:27\nStack trace:\n#0 /tmp/tmp86k77iie.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmp86k77iie.php(32): by_length(Array)\n#2 /tmp/tmp86k77iie.php(36): candidate(Array)\n#3 /tmp/tmp86k77iie.php(43): test()\n#4 {main}\n  thrown in /tmp/tmp86k77iie.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpqkgn381m.php:24\nStack trace:\n#0 /tmp/tmpqkgn381m.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpqkgn381m.php(29): by_length(Array)\n#2 /tmp/tmpqkgn381m.php(33): candidate(Array)\n#3 /tmp/tmpqkgn381m.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpqkgn381m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + \" \" + array_keys(array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine')).filter(function ($key) {\n            return $key >= $num;\n        });\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpg15eqknq.php:26\nStack trace:\n#0 /tmp/tmpg15eqknq.php(26): array_map(Array, Object(Closure))\n#1 /tmp/tmpg15eqknq.php(31): by_length(Array)\n#2 /tmp/tmpg15eqknq.php(35): candidate(Array)\n#3 /tmp/tmpg15eqknq.php(42): test()\n#4 {main}\n  thrown in /tmp/tmpg15eqknq.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($i) {\n        return $i + ' ' + str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcjge708p.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp92repqal.php:21\nStack trace:\n#0 /tmp/tmp92repqal.php(31): by_length(Array)\n#1 /tmp/tmp92repqal.php(35): candidate(Array)\n#2 /tmp/tmp92repqal.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp92repqal.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \" \" + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpe3t5dbvq.php:24\nStack trace:\n#0 /tmp/tmpe3t5dbvq.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpe3t5dbvq.php(29): by_length(Array)\n#2 /tmp/tmpe3t5dbvq.php(33): candidate(Array)\n#3 /tmp/tmpe3t5dbvq.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpe3t5dbvq.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($n) {\n        return strtr(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", $n);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpg5n3hj46.php:24\nStack trace:\n#0 /tmp/tmpg5n3hj46.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpg5n3hj46.php(29): by_length(Array)\n#2 /tmp/tmpg5n3hj46.php(33): candidate(Array)\n#3 /tmp/tmpg5n3hj46.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpg5n3hj46.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjplk7ooz.php:21\nStack trace:\n#0 /tmp/tmpjplk7ooz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpjplk7ooz.php(26): by_length(Array)\n#2 /tmp/tmpjplk7ooz.php(30): candidate(Array)\n#3 /tmp/tmpjplk7ooz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpjplk7ooz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpw7c5vfu8.php:24\nStack trace:\n#0 /tmp/tmpw7c5vfu8.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpw7c5vfu8.php(28): by_length(Array)\n#2 /tmp/tmpw7c5vfu8.php(32): candidate(Array)\n#3 /tmp/tmpw7c5vfu8.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpw7c5vfu8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    $arr = $arr.filter(function(i) {\n        return i >= 1 && i <= 9;\n    });\n    $arr = $arr.sort(function(a, b) {\n        return b - a;\n    });\n    $arr = $arr.map(function(i) {\n        return \"One\".substr(i - 1, 1);\n    });\n    $arr = $arr.join(\"\");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp53l3oggl.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + str_replace('One', 'One', 'One Two Three Four Five Six Seven Eight Nine');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmplqfvkif7.php:24\nStack trace:\n#0 /tmp/tmplqfvkif7.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmplqfvkif7.php(29): by_length(Array)\n#2 /tmp/tmplqfvkif7.php(33): candidate(Array)\n#3 /tmp/tmplqfvkif7.php(40): test()\n#4 {main}\n  thrown in /tmp/tmplqfvkif7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_sort($arr);\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpvs7a65w5.php:18\nStack trace:\n#0 /tmp/tmpvs7a65w5.php(30): by_length(Array)\n#1 /tmp/tmpvs7a65w5.php(34): candidate(Array)\n#2 /tmp/tmpvs7a65w5.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpvs7a65w5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_gimcgzx.php:24\nStack trace:\n#0 /tmp/tmp_gimcgzx.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_gimcgzx.php(29): by_length(Array)\n#2 /tmp/tmp_gimcgzx.php(33): candidate(Array)\n#3 /tmp/tmp_gimcgzx.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_gimcgzx.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($n) {\n        return $n + ' ' + str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpui7smvp5.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + str_replace('0', 'One', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjaswgpjd.php:24\nStack trace:\n#0 /tmp/tmpjaswgpjd.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpjaswgpjd.php(29): by_length(Array)\n#2 /tmp/tmpjaswgpjd.php(33): candidate(Array)\n#3 /tmp/tmpjaswgpjd.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpjaswgpjd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($x) {\n        return $x >= 1 && $x <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($x) {\n        return str_replace(\"0\", \"One\", \"Nine\", $x);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp8sjzjqp7.php:24\nStack trace:\n#0 /tmp/tmp8sjzjqp7.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp8sjzjqp7.php(29): by_length(Array)\n#2 /tmp/tmp8sjzjqp7.php(33): candidate(Array)\n#3 /tmp/tmp8sjzjqp7.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp8sjzjqp7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + $arr[$i - 1];\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpk_6eds6r.php:21\nStack trace:\n#0 /tmp/tmpk_6eds6r.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpk_6eds6r.php(26): by_length(Array)\n#2 /tmp/tmpk_6eds6r.php(30): candidate(Array)\n#3 /tmp/tmpk_6eds6r.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpk_6eds6r.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return str_replace(\"0\", \"One\", \"Nine\", $i);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpp2m_tlzt.php:24\nStack trace:\n#0 /tmp/tmpp2m_tlzt.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpp2m_tlzt.php(29): by_length(Array)\n#2 /tmp/tmpp2m_tlzt.php(33): candidate(Array)\n#3 /tmp/tmpp2m_tlzt.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpp2m_tlzt.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || $arr.length === 0) {\n        return [];\n    }\n    var $arr_len = $arr.length;\n    var $arr_len_2 = $arr_len / 2;\n    var $arr_len_3 = $arr_len / 3;\n    var $arr_len_4 = $arr_len / 4;\n    var $arr_len_5 = $arr_len / 5;\n    var $arr_len_6 = $arr_len / 6;\n    var $arr_len_7 = $arr_len / 7;\n    var $arr_len_8 = $arr_len / 8;\n    var $arr_len_9 = $arr_len / 9;\n    var $arr_len_10 = $arr_len / 10;\n    var $arr_len_11 = $arr_len / 11;\n    var $arr_len_12 = $arr_len / 12;\n    var $arr_len_13 = $arr_len / 13;\n    var $arr_len_14 = $arr_len / 14;\n    var $arr_len_15 = $arr_len / 15;\n    var $arr_len_16 = $arr_len / 16;\n    var $arr_len_17 = $arr_len / 17;\n    var $arr_len_18 = $arr_len / 18;\n    var $arr_len_19 = $arr_len / 19;\n    var $arr_len_20 = $arr_len / 20;\n    var $arr_len_21 = $arr_len / 21;\n    var $arr_len_22 = $arr_len / 22;\n    var $arr_len_23 = $arr_len / 23;\n    var $arr_len_24 = $arr_len / 24;\n    var $arr_len_25 = $arr_len / 25;\n    var $arr_len_26 = $arr_len / 26;\n    var $arr_len_27 = $arr_len / 27;\n    var $arr_len_28 = $arr_len / 28;\n    var $arr_len_29 = $arr_len / 29;\n    \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptcwsk6ly.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpdvqk29mf.php:24\nStack trace:\n#0 /tmp/tmpdvqk29mf.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpdvqk29mf.php(29): by_length(Array)\n#2 /tmp/tmpdvqk29mf.php(33): candidate(Array)\n#3 /tmp/tmpdvqk29mf.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpdvqk29mf.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp9yv0hiae.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || $arr.length === 0) {\n        return [];\n    }\n\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n\n    return $result.sort().reverse();\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpqcw84rbr.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_9asw2am.php:24\nStack trace:\n#0 /tmp/tmp_9asw2am.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_9asw2am.php(28): by_length(Array)\n#2 /tmp/tmp_9asw2am.php(32): candidate(Array)\n#3 /tmp/tmp_9asw2am.php(39): test()\n#4 {main}\n  thrown in /tmp/tmp_9asw2am.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($x) {\n        return $x >= 1 && $x <= 9;\n    });\n    $arr = array_sort($arr, function($x, $y) {\n        return $x - $y;\n    });\n    $arr = array_map($arr, function($x) {\n        return $x + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpy0nmlpcl.php:21\nStack trace:\n#0 /tmp/tmpy0nmlpcl.php(30): by_length(Array)\n#1 /tmp/tmpy0nmlpcl.php(34): candidate(Array)\n#2 /tmp/tmpy0nmlpcl.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpy0nmlpcl.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl90tviae.php:21\nStack trace:\n#0 /tmp/tmpl90tviae.php(31): by_length(Array)\n#1 /tmp/tmpl90tviae.php(35): candidate(Array)\n#2 /tmp/tmpl90tviae.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpl90tviae.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function($n) {\n        return str(10 - $n);\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp5lbpexar.php:21\nStack trace:\n#0 /tmp/tmp5lbpexar.php(30): by_length(Array)\n#1 /tmp/tmp5lbpexar.php(34): candidate(Array)\n#2 /tmp/tmp5lbpexar.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp5lbpexar.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num[0];\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpke3q8jsw.php:20\nStack trace:\n#0 /tmp/tmpke3q8jsw.php(20): array_map(Array, Object(Closure))\n#1 /tmp/tmpke3q8jsw.php(32): by_length(Array)\n#2 /tmp/tmpke3q8jsw.php(36): candidate(Array)\n#3 /tmp/tmpke3q8jsw.php(43): test()\n#4 {main}\n  thrown in /tmp/tmpke3q8jsw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmps10we0fs.php:24\nStack trace:\n#0 /tmp/tmps10we0fs.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmps10we0fs.php(29): by_length(Array)\n#2 /tmp/tmps10we0fs.php(33): candidate(Array)\n#3 /tmp/tmps10we0fs.php(40): test()\n#4 {main}\n  thrown in /tmp/tmps10we0fs.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpb4mhylmn.php:24\nStack trace:\n#0 /tmp/tmpb4mhylmn.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpb4mhylmn.php(28): by_length(Array)\n#2 /tmp/tmpb4mhylmn.php(32): candidate(Array)\n#3 /tmp/tmpb4mhylmn.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpb4mhylmn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    var $arr_sorted = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $arr_reversed = $arr_sorted.reverse();\n    var $arr_replaced = [];\n    for (var i = 0; i < $arr_reversed.length; i++) {\n        if ($arr_reversed[i] >= 1 && $arr_reversed[i] <= 9) {\n            $arr_replaced.push($arr_reversed[i] + \" \" + $arr_reversed[i]);\n        }\n    }\n    return $arr_replaced;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp659vbqvh.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + ' ' + str_replace('0', 'One', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpfzo1zs0j.php:24\nStack trace:\n#0 /tmp/tmpfzo1zs0j.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpfzo1zs0j.php(29): by_length(Array)\n#2 /tmp/tmpfzo1zs0j.php(33): candidate(Array)\n#3 /tmp/tmpfzo1zs0j.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpfzo1zs0j.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(Number($arr[i]).toString());\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp8inz4x3f.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmph4ydsz7d.php:24\nStack trace:\n#0 /tmp/tmph4ydsz7d.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmph4ydsz7d.php(29): by_length(Array)\n#2 /tmp/tmph4ydsz7d.php(33): candidate(Array)\n#3 /tmp/tmph4ydsz7d.php(40): test()\n#4 {main}\n  thrown in /tmp/tmph4ydsz7d.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp2y8zp_ml.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return \"One\" + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpezkxoc69.php:21\nStack trace:\n#0 /tmp/tmpezkxoc69.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpezkxoc69.php(26): by_length(Array)\n#2 /tmp/tmpezkxoc69.php(30): candidate(Array)\n#3 /tmp/tmpezkxoc69.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpezkxoc69.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function($num1, $num2) {\n        return $num1 - $num2;\n    });\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp25ar8j6t.php:21\nStack trace:\n#0 /tmp/tmp25ar8j6t.php(31): by_length(Array)\n#1 /tmp/tmp25ar8j6t.php(35): candidate(Array)\n#2 /tmp/tmp25ar8j6t.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp25ar8j6t.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmph4ydsz7d.php:24\nStack trace:\n#0 /tmp/tmph4ydsz7d.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmph4ydsz7d.php(29): by_length(Array)\n#2 /tmp/tmph4ydsz7d.php(33): candidate(Array)\n#3 /tmp/tmph4ydsz7d.php(40): test()\n#4 {main}\n  thrown in /tmp/tmph4ydsz7d.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($val) {\n        return $val >= 1 && $val <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($val) {\n        return $val + \"\";\n    });\n\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpkaw9a6dx.php:27\nStack trace:\n#0 /tmp/tmpkaw9a6dx.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpkaw9a6dx.php(32): by_length(Array)\n#2 /tmp/tmpkaw9a6dx.php(36): candidate(Array)\n#3 /tmp/tmpkaw9a6dx.php(43): test()\n#4 {main}\n  thrown in /tmp/tmpkaw9a6dx.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmpazb2se72.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp3u5tqus8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || $arr.length === 0) {\n        return [];\n    }\n\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n\n    $arr = $arr.filter(function(i) {\n        return i >= 1 && i <= 9;\n    });\n\n    $arr = $arr.sort(function(a, b) {\n        return b - a;\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"One\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Two\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Three\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Four\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Five\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Six\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Seven\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Eight\".substr(i, 1);\n    });\n\n    $arr = $arr.map(function(i) {\n        return \"Nine\".substr(i, 1);\n    });\n\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmpmdjdg5mn.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmps10we0fs.php:24\nStack trace:\n#0 /tmp/tmps10we0fs.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmps10we0fs.php(29): by_length(Array)\n#2 /tmp/tmps10we0fs.php(33): candidate(Array)\n#3 /tmp/tmps10we0fs.php(40): test()\n#4 {main}\n  thrown in /tmp/tmps10we0fs.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    $arr = $arr.filter(function(n) {\n        return n >= 1 && n <= 9;\n    });\n    $arr = $arr.sort(function(a, b) {\n        return b - a;\n    });\n    $arr = $arr.map(function(n) {\n        return \"Nine\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"One\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Two\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Three\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Four\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Five\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Six\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Seven\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Eight\";\n    });\n    $arr = $arr.map(function(n) {\n        return \"Nine\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmpysrvyust.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function ($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1gkmf2i1.php:21\nStack trace:\n#0 /tmp/tmp1gkmf2i1.php(31): by_length(Array)\n#1 /tmp/tmp1gkmf2i1.php(35): candidate(Array)\n#2 /tmp/tmp1gkmf2i1.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp1gkmf2i1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \" \" + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpe3t5dbvq.php:24\nStack trace:\n#0 /tmp/tmpe3t5dbvq.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpe3t5dbvq.php(29): by_length(Array)\n#2 /tmp/tmpe3t5dbvq.php(33): candidate(Array)\n#3 /tmp/tmpe3t5dbvq.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpe3t5dbvq.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function ($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1gkmf2i1.php:21\nStack trace:\n#0 /tmp/tmp1gkmf2i1.php(31): by_length(Array)\n#1 /tmp/tmp1gkmf2i1.php(35): candidate(Array)\n#2 /tmp/tmp1gkmf2i1.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp1gkmf2i1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpdvqk29mf.php:24\nStack trace:\n#0 /tmp/tmpdvqk29mf.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpdvqk29mf.php(29): by_length(Array)\n#2 /tmp/tmpdvqk29mf.php(33): candidate(Array)\n#3 /tmp/tmpdvqk29mf.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpdvqk29mf.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($x) {\n        return $x >= 1 && $x <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($x) {\n        return $x + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpv5sjt9gd.php:24\nStack trace:\n#0 /tmp/tmpv5sjt9gd.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpv5sjt9gd.php(29): by_length(Array)\n#2 /tmp/tmpv5sjt9gd.php(33): candidate(Array)\n#3 /tmp/tmpv5sjt9gd.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpv5sjt9gd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbydcgnj0.php:21\nStack trace:\n#0 /tmp/tmpbydcgnj0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbydcgnj0.php(26): by_length(Array)\n#2 /tmp/tmpbydcgnj0.php(30): candidate(Array)\n#3 /tmp/tmpbydcgnj0.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbydcgnj0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return str_replace(\"One\", \"One\", str_replace(\"Two\", \"Two\", str_replace(\"Three\", \"Three\", str_replace(\"Four\", \"Four\", str_replace(\"Five\", \"Five\", str_replace(\"Six\", \"Six\", str_replace(\"Seven\", \"Seven\", str_replace(\"Eight\", \"Eight\", str_replace(\"Nine\", \"Nine\", $num))))))));\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \";\", expecting \")\" in /tmp/tmpknt6prul.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + str_pad($i, 2, '0');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpcuru293h.php:21\nStack trace:\n#0 /tmp/tmpcuru293h.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpcuru293h.php(26): by_length(Array)\n#2 /tmp/tmpcuru293h.php(30): candidate(Array)\n#3 /tmp/tmpcuru293h.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpcuru293h.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function($val) {\n        return $val >= 1 && $val <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function($val) {\n        return $val + \"\";\n    });\n\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp2l892wgp.php:27\nStack trace:\n#0 /tmp/tmp2l892wgp.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmp2l892wgp.php(32): by_length(Array)\n#2 /tmp/tmp2l892wgp.php(36): candidate(Array)\n#3 /tmp/tmp2l892wgp.php(43): test()\n#4 {main}\n  thrown in /tmp/tmp2l892wgp.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return str_replace(\"0\", \"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", $n);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpn1dxuwlg.php:24\nStack trace:\n#0 /tmp/tmpn1dxuwlg.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpn1dxuwlg.php(29): by_length(Array)\n#2 /tmp/tmpn1dxuwlg.php(33): candidate(Array)\n#3 /tmp/tmpn1dxuwlg.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpn1dxuwlg.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpnzr9wbk7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + $i;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpwaymqvf8.php:24\nStack trace:\n#0 /tmp/tmpwaymqvf8.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpwaymqvf8.php(29): by_length(Array)\n#2 /tmp/tmpwaymqvf8.php(33): candidate(Array)\n#3 /tmp/tmpwaymqvf8.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpwaymqvf8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpy76zyfsk.php:24\nStack trace:\n#0 /tmp/tmpy76zyfsk.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpy76zyfsk.php(28): by_length(Array)\n#2 /tmp/tmpy76zyfsk.php(32): candidate(Array)\n#3 /tmp/tmpy76zyfsk.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpy76zyfsk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_gimcgzx.php:24\nStack trace:\n#0 /tmp/tmp_gimcgzx.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_gimcgzx.php(29): by_length(Array)\n#2 /tmp/tmp_gimcgzx.php(33): candidate(Array)\n#3 /tmp/tmp_gimcgzx.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_gimcgzx.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjplk7ooz.php:21\nStack trace:\n#0 /tmp/tmpjplk7ooz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpjplk7ooz.php(26): by_length(Array)\n#2 /tmp/tmpjplk7ooz.php(30): candidate(Array)\n#3 /tmp/tmpjplk7ooz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpjplk7ooz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpb4mhylmn.php:24\nStack trace:\n#0 /tmp/tmpb4mhylmn.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpb4mhylmn.php(28): by_length(Array)\n#2 /tmp/tmpb4mhylmn.php(32): candidate(Array)\n#3 /tmp/tmpb4mhylmn.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpb4mhylmn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpw7c5vfu8.php:24\nStack trace:\n#0 /tmp/tmpw7c5vfu8.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpw7c5vfu8.php(28): by_length(Array)\n#2 /tmp/tmpw7c5vfu8.php(32): candidate(Array)\n#3 /tmp/tmpw7c5vfu8.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpw7c5vfu8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpmigfwrc3.php:27\nStack trace:\n#0 /tmp/tmpmigfwrc3.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpmigfwrc3.php(33): by_length(Array)\n#2 /tmp/tmpmigfwrc3.php(37): candidate(Array)\n#3 /tmp/tmpmigfwrc3.php(44): test()\n#4 {main}\n  thrown in /tmp/tmpmigfwrc3.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n\n    $arr.sort(function(a, b) {\n        return a - b;\n    });\n\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmpvjtyhys2.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl90tviae.php:21\nStack trace:\n#0 /tmp/tmpl90tviae.php(31): by_length(Array)\n#1 /tmp/tmpl90tviae.php(35): candidate(Array)\n#2 /tmp/tmpl90tviae.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpl90tviae.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + ' ' + str_replace('One', 'One', 'One Two Three Four Five Six Seven Eight Nine');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmplkh1pkbw.php:24\nStack trace:\n#0 /tmp/tmplkh1pkbw.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmplkh1pkbw.php(29): by_length(Array)\n#2 /tmp/tmplkh1pkbw.php(33): candidate(Array)\n#3 /tmp/tmplkh1pkbw.php(40): test()\n#4 {main}\n  thrown in /tmp/tmplkh1pkbw.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function($val) {\n        return $val >= 1 && $val <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function($val) {\n        return $val + \"\";\n    });\n\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp2l892wgp.php:27\nStack trace:\n#0 /tmp/tmp2l892wgp.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmp2l892wgp.php(32): by_length(Array)\n#2 /tmp/tmp2l892wgp.php(36): candidate(Array)\n#3 /tmp/tmp2l892wgp.php(43): test()\n#4 {main}\n  thrown in /tmp/tmp2l892wgp.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + ' ' + array_keys(array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine')).filter(function ($k) {\n            return $i <= $k;\n        });\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpdplitl7r.php:26\nStack trace:\n#0 /tmp/tmpdplitl7r.php(26): array_map(Array, Object(Closure))\n#1 /tmp/tmpdplitl7r.php(31): by_length(Array)\n#2 /tmp/tmpdplitl7r.php(35): candidate(Array)\n#3 /tmp/tmpdplitl7r.php(42): test()\n#4 {main}\n  thrown in /tmp/tmpdplitl7r.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + \" \" + array_keys(array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine')).filter(function ($key) {\n            return $key >= $num && $key <= $num;\n        });\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp4nvuoe9d.php:26\nStack trace:\n#0 /tmp/tmp4nvuoe9d.php(26): array_map(Array, Object(Closure))\n#1 /tmp/tmp4nvuoe9d.php(31): by_length(Array)\n#2 /tmp/tmp4nvuoe9d.php(35): candidate(Array)\n#3 /tmp/tmp4nvuoe9d.php(42): test()\n#4 {main}\n  thrown in /tmp/tmp4nvuoe9d.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return str_replace(\"One\", \"One\", str_replace(\"Two\", \"Two\", str_replace(\"Three\", \"Three\", str_replace(\"Four\", \"Four\", str_replace(\"Five\", \"Five\", str_replace(\"Six\", \"Six\", str_replace(\"Seven\", \"Seven\", str_replace(\"Eight\", \"Eight\", str_replace(\"Nine\", \"Nine\", $num))))))));\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \";\", expecting \")\" in /tmp/tmpknt6prul.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_sort($arr, function ($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function ($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp119j_mqd.php:21\nStack trace:\n#0 /tmp/tmp119j_mqd.php(31): by_length(Array)\n#1 /tmp/tmp119j_mqd.php(35): candidate(Array)\n#2 /tmp/tmp119j_mqd.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp119j_mqd.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + ' ' + $arr[$i - 1];\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpwn4_99k6.php:24\nStack trace:\n#0 /tmp/tmpwn4_99k6.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpwn4_99k6.php(29): by_length(Array)\n#2 /tmp/tmpwn4_99k6.php(33): candidate(Array)\n#3 /tmp/tmpwn4_99k6.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpwn4_99k6.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjplk7ooz.php:21\nStack trace:\n#0 /tmp/tmpjplk7ooz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpjplk7ooz.php(26): by_length(Array)\n#2 /tmp/tmpjplk7ooz.php(30): candidate(Array)\n#3 /tmp/tmpjplk7ooz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpjplk7ooz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    $arr = $arr.filter(function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = $arr.sort(function(a, b) {\n        return b - a;\n    });\n    $arr = $arr.map(function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp86sf1nf8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + $arr[$i - 1];\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpk_6eds6r.php:21\nStack trace:\n#0 /tmp/tmpk_6eds6r.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpk_6eds6r.php(26): by_length(Array)\n#2 /tmp/tmpk_6eds6r.php(30): candidate(Array)\n#3 /tmp/tmpk_6eds6r.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpk_6eds6r.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmph4ydsz7d.php:24\nStack trace:\n#0 /tmp/tmph4ydsz7d.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmph4ydsz7d.php(29): by_length(Array)\n#2 /tmp/tmph4ydsz7d.php(33): candidate(Array)\n#3 /tmp/tmph4ydsz7d.php(40): test()\n#4 {main}\n  thrown in /tmp/tmph4ydsz7d.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($num) {\n        return $num + ' ' + str_replace('0', 'One', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n    });\n\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxhncok41.php:27\nStack trace:\n#0 /tmp/tmpxhncok41.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpxhncok41.php(33): by_length(Array)\n#2 /tmp/tmpxhncok41.php(37): candidate(Array)\n#3 /tmp/tmpxhncok41.php(44): test()\n#4 {main}\n  thrown in /tmp/tmpxhncok41.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + str_replace('0', 'One', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpvz0o_7wp.php:24\nStack trace:\n#0 /tmp/tmpvz0o_7wp.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpvz0o_7wp.php(29): by_length(Array)\n#2 /tmp/tmpvz0o_7wp.php(33): candidate(Array)\n#3 /tmp/tmpvz0o_7wp.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpvz0o_7wp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp30hwk3qo.php:24\nStack trace:\n#0 /tmp/tmp30hwk3qo.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp30hwk3qo.php(29): by_length(Array)\n#2 /tmp/tmp30hwk3qo.php(33): candidate(Array)\n#3 /tmp/tmp30hwk3qo.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp30hwk3qo.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp2y8zp_ml.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmps10we0fs.php:24\nStack trace:\n#0 /tmp/tmps10we0fs.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmps10we0fs.php(29): by_length(Array)\n#2 /tmp/tmps10we0fs.php(33): candidate(Array)\n#3 /tmp/tmps10we0fs.php(40): test()\n#4 {main}\n  thrown in /tmp/tmps10we0fs.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + $i;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpbx10w_yv.php:21\nStack trace:\n#0 /tmp/tmpbx10w_yv.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpbx10w_yv.php(26): by_length(Array)\n#2 /tmp/tmpbx10w_yv.php(30): candidate(Array)\n#3 /tmp/tmpbx10w_yv.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpbx10w_yv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp3u5tqus8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp2y8zp_ml.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmphc01f9mv.php:21\nStack trace:\n#0 /tmp/tmphc01f9mv.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmphc01f9mv.php(25): by_length(Array)\n#2 /tmp/tmphc01f9mv.php(29): candidate(Array)\n#3 /tmp/tmphc01f9mv.php(36): test()\n#4 {main}\n  thrown in /tmp/tmphc01f9mv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpqkgn381m.php:24\nStack trace:\n#0 /tmp/tmpqkgn381m.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpqkgn381m.php(29): by_length(Array)\n#2 /tmp/tmpqkgn381m.php(33): candidate(Array)\n#3 /tmp/tmpqkgn381m.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpqkgn381m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || $arr.length === 0) {\n        return [];\n    }\n\n    var $arr_length = $arr.length;\n    var $arr_new = [];\n    var $arr_i = 0;\n    var $arr_j = 0;\n    var $arr_digit = 0;\n    var $arr_digit_name = 0;\n    var $arr_digit_name_length = 0;\n    var $arr_digit_name_i = 0;\n    var $arr_digit_name_j = 0;\n    var $arr_digit_name_digit = 0;\n    var $arr_digit_name_digit_length = 0;\n    var $arr_digit_name_digit_i = 0;\n    var $arr_digit_name_digit_j = 0;\n    var $arr_digit_name_digit_digit = 0;\n    var $arr_digit_name_digit_digit_length = 0;\n    var $arr_digit_name_digit_digit_i = 0;\n    var $arr_digit_name_digit_digit_j = 0;\n    var $arr_digit_name_digit_digit_digit = 0;\n    var $arr_digit_name_digit_digit_digit_length = 0;\n    var $arr_digit_name_digit_digit_digit_i = 0;\n    var $arr_digit_name_digit_digit_digit_j = 0;\n    var $arr_digit_name_digit_digit_digit_digit = 0;\n    var $arr_digit_name_digit_digit_digit_digit_length = 0;\n    var $arr_digit_name_digit_digit_digit_digit_i = 0;\n    var $arr_digit_name_digit_digit_digit_digit_j = 0;\n    var $arr_digit_name_digit_digit_digit_digit_digit = 0;\n    var $arr_digit_name_digit_digit_digit_digit_digit_length = 0;\n    var $arr_digit_name_digit_digit_digit_digit_digit_i = 0;\n    var $arr_digit_name_digit_digit_digit_digit_digit\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmppfkrzn81.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + ' ' + str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4554tmni.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp3qfle8a0.php:21\nStack trace:\n#0 /tmp/tmp3qfle8a0.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmp3qfle8a0.php(25): by_length(Array)\n#2 /tmp/tmp3qfle8a0.php(29): candidate(Array)\n#3 /tmp/tmp3qfle8a0.php(36): test()\n#4 {main}\n  thrown in /tmp/tmp3qfle8a0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp2y8zp_ml.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num == 1 ? \"One\" : $num == 2 ? \"Two\" : $num == 3 ? \"Three\" : $num == 4 ? \"Four\" : $num == 5 ? \"Five\" : $num == 6 ? \"Six\" : $num == 7 ? \"Seven\" : $num == 8 ? \"Eight\" : $num == 9 ? \"Nine\" : \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpme7offfp.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpdgft6e3s.php:27\nStack trace:\n#0 /tmp/tmpdgft6e3s.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpdgft6e3s.php(32): by_length(Array)\n#2 /tmp/tmpdgft6e3s.php(36): candidate(Array)\n#3 /tmp/tmpdgft6e3s.php(43): test()\n#4 {main}\n  thrown in /tmp/tmpdgft6e3s.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + $i;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpwaymqvf8.php:24\nStack trace:\n#0 /tmp/tmpwaymqvf8.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpwaymqvf8.php(29): by_length(Array)\n#2 /tmp/tmpwaymqvf8.php(33): candidate(Array)\n#3 /tmp/tmpwaymqvf8.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpwaymqvf8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpab9pmh8r.php:24\nStack trace:\n#0 /tmp/tmpab9pmh8r.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpab9pmh8r.php(29): by_length(Array)\n#2 /tmp/tmpab9pmh8r.php(33): candidate(Array)\n#3 /tmp/tmpab9pmh8r.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpab9pmh8r.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function ($i) {\n        return $i + ' ' + $i;\n    });\n\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpv9jfl6px.php:27\nStack trace:\n#0 /tmp/tmpv9jfl6px.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpv9jfl6px.php(33): by_length(Array)\n#2 /tmp/tmpv9jfl6px.php(37): candidate(Array)\n#3 /tmp/tmpv9jfl6px.php(44): test()\n#4 {main}\n  thrown in /tmp/tmpv9jfl6px.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + ' ' + str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(str_pad(\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp2ooo6xwo.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function($num1, $num2) {\n        return $num1 - $num2;\n    });\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp25ar8j6t.php:21\nStack trace:\n#0 /tmp/tmp25ar8j6t.php(31): by_length(Array)\n#1 /tmp/tmp25ar8j6t.php(35): candidate(Array)\n#2 /tmp/tmp25ar8j6t.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp25ar8j6t.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($n) {\n        return str_replace(\"0\", \"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpzdgq78qe.php:24\nStack trace:\n#0 /tmp/tmpzdgq78qe.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpzdgq78qe.php(29): by_length(Array)\n#2 /tmp/tmpzdgq78qe.php(33): candidate(Array)\n#3 /tmp/tmpzdgq78qe.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpzdgq78qe.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjplk7ooz.php:21\nStack trace:\n#0 /tmp/tmpjplk7ooz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpjplk7ooz.php(26): by_length(Array)\n#2 /tmp/tmpjplk7ooz.php(30): candidate(Array)\n#3 /tmp/tmpjplk7ooz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpjplk7ooz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + str_replace('0', 'One', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpvz0o_7wp.php:24\nStack trace:\n#0 /tmp/tmpvz0o_7wp.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpvz0o_7wp.php(29): by_length(Array)\n#2 /tmp/tmpvz0o_7wp.php(33): candidate(Array)\n#3 /tmp/tmpvz0o_7wp.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpvz0o_7wp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp92repqal.php:21\nStack trace:\n#0 /tmp/tmp92repqal.php(31): by_length(Array)\n#1 /tmp/tmp92repqal.php(35): candidate(Array)\n#2 /tmp/tmp92repqal.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp92repqal.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjplk7ooz.php:21\nStack trace:\n#0 /tmp/tmpjplk7ooz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpjplk7ooz.php(26): by_length(Array)\n#2 /tmp/tmpjplk7ooz.php(30): candidate(Array)\n#3 /tmp/tmpjplk7ooz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpjplk7ooz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_sort($arr, function($a, $b) {\n        return $a - $b;\n    });\n    $arr = array_map($arr, function($num) {\n        return str_replace(\"0\", \"One\", \"Nine\", $num);\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpiz6mnd1i.php:21\nStack trace:\n#0 /tmp/tmpiz6mnd1i.php(31): by_length(Array)\n#1 /tmp/tmpiz6mnd1i.php(35): candidate(Array)\n#2 /tmp/tmpiz6mnd1i.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpiz6mnd1i.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push($arr[$i]);\n        }\n    }\n    $result.sort(function($a, $b) {\n        return $b - $a;\n    });\n    for (var $i = 0; $i < $result.length; $i++) {\n        $result[$i] = $result[$i] + \"\";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpboo5w2di.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp2y8zp_ml.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    $arr = $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmplstoxs6k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return str_replace(\"One\", \"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Three\", \"Four\", \"Four\", \"Five\", \"Five\", \"Six\", \"Six\", \"Seven\", \"Seven\", \"Eight\", \"Eight\", \"Nine\", \"Nine\");\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_fpkwk9v.php:24\nStack trace:\n#0 /tmp/tmp_fpkwk9v.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_fpkwk9v.php(29): by_length(Array)\n#2 /tmp/tmp_fpkwk9v.php(33): candidate(Array)\n#3 /tmp/tmp_fpkwk9v.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_fpkwk9v.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_83twxvm.php:24\nStack trace:\n#0 /tmp/tmp_83twxvm.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_83twxvm.php(29): by_length(Array)\n#2 /tmp/tmp_83twxvm.php(33): candidate(Array)\n#3 /tmp/tmp_83twxvm.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_83twxvm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmph4ydsz7d.php:24\nStack trace:\n#0 /tmp/tmph4ydsz7d.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmph4ydsz7d.php(29): by_length(Array)\n#2 /tmp/tmph4ydsz7d.php(33): candidate(Array)\n#3 /tmp/tmph4ydsz7d.php(40): test()\n#4 {main}\n  thrown in /tmp/tmph4ydsz7d.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjplk7ooz.php:21\nStack trace:\n#0 /tmp/tmpjplk7ooz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpjplk7ooz.php(26): by_length(Array)\n#2 /tmp/tmpjplk7ooz.php(30): candidate(Array)\n#3 /tmp/tmpjplk7ooz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpjplk7ooz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_gimcgzx.php:24\nStack trace:\n#0 /tmp/tmp_gimcgzx.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp_gimcgzx.php(29): by_length(Array)\n#2 /tmp/tmp_gimcgzx.php(33): candidate(Array)\n#3 /tmp/tmp_gimcgzx.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp_gimcgzx.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpe20gudll.php:24\nStack trace:\n#0 /tmp/tmpe20gudll.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpe20gudll.php(28): by_length(Array)\n#2 /tmp/tmpe20gudll.php(32): candidate(Array)\n#3 /tmp/tmpe20gudll.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpe20gudll.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n\n    $arr = array_reverse($arr);\n\n    $arr = array_map($arr, function($i) {\n        return $i + ' ' + $i;\n    });\n\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpq49s5xzi.php:27\nStack trace:\n#0 /tmp/tmpq49s5xzi.php(27): array_map(Array, Object(Closure))\n#1 /tmp/tmpq49s5xzi.php(33): by_length(Array)\n#2 /tmp/tmpq49s5xzi.php(37): candidate(Array)\n#3 /tmp/tmpq49s5xzi.php(44): test()\n#4 {main}\n  thrown in /tmp/tmpq49s5xzi.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + ' ' + $num;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpjplk7ooz.php:21\nStack trace:\n#0 /tmp/tmpjplk7ooz.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpjplk7ooz.php(26): by_length(Array)\n#2 /tmp/tmpjplk7ooz.php(30): candidate(Array)\n#3 /tmp/tmpjplk7ooz.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpjplk7ooz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_sort($arr, function ($i, $j) {\n        return $i - $j;\n    });\n    $arr = array_map($arr, function ($i) {\n        return $i + 1;\n    });\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_sort($arr, function ($i, $j) {\n        return $i - $j;\n    });\n    $arr = array_map($arr, function ($i) {\n        return $i + 1;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp78go3l1k.php:21\nStack trace:\n#0 /tmp/tmp78go3l1k.php(40): by_length(Array)\n#1 /tmp/tmp78go3l1k.php(44): candidate(Array)\n#2 /tmp/tmp78go3l1k.php(51): test()\n#3 {main}\n  thrown in /tmp/tmp78go3l1k.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpb4mhylmn.php:24\nStack trace:\n#0 /tmp/tmpb4mhylmn.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpb4mhylmn.php(28): by_length(Array)\n#2 /tmp/tmpb4mhylmn.php(32): candidate(Array)\n#3 /tmp/tmpb4mhylmn.php(39): test()\n#4 {main}\n  thrown in /tmp/tmpb4mhylmn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || !$arr.length) {\n        return [];\n    }\n    var $result = [];\n    for (var $i = 0; $i < $arr.length; $i++) {\n        if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n            $result.push(String.fromCharCode($arr[$i] + 48));\n        }\n    }\n    return $result.sort().reverse();\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb5s2a0xq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($n) {\n        return $n + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmppgobk34v.php:21\nStack trace:\n#0 /tmp/tmppgobk34v.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmppgobk34v.php(26): by_length(Array)\n#2 /tmp/tmppgobk34v.php(30): candidate(Array)\n#3 /tmp/tmppgobk34v.php(37): test()\n#4 {main}\n  thrown in /tmp/tmppgobk34v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxxc1pgrs.php:21\nStack trace:\n#0 /tmp/tmpxxc1pgrs.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpxxc1pgrs.php(26): by_length(Array)\n#2 /tmp/tmpxxc1pgrs.php(30): candidate(Array)\n#3 /tmp/tmpxxc1pgrs.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpxxc1pgrs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpi4iqitjl.php:21\nStack trace:\n#0 /tmp/tmpi4iqitjl.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpi4iqitjl.php(25): by_length(Array)\n#2 /tmp/tmpi4iqitjl.php(29): candidate(Array)\n#3 /tmp/tmpi4iqitjl.php(36): test()\n#4 {main}\n  thrown in /tmp/tmpi4iqitjl.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($i) {\n        return $i + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp30hwk3qo.php:24\nStack trace:\n#0 /tmp/tmp30hwk3qo.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmp30hwk3qo.php(29): by_length(Array)\n#2 /tmp/tmp30hwk3qo.php(33): candidate(Array)\n#3 /tmp/tmp30hwk3qo.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp30hwk3qo.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (empty($arr)) {\n        return array();\n    }\n    $arr = array_filter($arr, function ($num) {\n        return $num >= 1 && $num <= 9;\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function ($num) {\n        return $num + \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpqkgn381m.php:24\nStack trace:\n#0 /tmp/tmpqkgn381m.php(24): array_map(Array, Object(Closure))\n#1 /tmp/tmpqkgn381m.php(29): by_length(Array)\n#2 /tmp/tmpqkgn381m.php(33): candidate(Array)\n#3 /tmp/tmpqkgn381m.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpqkgn381m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n    });\n    $arr = array_map($arr, function($i) {\n        return $i + \"\";\n    });\n    $arr = array_reverse($arr);\n    $arr = array_map($arr, function($i) {\n        return $i[0];\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpxco2si46.php:20\nStack trace:\n#0 /tmp/tmpxco2si46.php(20): array_map(Array, Object(Closure))\n#1 /tmp/tmpxco2si46.php(29): by_length(Array)\n#2 /tmp/tmpxco2si46.php(33): candidate(Array)\n#3 /tmp/tmpxco2si46.php(40): test()\n#4 {main}\n  thrown in /tmp/tmpxco2si46.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n// >>> by_length(array())\n// array()\n// If the array has any strange number ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr) {\n    if (!$arr || $arr.length === 0) {\n        return [];\n    }\n    $arr.sort(function(a, b) {\n        return a - b;\n    });\n    var $result = [];\n    for (var i = 0; i < $arr.length; i++) {\n        if ($arr[i] >= 1 && $arr[i] <= 9) {\n            $result.push(String.fromCharCode($arr[i] + 48));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292695,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmpvv3pq6ga.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
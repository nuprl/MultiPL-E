{
  "name": "HumanEval_65_circular_shift",
  "language": "php",
  "prompt": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n",
  "tests": "function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = \"\";\n    for ( $i = 0; $i < $shift; $i++ ) {\n        $result = $result . $x % 10;\n        $x = $x / 10;\n    }\n    for ( $i = 0; $i < $shift; $i++ ) {\n        $result = $result . $x % 10;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpkndx35o6.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkndx35o6.php:29\nStack trace:\n#0 /tmp/tmpkndx35o6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkndx35o6.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if ($x < 0) {\n        return circular_shift(-$x, $shift);\n    }\n    if ($shift > $x) {\n        return circular_shift(0, $shift - $x);\n    }\n    $result = '';\n    for ($i = $x; $i >= 0; $i -= 1) {\n        $result = $result . $i;\n    }\n    for ($i = $shift; $i >= 0; $i -= 1) {\n        $result = $i . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdcc7vln4.php:31\nStack trace:\n#0 /tmp/tmpdcc7vln4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdcc7vln4.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $n = $x;\n    $m = 0;\n    $s = \"\";\n    while ($n > 0) {\n        $s = $n % 10 + $s;\n        $n = $n / 10;\n        $m++;\n        if ($m > $shift) {\n            $m = 0;\n        }\n    }\n    if ($m > 0) {\n        $s = $s.substr(0, $m);\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw5j3xhpu.php:16\nStack trace:\n#0 /tmp/tmpw5j3xhpu.php(30): circular_shift(100, 2)\n#1 /tmp/tmpw5j3xhpu.php(34): candidate(100, 2)\n#2 /tmp/tmpw5j3xhpu.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpw5j3xhpu.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ( $i = 0; $i < $x; $i++ ) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpc6wydkvk.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $s = 0;\n    while ($shift > 0) {\n        $s = $s + $n;\n        $n = $n / 10;\n        $shift = $shift - 1;\n    }\n    $s = $s + $n;\n    $n = 0;\n    while ($s > 0) {\n        $n = $n + $s % 10;\n        $s = $s / 10;\n    }\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 11.1 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 1.1099999999999999 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 0.11099999999999999 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 0.011099999999999999 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 0.0011099999999999999 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 0.00011099999999999999 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 1.1099999999999999E-5 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 1.11E-6 to int loses precision in /tmp/tmpu6yh3872.php on line 22\n\nDeprecated: Implicit conversion from float 1.11E-7 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpi7ywhfwg.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7ywhfwg.php:29\nStack trace:\n#0 /tmp/tmpi7ywhfwg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi7ywhfwg.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result += $i;\n    }\n    $result = $result.substr($shift, $x - $shift);\n    $result = $result.substr(0, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmp7qiuf6no.php:14\nStack trace:\n#0 /tmp/tmp7qiuf6no.php(22): circular_shift(100, 2)\n#1 /tmp/tmp7qiuf6no.php(26): candidate(100, 2)\n#2 /tmp/tmp7qiuf6no.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp7qiuf6no.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a5bz7rn.php:24\nStack trace:\n#0 /tmp/tmp6a5bz7rn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6a5bz7rn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a5bz7rn.php:24\nStack trace:\n#0 /tmp/tmp6a5bz7rn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6a5bz7rn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    $n = $x;\n    $i = 0;\n    $m = 0;\n    while ($i < $shift) {\n        $m = $n % 10;\n        $n = $n / 10;\n        $y = $y * 10 + $m;\n        $i++;\n    }\n    $y = $y + $n;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk60idqaw.php:29\nStack trace:\n#0 /tmp/tmpk60idqaw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk60idqaw.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = $x - 0;\n    $shift = $shift - 0;\n    $y = 0;\n    for ($i = 0; $i < $shift; $i++) {\n        $y = $y + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $x % 10;\n    $x = $x / 10;\n    $y = $y + $x % 10;\n    $x = $x / 10;\n    $y = $y + $x % 10;\n    $x = $x / 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpjgru3r21.php on line 19\n\nDeprecated: Implicit conversion from float 0.01 to int loses precision in /tmp/tmpjgru3r21.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgru3r21.php:31\nStack trace:\n#0 /tmp/tmpjgru3r21.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjgru3r21.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if ($shift < 0) {\n        return circular_shift($x, -$shift);\n    }\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x % 10;\n        $x = $x - 1;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x % 10;\n        $x = $x - 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpraojh7bh.php:30\nStack trace:\n#0 /tmp/tmpraojh7bh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpraojh7bh.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrqrlqfj.php:28\nStack trace:\n#0 /tmp/tmpwrqrlqfj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwrqrlqfj.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift > 0) {\n        $y = $y - $shift;\n        $y = circular_shift($y, $shift);\n    }\n    $y = $y + $shift;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1l6a5ep.php:25\nStack trace:\n#0 /tmp/tmpi1l6a5ep.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpi1l6a5ep.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $x - $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxapdu32a.php:24\nStack trace:\n#0 /tmp/tmpxapdu32a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxapdu32a.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    $n = $x;\n    $m = $shift;\n    while ($m > 0) {\n        $y = $y * 10 + $n % 10;\n        $n = floor($n / 10);\n        $m--;\n    }\n    $y = $y * 10 + $n % 10;\n    $n = floor($n / 10);\n    $m = $shift - $n;\n    $y = $y * 10 + $n % 10;\n    $n = floor($n / 10);\n    $m--;\n    if ($m < 0) {\n        $y = $y * 10 + $n % 10;\n        $n = floor($n / 10);\n        $m--;\n    }\n    $y = $y * 10 + $n % 10;\n    $n = floor($n / 10);\n    $m--;\n    if ($m < 0) {\n        $y = $y * 10 + $n % 10;\n        $n = floor($n / 10);\n        $m--;\n    }\n    $y = $y * 10 + $n % 10;\n    $n = floor($n / 10);\n    $m--;\n    if ($m < 0) {\n        $y = $y * 10 + $n % 10;\n        $n = floor($n / 10);\n        $m--;\n    }\n    $y = $y * 10 + $n % 10;\n    $n = floor($n / 10);\n    $m--;\n    if ($m < 0) {\n        $y = $y * 10 + $n % 10;\n        $n = floor($n / 10);\n        $m--;\n    }\n    $y = $y * 10 + $n % 10;\n    $n = floor($n / 10);\n    $m--;\n    if ($m < 0) {\n        $y = $y * 10 + $n % 10;\n        $n = floor($n / 10);\n        $m--;\n    }\n    $y = $y * 10 + $n % 10;\n    $n = floor($n / 10);\n    $\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp359gkc5b.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    $n = $x;\n    while ($n > 0) {\n        $result = $n % 10 + $result * 10;\n        $n = floor($n / 10);\n        $shift--;\n    }\n    if ($shift > 0) {\n        $result = $result.substr(0, $shift);\n        $result = reverse($result);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string * int in /tmp/tmp7y0dbx0p.php:15\nStack trace:\n#0 /tmp/tmp7y0dbx0p.php(27): circular_shift(100, 2)\n#1 /tmp/tmp7y0dbx0p.php(31): candidate(100, 2)\n#2 /tmp/tmp7y0dbx0p.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp7y0dbx0p.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh5a7rug.php:25\nStack trace:\n#0 /tmp/tmpeh5a7rug.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeh5a7rug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    $result = $result . substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjrynldc.php:23\nStack trace:\n#0 /tmp/tmpsjrynldc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsjrynldc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $s = 0;\n    $r = '';\n    while ($n > 0) {\n        $s = $n % 10;\n        $n = floor($n / 10);\n        $r = $s + $r;\n    }\n    if ($shift > $r.length) {\n        return $r;\n    }\n    $r = substr($r, $shift, $r.length);\n    $r = substr($r, 0, $r.length - $shift);\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp44j7of8m.php:18\nStack trace:\n#0 /tmp/tmp44j7of8m.php(29): circular_shift(100, 2)\n#1 /tmp/tmp44j7of8m.php(33): candidate(100, 2)\n#2 /tmp/tmp44j7of8m.php(40): test()\n#3 {main}\n  thrown in /tmp/tmp44j7of8m.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $y = $y * 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y = $y - $y;\n    $y = $y / 10;\n    $y = $y + $y;\n    $y\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpgkupqxwe.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y ? $y : 0;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbw8_cuyp.php:29\nStack trace:\n#0 /tmp/tmpbw8_cuyp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbw8_cuyp.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $shift; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y * 10 + $x % 10;\n    $x = $x / 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxha_j_iv.php:25\nStack trace:\n#0 /tmp/tmpxha_j_iv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxha_j_iv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($x > 0) {\n        $result = $x + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp77n1fvi7.php:14\nStack trace:\n#0 /tmp/tmp77n1fvi7.php(24): circular_shift(100, 2)\n#1 /tmp/tmp77n1fvi7.php(28): candidate(100, 2)\n#2 /tmp/tmp77n1fvi7.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp77n1fvi7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $shift; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y * 10 + $x % 10;\n    $x = $x / 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxha_j_iv.php:25\nStack trace:\n#0 /tmp/tmpxha_j_iv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxha_j_iv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    if ($y > 9) {\n        $y = 10 - $y;\n    }\n    $y = $y + $x;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8agpmsn.php:30\nStack trace:\n#0 /tmp/tmpi8agpmsn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi8agpmsn.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    $result = $result . substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjrynldc.php:23\nStack trace:\n#0 /tmp/tmpsjrynldc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsjrynldc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    $n = $x;\n    $shift = $shift % $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $x * 10;\n    if ($shift > 0) {\n        $y = $y % $n;\n    }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 0.01 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 0.001 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 0.0001 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 1.0E-5 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 1.0000000000000002E-6 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 1.0000000000000002E-7 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 1.0000000000000002E-8 to int loses precision in /tmp/tmp8u0vsfo1.php on line 17\n\nDeprecated: Implicit conversion from float 1.0000000000000003E-9 to int loses precision in /tmp/tmp8u0vsfo1.php ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $shift; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y * 10 + $x % 10;\n    $x = $x / 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxha_j_iv.php:25\nStack trace:\n#0 /tmp/tmpxha_j_iv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxha_j_iv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $y = $y + $shift;\n    $x = 0;\n    for ($i = 0; $i < $y; $i++) {\n        $x += $y % 10;\n        $y /= 10;\n    }\n    $x += $y % 10;\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.3 to int loses precision in /tmp/tmplx707tvm.php on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplx707tvm.php:31\nStack trace:\n#0 /tmp/tmplx707tvm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplx707tvm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($shift > $x) {\n        $result = $x + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp3qt1pqkf.php:14\nStack trace:\n#0 /tmp/tmp3qt1pqkf.php(24): circular_shift(100, 2)\n#1 /tmp/tmp3qt1pqkf.php(28): candidate(100, 2)\n#2 /tmp/tmp3qt1pqkf.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp3qt1pqkf.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $m = 0;\n    $s = '';\n    while ($n > 0) {\n        $m = $n % 10;\n        $n = $n / 10;\n        $s = $m + $s;\n    }\n    if ($shift > $s.length) {\n        return $s.substr(0, $s.length - $shift) + $s.substr($s.length - $shift);\n    }\n    return $s.substr($shift) + $s.substr(0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpqvdurpf6.php:18\nStack trace:\n#0 /tmp/tmpqvdurpf6.php(27): circular_shift(100, 2)\n#1 /tmp/tmpqvdurpf6.php(31): candidate(100, 2)\n#2 /tmp/tmpqvdurpf6.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpqvdurpf6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    if ($y > 9) {\n        $y = 10 - $y;\n    }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5jyvtde.php:29\nStack trace:\n#0 /tmp/tmpn5jyvtde.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn5jyvtde.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    $result = $result . substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjrynldc.php:23\nStack trace:\n#0 /tmp/tmpsjrynldc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsjrynldc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift -= 1;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkxt3dw3a.php:14\nStack trace:\n#0 /tmp/tmpkxt3dw3a.php(27): circular_shift(100, 2)\n#1 /tmp/tmpkxt3dw3a.php(31): candidate(100, 2)\n#2 /tmp/tmpkxt3dw3a.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkxt3dw3a.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfokg_ok5.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a5bz7rn.php:24\nStack trace:\n#0 /tmp/tmp6a5bz7rn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6a5bz7rn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh5a7rug.php:25\nStack trace:\n#0 /tmp/tmpeh5a7rug.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeh5a7rug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    $n = $x;\n    $i = 0;\n    while ($i < $shift) {\n        $n = $n - 1;\n        $result = $n % 10 + $result;\n        $n = $n / 10;\n        $i++;\n    }\n    while ($i < 10) {\n        $result = $n % 10 + $result;\n        $n = $n / 10;\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp85zxwz28.php:17\nStack trace:\n#0 /tmp/tmp85zxwz28.php(30): circular_shift(100, 2)\n#1 /tmp/tmp85zxwz28.php(34): candidate(100, 2)\n#2 /tmp/tmp85zxwz28.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp85zxwz28.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if (is_int($x) && is_int($shift)) {\n        $x = abs($x);\n        $shift = abs($shift);\n        $n = $x;\n        $m = 0;\n        while ($n > 0) {\n            $m = $m + 1;\n            $n = $n - 1;\n        }\n        $m = $m - $shift;\n        if ($m < 0) {\n            $m = $m + $x;\n        }\n        $m = $m % $x;\n        if ($m < 0) {\n            $m = $x - $m;\n        }\n        $m = $m + $x;\n        return $m;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqawo2v8u.php:37\nStack trace:\n#0 /tmp/tmpqawo2v8u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqawo2v8u.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift -= 1;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkxt3dw3a.php:14\nStack trace:\n#0 /tmp/tmpkxt3dw3a.php(27): circular_shift(100, 2)\n#1 /tmp/tmpkxt3dw3a.php(31): candidate(100, 2)\n#2 /tmp/tmpkxt3dw3a.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkxt3dw3a.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    $n = $x;\n    for ($i = 0; $i < $shift; $i++) {\n        $n = $n - 1;\n        $result = $n % 10 + $result;\n        $n = $n / 10;\n    }\n    if ($n > 0) {\n        $result = $n % 10 + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp1pb2x5rj.php:16\nStack trace:\n#0 /tmp/tmp1pb2x5rj.php(26): circular_shift(100, 2)\n#1 /tmp/tmp1pb2x5rj.php(30): candidate(100, 2)\n#2 /tmp/tmp1pb2x5rj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp1pb2x5rj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($shift > $x) {\n        $result = $result.substr(0, $result.length - 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpnfmpth4s.php:14\nStack trace:\n#0 /tmp/tmpnfmpth4s.php(24): circular_shift(100, 2)\n#1 /tmp/tmpnfmpth4s.php(28): candidate(100, 2)\n#2 /tmp/tmpnfmpth4s.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpnfmpth4s.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y > 9 ? $y - 10 : $y;\n    $y = $y < 0 ? 10 - $y : $y;\n    $y = $y > 9 ? $y - 10 : $y;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqm8_43cn.php:28\nStack trace:\n#0 /tmp/tmpqm8_43cn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqm8_43cn.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohhlx8po.php:30\nStack trace:\n#0 /tmp/tmpohhlx8po.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpohhlx8po.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfokg_ok5.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i;\n    }\n    $result = $result . substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeohrni9g.php:23\nStack trace:\n#0 /tmp/tmpeohrni9g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpeohrni9g.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n    }\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpipakykb7.php on line 19\n\nDeprecated: Implicit conversion from float 30.01 to int loses precision in /tmp/tmpipakykb7.php on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipakykb7.php:31\nStack trace:\n#0 /tmp/tmpipakykb7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpipakykb7.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpi7ywhfwg.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7ywhfwg.php:29\nStack trace:\n#0 /tmp/tmpi7ywhfwg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi7ywhfwg.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    if ($shift > $x) {\n        return strrev($y);\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8raeboko.php:31\nStack trace:\n#0 /tmp/tmp8raeboko.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8raeboko.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh5a7rug.php:25\nStack trace:\n#0 /tmp/tmpeh5a7rug.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeh5a7rug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh5a7rug.php:25\nStack trace:\n#0 /tmp/tmpeh5a7rug.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeh5a7rug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if ($shift < 0) {\n        return circular_shift($x, -$shift);\n    }\n    if ($shift == 0) {\n        return $x;\n    }\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcg9b14vq.php:31\nStack trace:\n#0 /tmp/tmpcg9b14vq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcg9b14vq.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh5a7rug.php:25\nStack trace:\n#0 /tmp/tmpeh5a7rug.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeh5a7rug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x;\n    $y = $y % 10;\n    $y = $y + $shift;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wnyjbg6.php:27\nStack trace:\n#0 /tmp/tmp5wnyjbg6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5wnyjbg6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $shift; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y * 10 + $x % 10;\n    $x = $x / 10;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfmbxwb4.php:26\nStack trace:\n#0 /tmp/tmprfmbxwb4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprfmbxwb4.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $n = $x;\n    $m = 0;\n    $result = '';\n    while ($n > 0) {\n        $m = $n % 10;\n        $n = $n / 10;\n        $result = $m + $result;\n        if ($n > 0) {\n            $result = $m + $result;\n        }\n    }\n    if ($shift > $n) {\n        $result = $result.substr(0, $result.length - $shift) + $result.substr($result.length - $shift);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpa3eig1g2.php:18\nStack trace:\n#0 /tmp/tmpa3eig1g2.php(30): circular_shift(100, 2)\n#1 /tmp/tmpa3eig1g2.php(34): candidate(100, 2)\n#2 /tmp/tmpa3eig1g2.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpa3eig1g2.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfokg_ok5.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x % 10;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x % 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp0cqx4qi1.php on line 14\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmp0cqx4qi1.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cqx4qi1.php:29\nStack trace:\n#0 /tmp/tmp0cqx4qi1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0cqx4qi1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrqrlqfj.php:28\nStack trace:\n#0 /tmp/tmpwrqrlqfj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwrqrlqfj.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a5bz7rn.php:24\nStack trace:\n#0 /tmp/tmp6a5bz7rn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6a5bz7rn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($x > 0) {\n        $result = $x % 10 + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpk7zzlmi7.php:14\nStack trace:\n#0 /tmp/tmpk7zzlmi7.php(24): circular_shift(100, 2)\n#1 /tmp/tmpk7zzlmi7.php(28): candidate(100, 2)\n#2 /tmp/tmpk7zzlmi7.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpk7zzlmi7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n        if ($i < $shift) {\n            $x = $x + 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxznk_yb.php:26\nStack trace:\n#0 /tmp/tmphxznk_yb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphxznk_yb.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $x % 10;\n        $x = floor($x / 10);\n    }\n    $result = $result.substr($shift, $result.length - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpza_nxgbv.php:15\nStack trace:\n#0 /tmp/tmpza_nxgbv.php(20): circular_shift(1.0, 2)\n#1 /tmp/tmpza_nxgbv.php(24): candidate(100, 2)\n#2 /tmp/tmpza_nxgbv.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpza_nxgbv.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10 + $x;\n    $y = $y + $shift;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9xf2r6w.php:28\nStack trace:\n#0 /tmp/tmpj9xf2r6w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpj9xf2r6w.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if ($x < 0) {\n        return circular_shift(-$x, $shift);\n    }\n    if ($shift > 0) {\n        return circular_shift($x, $shift);\n    }\n    if ($shift < 0) {\n        return circular_shift($x, -$shift);\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpbfydmfnr.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $x;\n    if ($shift > 0) {\n        $y = circular_shift($x, $shift - 1);\n    }\n    $y = $y + $y;\n    $y = $y % 10;\n    $y = $y + $y;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwedzkr90.php:27\nStack trace:\n#0 /tmp/tmpwedzkr90.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwedzkr90.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if (is_int($x) && is_int($shift)) {\n        $x = abs($x);\n        $shift = abs($shift);\n        $n = $x;\n        $m = 0;\n        while ($n > 0) {\n            $m = $m + 1;\n            $n = $n - 1;\n        }\n        $m = $m - $shift;\n        $m = $m < 0 ? $m + $x : $m;\n        $m = $m > $x ? $x - $m : $m;\n        $m = $m < 0 ? 0 : $m;\n        $m = $m > 9 ? 9 : $m;\n        $m = $m + $x;\n        $m = $m < 0 ? 0 : $m;\n        $m = $m > 9 ? 9 : $m;\n        return $m;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_x56jwdu.php:38\nStack trace:\n#0 /tmp/tmp_x56jwdu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_x56jwdu.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y + $x * 10;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3024s_ls.php:28\nStack trace:\n#0 /tmp/tmp3024s_ls.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3024s_ls.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x % 10;\n        $x = $x - 1;\n    }\n    if ($shift > $x) {\n        $result = $result.reverse();\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkk7hf8u.php:26\nStack trace:\n#0 /tmp/tmpbkk7hf8u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbkk7hf8u.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y.length;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y.substr($shift);\n    $y = $y.substr(0, $y.length - $shift);\n    return $y + $y.substr(0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpe_cv5j0c.php:11\nStack trace:\n#0 /tmp/tmpe_cv5j0c.php(21): circular_shift(100, 2)\n#1 /tmp/tmpe_cv5j0c.php(25): candidate(100, 2)\n#2 /tmp/tmpe_cv5j0c.php(32): test()\n#3 {main}\n  thrown in /tmp/tmpe_cv5j0c.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . (int) $i;\n        if ($i < $shift) {\n            continue;\n        }\n        $result = $result . (int) $x - $i;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt14mnje.php:28\nStack trace:\n#0 /tmp/tmpzt14mnje.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzt14mnje.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    if ($shift < 0) {\n        return $x;\n    }\n    $n = $x;\n    $m = 0;\n    $s = '';\n    while ($n > 0) {\n        $s = $n % 10 + $s;\n        $n = floor($n / 10);\n        $m++;\n    }\n    if ($m < $shift) {\n        return $s;\n    }\n    $m = $shift;\n    $s = '';\n    while ($m > 0) {\n        $s = $m % 10 + $s;\n        $m = floor($m / 10);\n        $m--;\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmps6f703nx.php:19\nStack trace:\n#0 /tmp/tmps6f703nx.php(37): circular_shift(100, 2)\n#1 /tmp/tmps6f703nx.php(41): candidate(100, 2)\n#2 /tmp/tmps6f703nx.php(48): test()\n#3 {main}\n  thrown in /tmp/tmps6f703nx.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $x - $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxapdu32a.php:24\nStack trace:\n#0 /tmp/tmpxapdu32a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxapdu32a.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y.length;\n    $y = $y.substr(0, $y.length - $shift);\n    $y = $y.concat($y.substr(0, $shift));\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmposlt_1c7.php:11\nStack trace:\n#0 /tmp/tmposlt_1c7.php(18): circular_shift(100, 2)\n#1 /tmp/tmposlt_1c7.php(22): candidate(100, 2)\n#2 /tmp/tmposlt_1c7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmposlt_1c7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $x;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4zu0ho_.php:25\nStack trace:\n#0 /tmp/tmpk4zu0ho_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk4zu0ho_.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh5a7rug.php:25\nStack trace:\n#0 /tmp/tmpeh5a7rug.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeh5a7rug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwwndj1d.php:25\nStack trace:\n#0 /tmp/tmpmwwndj1d.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmwwndj1d.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    $result = $result . substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjrynldc.php:23\nStack trace:\n#0 /tmp/tmpsjrynldc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsjrynldc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($shift > $x) {\n        $result = $result.substr(0, $result.length - 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpnfmpth4s.php:14\nStack trace:\n#0 /tmp/tmpnfmpth4s.php(24): circular_shift(100, 2)\n#1 /tmp/tmpnfmpth4s.php(28): candidate(100, 2)\n#2 /tmp/tmpnfmpth4s.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpnfmpth4s.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y > 9 ? $y - 10 : $y;\n    $y = $y < 0 ? 10 - $y : $y;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppodp7pyg.php:27\nStack trace:\n#0 /tmp/tmppodp7pyg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppodp7pyg.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    if ($y > 9) {\n        $y = $y - 10;\n    }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2lc9nu3.php:29\nStack trace:\n#0 /tmp/tmpo2lc9nu3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo2lc9nu3.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    $y = $y - $shift;\n    $y = $y % 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnxfpzjm.php:24\nStack trace:\n#0 /tmp/tmphnxfpzjm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphnxfpzjm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $r = '';\n    while ($n > 0) {\n        $r = $n % 10 + $r * 10;\n        $n = $n / 10;\n    }\n    $r = $r % 10 + $r / 10;\n    if ($shift > $n) {\n        $r = $r % 10 + $r / 10;\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string * int in /tmp/tmp5oum1d10.php:15\nStack trace:\n#0 /tmp/tmp5oum1d10.php(26): circular_shift(100, 2)\n#1 /tmp/tmp5oum1d10.php(30): candidate(100, 2)\n#2 /tmp/tmp5oum1d10.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp5oum1d10.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y.length;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y.substr($shift);\n    $y = $y.substr(0, $y.length);\n    $y = $y.concat($y);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpe2hpiwc7.php:11\nStack trace:\n#0 /tmp/tmpe2hpiwc7.php(22): circular_shift(100, 2)\n#1 /tmp/tmpe2hpiwc7.php(26): candidate(100, 2)\n#2 /tmp/tmpe2hpiwc7.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpe2hpiwc7.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n    }\n    $result = $result . $x;\n    if ($shift > $x) {\n        $result = $result . $x;\n        $x = $x - 1;\n        for ($i = 0; $i < $x; $i++) {\n            $result = $result . $x;\n            $x = $x - 1;\n        }\n        $result = $result . $x;\n    }\n    $result = $result . $x;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6vkvpeb.php:34\nStack trace:\n#0 /tmp/tmpd6vkvpeb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpd6vkvpeb.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n    }\n    $result = $result . $x;\n    $result = $result . $shift;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezclub1q.php:25\nStack trace:\n#0 /tmp/tmpezclub1q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpezclub1q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $m = 0;\n    while ($n > 0) {\n        $m = $n % 10;\n        $n = $n / 10;\n        $m = $m + $shift;\n        if ($m > 9) {\n            $m = $m - 10;\n        }\n        $x = $x * 10 + $m;\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 0.01 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 0.001 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 0.0001 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 1.0E-5 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 1.0000000000000002E-6 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 1.0000000000000002E-7 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 1.0000000000000002E-8 to int loses precision in /tmp/tmparzvfuq2.php on line 15\n\nDeprecated: Implicit conversion from float 1.0000000000000003E-9 to int loses precision in /tmp/tmparzvfuq2.php ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $x % 10;\n        $x = floor($x / 10);\n    }\n    $result = $result.substr($shift);\n    if ($result.length > $x) {\n        $result = $result.substr(0, $x);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught ArgumentCountError: substr() expects at least 2 arguments, 1 given in /tmp/tmpypp19kdl.php:15\nStack trace:\n#0 /tmp/tmpypp19kdl.php(15): substr(2)\n#1 /tmp/tmpypp19kdl.php(23): circular_shift(1.0, 2)\n#2 /tmp/tmpypp19kdl.php(27): candidate(100, 2)\n#3 /tmp/tmpypp19kdl.php(34): test()\n#4 {main}\n  thrown in /tmp/tmpypp19kdl.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x;\n    $y = $y % 10;\n    $y = $y + $shift;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wnyjbg6.php:27\nStack trace:\n#0 /tmp/tmp5wnyjbg6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5wnyjbg6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    if ($shift == 0) {\n        return $y;\n    }\n    $y = $y - $shift;\n    $y = circular_shift($y, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh5a7rug.php:25\nStack trace:\n#0 /tmp/tmpeh5a7rug.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeh5a7rug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $s = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $s = $n % 10 + $s;\n        $n = floor($n / 10);\n    }\n    if ($n > 0) {\n        $s = $n % 10 + $s;\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmplexz5zku.php:15\nStack trace:\n#0 /tmp/tmplexz5zku.php(25): circular_shift(100, 2)\n#1 /tmp/tmplexz5zku.php(29): candidate(100, 2)\n#2 /tmp/tmplexz5zku.php(36): test()\n#3 {main}\n  thrown in /tmp/tmplexz5zku.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = abs($shift);\n    if ($shift > 0) {\n        $y = $y >> $shift;\n        $y = $y << $shift;\n    } else {\n        $y = $y << $shift;\n        $y = $y >> $shift;\n    }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfq8xgkk0.php:27\nStack trace:\n#0 /tmp/tmpfq8xgkk0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfq8xgkk0.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    if ($y > 9) {\n        $y -= 10;\n    }\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphze34h6j.php:31\nStack trace:\n#0 /tmp/tmphze34h6j.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphze34h6j.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfokg_ok5.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $r = '';\n    while ($n > 0) {\n        $r = $n % 10 + $r * 10;\n        $n = floor($n / 10);\n    }\n    if ($shift > $n) {\n        $r = reverse($r);\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string * int in /tmp/tmpwq06ewb6.php:15\nStack trace:\n#0 /tmp/tmpwq06ewb6.php(25): circular_shift(100, 2)\n#1 /tmp/tmpwq06ewb6.php(29): candidate(100, 2)\n#2 /tmp/tmpwq06ewb6.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpwq06ewb6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    $result = $result . substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjrynldc.php:23\nStack trace:\n#0 /tmp/tmpsjrynldc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsjrynldc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohhlx8po.php:30\nStack trace:\n#0 /tmp/tmpohhlx8po.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpohhlx8po.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y + $x * 10;\n    $y = $y % 10;\n    return $y ? $y : 0;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplc1mtsxa.php:28\nStack trace:\n#0 /tmp/tmplc1mtsxa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplc1mtsxa.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jhg_omg.php:29\nStack trace:\n#0 /tmp/tmp4jhg_omg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4jhg_omg.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt95e8df.php:30\nStack trace:\n#0 /tmp/tmpbt95e8df.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbt95e8df.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $shift; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y * 10 + $x % 10;\n    $x = $x / 10;\n    $y = $y + $x * 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cdk59vx.php:26\nStack trace:\n#0 /tmp/tmp2cdk59vx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2cdk59vx.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x % 10;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x % 10;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpdwyybuhu.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdwyybuhu.php:29\nStack trace:\n#0 /tmp/tmpdwyybuhu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdwyybuhu.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift -= 1;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkxt3dw3a.php:14\nStack trace:\n#0 /tmp/tmpkxt3dw3a.php(27): circular_shift(100, 2)\n#1 /tmp/tmpkxt3dw3a.php(31): candidate(100, 2)\n#2 /tmp/tmpkxt3dw3a.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkxt3dw3a.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n        if ($i < $shift) {\n            $result = $result . $x;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadqf0zxa.php:26\nStack trace:\n#0 /tmp/tmpadqf0zxa.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpadqf0zxa.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $n = $x;\n    $shift = $shift % $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    $n = $n - $shift;\n    $x = $x - $shift;\n    $s = '';\n    while ($n > 0) {\n        $s = $x % 10 + $s;\n        $x = $x / 10;\n        $n = $n - 1;\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp09145kk5.php:19\nStack trace:\n#0 /tmp/tmp09145kk5.php(27): circular_shift(98, 2)\n#1 /tmp/tmp09145kk5.php(31): candidate(100, 2)\n#2 /tmp/tmp09145kk5.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp09145kk5.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10 + $x % 10;\n    $x = $x / 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 21.1 to int loses precision in /tmp/tmppl0jxs4t.php on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppl0jxs4t.php:29\nStack trace:\n#0 /tmp/tmppl0jxs4t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppl0jxs4t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $shift;\n    $y %= 10;\n    $y = $y * 10 + $x;\n    $y %= 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 30.1 to int loses precision in /tmp/tmpyc1_878g.php on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyc1_878g.php:29\nStack trace:\n#0 /tmp/tmpyc1_878g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyc1_878g.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($x > 0) {\n        $result = $x + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp77n1fvi7.php:14\nStack trace:\n#0 /tmp/tmp77n1fvi7.php(24): circular_shift(100, 2)\n#1 /tmp/tmp77n1fvi7.php(28): candidate(100, 2)\n#2 /tmp/tmp77n1fvi7.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp77n1fvi7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $m = 0;\n    $s = '';\n    while ($n > 0) {\n        $s = $n % 10 + $s;\n        $n = floor($n / 10);\n        $m++;\n        if ($m == $shift) {\n            $m = 0;\n        }\n    }\n    if ($m > 0) {\n        $s = $s.substr(0, $m);\n    }\n    if ($s == '') {\n        $s = '0';\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpa9rkxwt9.php:16\nStack trace:\n#0 /tmp/tmpa9rkxwt9.php(33): circular_shift(100, 2)\n#1 /tmp/tmpa9rkxwt9.php(37): candidate(100, 2)\n#2 /tmp/tmpa9rkxwt9.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpa9rkxwt9.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n    }\n    $result = $result . substr($x - $shift, $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvf645ka.php:23\nStack trace:\n#0 /tmp/tmpcvf645ka.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcvf645ka.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    $i = 0;\n    while ($i < $shift) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n        $i++;\n    }\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $i++;\n    $y = $y * 10 +\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_m9qseb4.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . (int) $i;\n    }\n    $result = $result . (int) $shift;\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . (int) $x;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdobmdrnt.php:28\nStack trace:\n#0 /tmp/tmpdobmdrnt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdobmdrnt.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    $n = $x;\n    $m = $shift;\n    while ($m > 0) {\n        $y = $y * 10 + $n % 10;\n        $n /= 10;\n        $m--;\n    }\n    if ($m < 0) {\n        $y = $y * 10 - $n % 10;\n        $n /= 10;\n        $m++;\n    }\n    $y = $y * 10 + $n % 10;\n    $n /= 10;\n    $y = $y * 10 - $n % 10;\n    $n /= 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpgolu0cmg.php on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgolu0cmg.php:35\nStack trace:\n#0 /tmp/tmpgolu0cmg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgolu0cmg.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = abs($shift);\n    if ($shift > 0) {\n        $y = $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\n        $y = $y + $y >> $shift;\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nParse error: Unclosed '{' on line 12 in /tmp/tmpeuc_og7d.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y > 9 ? $y - 10 : $y;\n    $y = $y < 0 ? 10 + $y : $y;\n    $y = $y > 9 ? $y - 10 : $y;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnj1g8b48.php:28\nStack trace:\n#0 /tmp/tmpnj1g8b48.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnj1g8b48.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ( $i = 0; $i < $x; $i++ ) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y > 9 ? $y - 10 : $y;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp58cwxjtu.php:26\nStack trace:\n#0 /tmp/tmp58cwxjtu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp58cwxjtu.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $x % 10;\n        $x = floor($x / 10);\n    }\n    $result = $result.substr($shift, $result.length - $shift);\n    if ($result.length > $shift) {\n        $result = $result.substr(0, $shift);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpzwy95u02.php:15\nStack trace:\n#0 /tmp/tmpzwy95u02.php(23): circular_shift(1.0, 2)\n#1 /tmp/tmpzwy95u02.php(27): candidate(100, 2)\n#2 /tmp/tmpzwy95u02.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpzwy95u02.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift >= 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift -= 1;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp0cxdwra0.php:14\nStack trace:\n#0 /tmp/tmp0cxdwra0.php(27): circular_shift(100, 2)\n#1 /tmp/tmp0cxdwra0.php(31): candidate(100, 2)\n#2 /tmp/tmp0cxdwra0.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp0cxdwra0.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    $y = $y ? $y : 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohhlx8po.php:30\nStack trace:\n#0 /tmp/tmpohhlx8po.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpohhlx8po.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x % 10;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $result . $x % 10;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp2hqfstv6.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hqfstv6.php:29\nStack trace:\n#0 /tmp/tmp2hqfstv6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2hqfstv6.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n        if ($i < $shift) {\n            $x = $x + 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06ss7cax.php:28\nStack trace:\n#0 /tmp/tmp06ss7cax.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp06ss7cax.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = \"\";\n    for ( $i = 0; $i < $shift; $i++ ) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ( $i = 0; $i < $shift; $i++ ) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4jua1_nd.php:14\nStack trace:\n#0 /tmp/tmp4jua1_nd.php(25): circular_shift(100, 2)\n#1 /tmp/tmp4jua1_nd.php(29): candidate(100, 2)\n#2 /tmp/tmp4jua1_nd.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp4jua1_nd.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    $x = intval($x);\n    $shift = intval($shift);\n    if ($shift < 0) {\n        $shift = abs($shift);\n        $result = substr($x, $shift);\n        $x = substr($x, 0, $shift);\n    } else {\n        $result = substr($x, $shift);\n        $x = substr($x, $shift);\n    }\n    $result = substr($result, 0, $x.length);\n    return $result;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp6rvltdsh.php:21\nStack trace:\n#0 /tmp/tmp6rvltdsh.php(25): circular_shift('0', 2)\n#1 /tmp/tmp6rvltdsh.php(29): candidate(100, 2)\n#2 /tmp/tmp6rvltdsh.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp6rvltdsh.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfokg_ok5.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x % 10;\n        $x = $x - 1;\n        $x = $x / 10;\n    }\n    $result = $result . $x;\n    $result = $result . $shift;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 9.9 to int loses precision in /tmp/tmpo3dbyyut.php on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3dbyyut.php:26\nStack trace:\n#0 /tmp/tmpo3dbyyut.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo3dbyyut.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i;\n    }\n    $result = $result.substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl35u296j.php:23\nStack trace:\n#0 /tmp/tmpl35u296j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl35u296j.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    $n = $x;\n    for ($i = 0; $i < $shift; $i++) {\n        $n = $n - 1;\n        if ($n < 0) {\n            $n = 9;\n        }\n        $result = $result . $n;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_bptrzb.php:29\nStack trace:\n#0 /tmp/tmp4_bptrzb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4_bptrzb.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $n = $shift;\n    $i = 0;\n    while ($n > 0) {\n        $y = $y * 10;\n        $n--;\n    }\n    while ($i < $y.length) {\n        $y = $y.substr(0, $i) + $y.substr($i + 1);\n        $i++;\n    }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp8z6ep5hs.php:17\nStack trace:\n#0 /tmp/tmp8z6ep5hs.php(25): circular_shift(100, 2)\n#1 /tmp/tmp8z6ep5hs.php(29): candidate(100, 2)\n#2 /tmp/tmp8z6ep5hs.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp8z6ep5hs.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = $x - 0;\n    $shift = $shift - 0;\n    $y = 0;\n    for ($i = 0; $i < $shift; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $x * 10;\n    $y = $y + 0;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibjr_ph9.php:27\nStack trace:\n#0 /tmp/tmpibjr_ph9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpibjr_ph9.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    $digits = array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9);\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $digits[$x % 10] . $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $x; $i++) {\n        $result = $digits[$x % 10] . $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwq2rgcfj.php:30\nStack trace:\n#0 /tmp/tmpwq2rgcfj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwq2rgcfj.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $x - $i;\n    }\n    if ($shift > $x) {\n        return $result;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x - $i;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplm7s34ur.php:28\nStack trace:\n#0 /tmp/tmplm7s34ur.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplm7s34ur.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift -= 1;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkxt3dw3a.php:14\nStack trace:\n#0 /tmp/tmpkxt3dw3a.php(27): circular_shift(100, 2)\n#1 /tmp/tmpkxt3dw3a.php(31): candidate(100, 2)\n#2 /tmp/tmpkxt3dw3a.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkxt3dw3a.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    $digits = str_split($x, '');\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $digits[$i] . $result;\n    }\n    for ($i = $shift; $i < $digits.length; $i++) {\n        $result = $digits[$i] . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: str_split(): Argument #2 ($length) must be of type int, string given in /tmp/tmp5bnh4o6d.php:13\nStack trace:\n#0 /tmp/tmp5bnh4o6d.php(13): str_split('100', '')\n#1 /tmp/tmp5bnh4o6d.php(24): circular_shift(100, 2)\n#2 /tmp/tmp5bnh4o6d.php(28): candidate(100, 2)\n#3 /tmp/tmp5bnh4o6d.php(35): test()\n#4 {main}\n  thrown in /tmp/tmp5bnh4o6d.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    $n = $x;\n    for ($i = 0; $i < $shift; $i++) {\n        $n = $n - 1;\n        $result = $n % 10 + $result;\n        $n = $n / 10;\n    }\n    $result = $n + $result;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpl362_hne.php:16\nStack trace:\n#0 /tmp/tmpl362_hne.php(24): circular_shift(100, 2)\n#1 /tmp/tmpl362_hne.php(28): candidate(100, 2)\n#2 /tmp/tmpl362_hne.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpl362_hne.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n        if ($i < $shift) {\n            $x = $x + 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxznk_yb.php:26\nStack trace:\n#0 /tmp/tmphxznk_yb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphxznk_yb.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $n = $shift;\n    $m = 0;\n    while ($n > 0) {\n        $m = $n % 10;\n        $n = $n / 10;\n        $y = $y * 10 + $m;\n    }\n    if ($n < 0) {\n        $y = $y * 10 + $m;\n        $m = $m * -1;\n    }\n    $y = $y + $m;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 0.2 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 0.02 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 0.002 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 0.0002 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 2.0E-5 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 2.0000000000000003E-6 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 2.0000000000000004E-7 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 2.0000000000000004E-8 to int loses precision in /tmp/tmpj0njc1vv.php on line 14\n\nDeprecated: Implicit conversion from float 2.0000000000000005E-9 to int loses precision in /tmp/tmpj0njc1vv.php ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a5bz7rn.php:24\nStack trace:\n#0 /tmp/tmp6a5bz7rn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6a5bz7rn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrqrlqfj.php:28\nStack trace:\n#0 /tmp/tmpwrqrlqfj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwrqrlqfj.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $n = $x;\n    $s = '';\n    while ($n > 0) {\n        $s = $n % 10 + $s;\n        $n = floor($n / 10);\n    }\n    if ($shift > $n) {\n        $s = reverse($s);\n    }\n    $s = $s.substr(0, $shift);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp13xv3wps.php:15\nStack trace:\n#0 /tmp/tmp13xv3wps.php(26): circular_shift(100, 2)\n#1 /tmp/tmp13xv3wps.php(30): candidate(100, 2)\n#2 /tmp/tmp13xv3wps.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp13xv3wps.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift -= 1;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkxt3dw3a.php:14\nStack trace:\n#0 /tmp/tmpkxt3dw3a.php(27): circular_shift(100, 2)\n#1 /tmp/tmpkxt3dw3a.php(31): candidate(100, 2)\n#2 /tmp/tmpkxt3dw3a.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkxt3dw3a.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($shift > $x) {\n        $result = $x + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp3qt1pqkf.php:14\nStack trace:\n#0 /tmp/tmp3qt1pqkf.php(24): circular_shift(100, 2)\n#1 /tmp/tmp3qt1pqkf.php(28): candidate(100, 2)\n#2 /tmp/tmp3qt1pqkf.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp3qt1pqkf.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result += $i;\n    }\n    $result = $result.substr($shift);\n    $result = $result.substr(0, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpxqjkwz38.php:12\nStack trace:\n#0 /tmp/tmpxqjkwz38.php(20): circular_shift(100, 2)\n#1 /tmp/tmpxqjkwz38.php(24): candidate(100, 2)\n#2 /tmp/tmpxqjkwz38.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpxqjkwz38.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $x % 10;\n        $x = floor($x / 10);\n    }\n    $result = $result.substr($shift, $result.length - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpza_nxgbv.php:15\nStack trace:\n#0 /tmp/tmpza_nxgbv.php(20): circular_shift(1.0, 2)\n#1 /tmp/tmpza_nxgbv.php(24): candidate(100, 2)\n#2 /tmp/tmpza_nxgbv.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpza_nxgbv.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result += $i;\n    }\n    $result = $result.substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmppmg36w3e.php:12\nStack trace:\n#0 /tmp/tmppmg36w3e.php(19): circular_shift(100, 2)\n#1 /tmp/tmppmg36w3e.php(23): candidate(100, 2)\n#2 /tmp/tmppmg36w3e.php(30): test()\n#3 {main}\n  thrown in /tmp/tmppmg36w3e.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n    }\n    $result = $result . $x;\n    $result = $result . substr($shift, $x);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_1kp16z.php:25\nStack trace:\n#0 /tmp/tmpa_1kp16z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa_1kp16z.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($x > 0) {\n        $result = $x % 10 + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpk7zzlmi7.php:14\nStack trace:\n#0 /tmp/tmpk7zzlmi7.php(24): circular_shift(100, 2)\n#1 /tmp/tmpk7zzlmi7.php(28): candidate(100, 2)\n#2 /tmp/tmpk7zzlmi7.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpk7zzlmi7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift--;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp6_o34mij.php:14\nStack trace:\n#0 /tmp/tmp6_o34mij.php(27): circular_shift(100, 2)\n#1 /tmp/tmp6_o34mij.php(31): candidate(100, 2)\n#2 /tmp/tmp6_o34mij.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp6_o34mij.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n    }\n    $y = $y * 10 + $x % 10;\n    $x /= 10;\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10 + $x;\n    $y = $y + $shift;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 32.1 to int loses precision in /tmp/tmpsy3mfvpv.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy3mfvpv.php:30\nStack trace:\n#0 /tmp/tmpsy3mfvpv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsy3mfvpv.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result += $i;\n    }\n    $result = $result.substr($shift, $x - $shift);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmppmg36w3e.php:12\nStack trace:\n#0 /tmp/tmppmg36w3e.php(19): circular_shift(100, 2)\n#1 /tmp/tmppmg36w3e.php(23): candidate(100, 2)\n#2 /tmp/tmppmg36w3e.php(30): test()\n#3 {main}\n  thrown in /tmp/tmppmg36w3e.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n    }\n    if ($shift > $x) {\n        return $result;\n    }\n    $result = $result . $x;\n    for ($i = 0; $i < $shift - 1; $i++) {\n        $x = $x - 1;\n        $result = $result . $x;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwmikx8o.php:31\nStack trace:\n#0 /tmp/tmpiwmikx8o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpiwmikx8o.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($shift > $x) {\n        $result = $result.reverse();\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpz45o0cmh.php:14\nStack trace:\n#0 /tmp/tmpz45o0cmh.php(24): circular_shift(100, 2)\n#1 /tmp/tmpz45o0cmh.php(28): candidate(100, 2)\n#2 /tmp/tmpz45o0cmh.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpz45o0cmh.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if ($x < 0) {\n        return circular_shift(-$x, $shift);\n    }\n    if ($shift > $x) {\n        return circular_shift(0, $shift - $x);\n    }\n    if ($shift == 0) {\n        return $x;\n    }\n    if ($shift == 1) {\n        return circular_shift($x + 1, 0);\n    }\n    if ($shift == 2) {\n        return circular_shift($x + 1, 1);\n    }\n    if ($shift == 3) {\n        return circular_shift($x + 1, 2);\n    }\n    if ($shift == 4) {\n        return circular_shift($x + 1, 3);\n    }\n    if ($shift == 5) {\n        return circular_shift($x + 1, 4);\n    }\n    if ($shift == 6) {\n        return circular_shift($x + 1, 5);\n    }\n    if ($shift == 7) {\n        return circular_shift($x + 1, 6);\n    }\n    if ($shift == 8) {\n        return circular_shift($x + 1, 7);\n    }\n    if ($shift == 9) {\n        return circular_shift($x + 1, 8);\n    }\n    if ($shift == 10) {\n        return circular_shift($x + 1, 9);\n    }\n    if ($shift == 11) {\n        return circular_shift($x + 1, 10);\n    }\n    if ($shift == 12) {\n        return circular_shift($x + 1, 11);\n    }\n    if ($shift == 13) {\n        return circular_shift($x + 1, 12);\n    }\n    if ($shift == 14) {\n        return circular_shift($x + 1, 13);\n    }\n    if ($shift == 15) {\n        return circular_shift($x + 1, 14);\n    }\n    if ($shift == 16) {\n        return circular_shift($x + 1, 15);\n    }\n    if ($shift == 17) {\n        return circular_shift($x + 1, 16);\n    }\n    if ($shift == 18) {\n        return circular_shift($x\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpguwgnxwc.php on line 72\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpn9pmmsdk.php:14\nStack trace:\n#0 /tmp/tmpn9pmmsdk.php(25): circular_shift(100, 2)\n#1 /tmp/tmpn9pmmsdk.php(29): candidate(100, 2)\n#2 /tmp/tmpn9pmmsdk.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpn9pmmsdk.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = $x;\n    $shift = $shift % $y;\n    $y = $y - $shift;\n    $y = $y % 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnxfpzjm.php:24\nStack trace:\n#0 /tmp/tmphnxfpzjm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphnxfpzjm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $x % 10;\n        $x = floor($x / 10);\n        if ($i < $shift) {\n            continue;\n        }\n        $result = $result . $x;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuziu1x06.php:27\nStack trace:\n#0 /tmp/tmpuziu1x06.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuziu1x06.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpi7ywhfwg.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7ywhfwg.php:29\nStack trace:\n#0 /tmp/tmpi7ywhfwg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi7ywhfwg.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfokg_ok5.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x % 10;\n        $x = $x / 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpi7ywhfwg.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7ywhfwg.php:29\nStack trace:\n#0 /tmp/tmpi7ywhfwg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi7ywhfwg.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    if ($x > 0) {\n        $result = $x % 10 + $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpk7zzlmi7.php:14\nStack trace:\n#0 /tmp/tmpk7zzlmi7.php(24): circular_shift(100, 2)\n#1 /tmp/tmpk7zzlmi7.php(28): candidate(100, 2)\n#2 /tmp/tmpk7zzlmi7.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpk7zzlmi7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x;\n    $y = $y % 10;\n    $y = $y + $shift;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wnyjbg6.php:27\nStack trace:\n#0 /tmp/tmp5wnyjbg6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5wnyjbg6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a5bz7rn.php:24\nStack trace:\n#0 /tmp/tmp6a5bz7rn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6a5bz7rn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x = $x / 10;\n    }\n    $y = $y + $shift;\n    $y = $y % 10;\n    $y = $y * 10 + $x % 10;\n    $x = $x / 10;\n    $y = $y + $x;\n    $y = $y % 10;\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nDeprecated: Implicit conversion from float 21.1 to int loses precision in /tmp/tmppl0jxs4t.php on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppl0jxs4t.php:29\nStack trace:\n#0 /tmp/tmppl0jxs4t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppl0jxs4t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    if ($x < 0) {\n        return circular_shift(-$x, $shift);\n    }\n    if ($shift < 0) {\n        return circular_shift($x, -$shift);\n    }\n    if ($shift > $x) {\n        return circular_shift(0, $shift - $x);\n    }\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n    }\n    $result = $x + $result;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgad370qh.php:21\nStack trace:\n#0 /tmp/tmpgad370qh.php(29): circular_shift(100, 2)\n#1 /tmp/tmpgad370qh.php(33): candidate(100, 2)\n#2 /tmp/tmpgad370qh.php(40): test()\n#3 {main}\n  thrown in /tmp/tmpgad370qh.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result . $x;\n        $x = $x - 1;\n        if ($i < $shift) {\n            $x = $x + 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxznk_yb.php:26\nStack trace:\n#0 /tmp/tmphxznk_yb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphxznk_yb.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y = $y * 10 + $x % 10;\n        $x /= 10;\n    }\n    $y = $y + $shift;\n    if ($y >= 10) {\n        $y -= 10;\n    }\n    $y = $y % 10;\n    if ($y == 0) {\n        return \"0\";\n    }\n    $y = $y * 10;\n    $y = $y + $x;\n    if ($y >= 10) {\n        $y -= 10;\n    }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292537,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdi0n_dp.php:36\nStack trace:\n#0 /tmp/tmpbdi0n_dp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbdi0n_dp.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = (int) $x;\n    $shift = (int) $shift;\n    $result = '';\n    while ($shift > 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift -= 1;\n    }\n    while ($shift < 0) {\n        $result = $x % 10 + $result;\n        $x = $x / 10;\n        $shift += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkxt3dw3a.php:14\nStack trace:\n#0 /tmp/tmpkxt3dw3a.php(27): circular_shift(100, 2)\n#1 /tmp/tmpkxt3dw3a.php(31): candidate(100, 2)\n#2 /tmp/tmpkxt3dw3a.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkxt3dw3a.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $y = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $y += $x % 10;\n        $x /= 10;\n    }\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10;\n    $y += $x % 10;\n    $x /= 10\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfokg_ok5.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Circular shift the digits of the integer x, shift the digits right by shift\n// and return the result as a string.\n// If shift > number of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n    $x = intval($x);\n    $shift = intval($shift);\n    $result = '';\n    for ($i = 0; $i < $x; $i++) {\n        $result .= $i < $shift ? $x - $i : $i - $shift;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292536,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxapdu32a.php:24\nStack trace:\n#0 /tmp/tmpxapdu32a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxapdu32a.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "HumanEval_18_how_many_times",
  "language": "php",
  "prompt": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n",
  "tests": "function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x000\", \"\", $string);\n    $string = str_replace(\"\\x0000\", \"\", $string);\n    $string = str_replace(\"\\x00000\", \"\", $string);\n    $string = str_replace(\"\\x000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000000\", \"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpyj_cwzvs.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8q76vxst.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i <= $string_length - $substring_length; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 <= $string_length - 1) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmphz3uoobu.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        $j = 0;\n        while ($j < $substring_length && $string[$i + $j] == $substring[$j]) {\n            $j++;\n        }\n        if ($j == $substring_length) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($j < $substring_length) {\n                if ($string[$i + $j] != $substring[$j]) {\n                    break;\n                }\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8q76vxst.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i <= $string_length - $substring_length; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 <= $string_length - 1) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp6fisjiku.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = preg_replace('/\\s+/', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('\\n', '', $string);\n    $string = str_replace('\\r', '', $string);\n    $string = str_replace('\\t', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\0\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\\0\" in /tmp/tmp0xxfxz6f.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpnr3277fp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace('', $substring, $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmphor_htn2.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace('', $substring, $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_replace('', '', $string);\n    $string = str_\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmphor_htn2.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpur4hgm8p.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpiuymw7xb.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpnr3277fp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i <= $string_length - $substring_length; $i++) {\n        if ($string[$i] == $substring[0]) {\n            if (strncmp($string, $substring, $substring_length) == 0) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strpos($string, $substring, $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpba0qmtvc.php:27\nStack trace:\n#0 /tmp/tmpba0qmtvc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpba0qmtvc.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp9jy7pl2d.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpc_j6cij8.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp9jy7pl2d.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = preg_replace('/\\s+/', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('\\n', '', $string);\n    $string = str_replace('\\r', '', $string);\n    $string = str_replace('\\t', '', $string);\n    $string = str_replace('\\v', '', $string);\n    $string = str_replace('\\f', '', $string);\n    $string = str_replace('\\b', '', $string);\n    $string = str_replace('\\x0B', '', $string);\n    $string = str_replace('\\x0C', '', $string);\n    $string = str_replace('\\x0D', '', $string);\n    $string = str_replace('\\x0E', '', $string);\n    $string = str_replace('\\x0F', '', $string);\n    $string = str_replace('\\x10', '', $string);\n    $string = str_replace('\\x11', '', $string);\n    $string = str_replace('\\x12', '', $string);\n    $string = str_replace('\\x13', '', $string);\n    $string = str_replace('\\x14', '', $string);\n    $string = str_replace('\\x15', '', $string);\n    $string = str_replace('\\x16', '', $string);\n    $string = str_replace('\\x17', '', $string);\n    $string = str_replace('\\x18', '', $string);\n    $string = str_replace('\\x19', '', $string);\n    $string = str_replace('\\x1A', '', $string);\n    $string = str_replace('\\x1B', '', $string);\n    $string = str_replace('\\x1C', '', $string);\n    $string = str_replace('\\x1D', '', $string);\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmp7u3vd9lc.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($j < $substring_length) {\n                if ($string[$i + $j] != $substring[$j]) {\n                    break;\n                }\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        $j = 0;\n        while ($j < $substring_length) {\n            if ($string[$i + $j] != $substring[$j]) {\n                break;\n            }\n            $j++;\n        }\n        if ($j == $substring_length) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0A\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x09\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x01\", \"\", $string);\n    $string = str_replace(\"\\x02\", \"\", $string);\n    $string = str_replace(\"\\x03\", \"\", $string);\n    $string = str_replace(\"\\x04\", \"\", $string);\n    $string = str_replace(\"\\x05\", \"\", $string);\n    $string = str_replace(\"\\x06\", \"\", $string);\n    $string = str_replace(\"\\x07\", \"\", $string);\n    $string = str_replace(\"\\x08\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpb6j7hmn5.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcp0h2gsp.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpy2hqis0u.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    for ($i = 0; $i < $string.length; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            $j = 1;\n            while ($j < $substring.length) {\n                if ($string[$i + $j] != $substring[$j]) {\n                    $count = 0;\n                    break;\n                }\n                $j++;\n            }\n            if ($count > 0) {\n                break;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp4ctw6b9g.php:13\nStack trace:\n#0 /tmp/tmp4ctw6b9g.php(33): how_many_times('', 'x')\n#1 /tmp/tmp4ctw6b9g.php(37): candidate('', 'x')\n#2 /tmp/tmp4ctw6b9g.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4ctw6b9g.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\\r\", \"\", $string);\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmpbl14ekh7.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpc_j6cij8.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\\n\\n\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_mvknfo6.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace(\"a\", \"\", $string);\n    $string = str_replace\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8q76vxst.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpur4hgm8p.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmpqfrfvbui.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0a\", \"\", $string);\n    $string = str_replace(\"\\x0d\", \"\", $string);\n    $string = str_replace(\"\\x0c\", \"\", $string);\n    $string = str_replace(\"\\x09\", \"\", $string);\n    $string = str_replace(\"\\x08\", \"\", $string);\n    $string = str_replace(\"\\x0b\", \"\", $string);\n    $string = str_replace(\"\\x0e\", \"\", $string);\n    $string = str_replace(\"\\x0f\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x01\", \"\", $string);\n    $string = str_replace(\"\\x02\", \"\", $string);\n    $string = str_replace(\"\\x03\", \"\", $string);\n    $string = str_replace(\"\\x04\", \"\", $string);\n    $string = str_replace(\"\\x05\", \"\", $string);\n    $string = str_replace(\"\\x06\", \"\", $string);\n    $string = str_replace(\"\\x07\", \"\", $string);\n    $string = str_replace(\"\\x0f\", \"\", $string);\n    $string = str_replace(\"\\x1b\", \"\", $string);\n    $string = str_replace(\"\\x1c\", \"\", $string);\n    $string = str_replace(\"\\x1d\", \"\", $string);\n    $string = str_replace\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpsqb53er2.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmpqfrfvbui.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp1dy1uj_e.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        $j = 0;\n        while ($j < $substring_length) {\n            if ($string[$i + $j] != $substring[$j]) {\n                break;\n            }\n            $j++;\n        }\n        if ($j == $substring_length) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpnr3277fp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i <= $string_length - $substring_length; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 <= $string_length - 1) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpxauhm1ne.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('\\n', '', $string);\n    $string = str_replace('\\r', '', $string);\n    $string = str_replace('\\t', '', $string);\n    $string = str_replace('\\v', '', $string);\n    $string = str_replace('\\f', '', $string);\n    $string = str_replace('\\b', '', $string);\n    $string = str_replace('\\x0b', '', $string);\n    $string = str_replace('\\x0c', '', $string);\n    $string = str_replace('\\x0d', '', $string);\n    $string = str_replace('\\x0e', '', $string);\n    $string = str_replace('\\x0f', '', $string);\n    $string = str_replace('\\x10', '', $string);\n    $string = str_replace('\\x11', '', $string);\n    $string = str_replace('\\x12', '', $string);\n    $string = str_replace('\\x13', '', $string);\n    $string = str_replace('\\x14', '', $string);\n    $string = str_replace('\\x15', '', $string);\n    $string = str_replace('\\x16', '', $string);\n    $string = str_replace('\\x17', '', $string);\n    $string = str_replace('\\x18', '', $string);\n    $string = str_replace('\\x19', '', $string);\n    $string = str_replace('\\x1a', '', $string);\n    $string = str_replace('\\x1b', '', $string);\n    $string = str_replace('\\x1c', '', $string);\n    $string = str_replace('\\x1d', '', $string);\n    $string = str_replace('\\x1e', '', $string);\n    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmpgc16eppk.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpy2hqis0u.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpy2hqis0u.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpabvnvb18.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        $found = 0;\n        for ($j = 0; $j < $substring_length; $j++) {\n            if ($string[$i + $j] == $substring[$j]) {\n                $found = 1;\n                break;\n            }\n        }\n        if ($found) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpc_j6cij8.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = preg_replace('/\\s+/', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('\\n', '', $string);\n    $string = str_replace('\\r', '', $string);\n    $string = str_replace('\\t', '', $string);\n    $string = str_replace('\\v', '', $string);\n    $string = str_replace('\\f', '', $string);\n    $string = str_replace('\\b', '', $string);\n    $string = str_replace('\\0', '', $string);\n    $string = str_replace('\\x0', '', $string);\n    $string = str_replace('\\x00', '', $string);\n    $string = str_replace('\\u0000', '', $string);\n    $string = str_replace('\\u000', '', $string);\n    $string = str_replace('\\u00', '', $string);\n    $string = str_replace('\\u0', '', $string);\n    $string = str_replace('\\u', '', $string);\n    $string = str_replace('\\U', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    $string = str_replace('\\u00ff', '', $string);\n    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmpiqfowkkg.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp9jy7pl2d.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp1dy1uj_e.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpy2hqis0u.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    for ($i = 0; $i < $string.length; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            $j = $i + 1;\n            while ($j < $string.length && $string[$j] == $substring[0]) {\n                $count++;\n                $j++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpnyn9uola.php:13\nStack trace:\n#0 /tmp/tmpnyn9uola.php(27): how_many_times('', 'x')\n#1 /tmp/tmpnyn9uola.php(31): candidate('', 'x')\n#2 /tmp/tmpnyn9uola.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpnyn9uola.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpy2hqis0u.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpabvnvb18.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmpqfrfvbui.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp3em8_0kz.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp9jy7pl2d.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        $j = 0;\n        while ($j < $substring_length && $string[$i + $j] == $substring[$j]) {\n            $j++;\n        }\n        if ($j == $substring_length) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcp0h2gsp.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp1dy1uj_e.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = preg_replace('/\\s+/', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('\\n', '', $string);\n    $string = str_replace('\\r', '', $string);\n    $string = str_replace('\\t', '', $string);\n    $string = str_replace('\\v', '', $string);\n    $string = str_replace('\\f', '', $string);\n    $string = str_replace('\\b', '', $string);\n    $string = str_replace('\\x0b', '', $string);\n    $string = str_replace('\\x0c', '', $string);\n    $string = str_replace('\\x0d', '', $string);\n    $string = str_replace('\\x0e', '', $string);\n    $string = str_replace('\\x0f', '', $string);\n    $string = str_replace('\\x10', '', $string);\n    $string = str_replace('\\x11', '', $string);\n    $string = str_replace('\\x12', '', $string);\n    $string = str_replace('\\x13', '', $string);\n    $string = str_replace('\\x14', '', $string);\n    $string = str_replace('\\x15', '', $string);\n    $string = str_replace('\\x16', '', $string);\n    $string = str_replace('\\x17', '', $string);\n    $string = str_replace('\\x18', '', $string);\n    $string = str_replace('\\x19', '', $string);\n    $string = str_replace('\\x1a', '', $string);\n    $string = str_replace('\\x1b', '', $string);\n    $string = str_replace('\\x1c', '', $string);\n    $string = str_replace('\\x1d', '', $string);\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmp3vzf8_bk.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0d\", \"\", $string);\n    $string = str_replace(\"\\x0a\", \"\", $string);\n    $string = str_replace(\"\\x0c\", \"\", $string);\n    $string = str_replace(\"\\x0b\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x01\", \"\", $string);\n    $string = str_replace(\"\\x02\", \"\", $string);\n    $string = str_replace(\"\\x03\", \"\", $string);\n    $string = str_replace(\"\\x04\", \"\", $string);\n    $string = str_replace(\"\\x05\", \"\", $string);\n    $string = str_replace(\"\\x06\", \"\", $string);\n    $string = str_replace(\"\\x07\", \"\", $string);\n    $string = str_replace(\"\\x08\", \"\", $string);\n    $string = str_replace(\"\\x09\", \"\", $string);\n    $string = str_replace(\"\\x0a\", \"\", $string);\n    $string = str_replace(\"\\x0b\", \"\", $string);\n    $string = str_replace(\"\\x0c\", \"\", $string);\n    $string = str_replace(\"\\x0d\", \"\", $string);\n    $string = str_replace(\"\\x0e\", \"\", $string);\n    $string = str_replace(\"\\x0f\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpoq1g_c_v.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\n\\n\", \"\", $string);\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: Unclosed '{' on line 9 in /tmp/tmp9u9vlojz.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcp0h2gsp.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpc_j6cij8.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"a\", \"\", $string);\n    $substring = str_replace(\"a\", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string =\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpt146uvhs.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpc_j6cij8.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\n\\\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpb8zi1zde.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpnr3277fp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $start = 0;\n    while ($start < strlen($string)) {\n        $end = $start + strlen($substring);\n        if ($end > strlen($string)) {\n            break;\n        }\n        if ($string[$start] == $substring[0] && $string[$end - 1] == $substring[strlen($substring) - 1]) {\n            $count++;\n            $start = $end;\n        } else {\n            $start++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpgkt9_t.php:34\nStack trace:\n#0 /tmp/tmpfpgkt9_t.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfpgkt9_t.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\\n\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\\n\", $substring);\n    $string = preg_replace(\"/\\n/\", \"\", $string);\n    $substring = preg_replace(\"/\\n/\", \"\", $substring);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $substring = str_replace(\"\\n\", \"\", $substring);\n    $string = preg_replace(\"/\\r/\", \"\", $string);\n    $substring = preg_replace(\"/\\r/\", \"\", $substring);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $substring = str_replace(\"\\r\", \"\", $substring);\n    $string = preg_replace(\"/\\s/\", \"\", $string);\n    $substring = preg_replace(\"/\\s/\", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = preg_replace(\"/^\\s+|\\s+$/\", \"\", $string);\n    $substring = preg_replace(\"/^\\s+|\\s+$/\", \"\", $substring);\n    $string = preg_replace(\"/^\\s+|\\s+$/\", \"\", $string);\n    $substring = preg_replace(\"/^\\s+|\\s+$/\", \"\", $substring);\n    $string = preg_replace(\"/^\\s+|\\s+$/\", \"\", $string);\n    $substring = preg_replace(\"/^\\s+|\\s+$/\", \"\", $substring);\n    $string = preg_replace(\"/^\\s+|\\s+$/\", \"\", $string);\n    $substring = preg_replace(\"/^\\s+|\\s+$/\", \"\", $substring);\n    $string = preg_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpfp5eed6y.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpn4sm6mgz.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\", \"\", $string);\n    $string = str_replace(\"\\n\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\\n\\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp1dy1uj_e.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '', $string);\n    $string = str_replace($substring, '\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \")\" in /tmp/tmph7obrnld.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpy2hqis0u.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            for ($j = 1; $j < $substring_length; $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n                    break;\n                }\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpeqtypt3c.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        $count += (strstr($string, $substring) == $string && $i < $string_length - $substring_length) ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcgobrwt.php:25\nStack trace:\n#0 /tmp/tmptcgobrwt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptcgobrwt.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmponrtukcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpc_j6cij8.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\x0d\", \"\", $string);\n    $string = str_replace(\"\\x0a\", \"\", $string);\n    $string = str_replace(\"\\x0c\", \"\", $string);\n    $string = str_replace(\"\\x0b\", \"\", $string);\n    $string = str_replace(\"\\x0f\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x01\", \"\", $string);\n    $string = str_replace(\"\\x02\", \"\", $string);\n    $string = str_replace(\"\\x03\", \"\", $string);\n    $string = str_replace(\"\\x04\", \"\", $string);\n    $string = str_replace(\"\\x05\", \"\", $string);\n    $string = str_replace(\"\\x06\", \"\", $string);\n    $string = str_replace(\"\\x07\", \"\", $string);\n    $string = str_replace(\"\\x08\", \"\", $string);\n    $string = str_replace(\"\\x09\", \"\", $string);\n    $string = str_replace(\"\\x0e\", \"\", $string);\n    $string = str_replace(\"\\x0f\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmp7xbxfmli.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 < $string_length) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpqycnsgj0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(' ', '', $string);\n    $substring = str_replace(' ', '', $substring);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected string content \"\" in /tmp/tmpeil0pvwd.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i <= $string_length - $substring_length; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $count++;\n            if ($i + $substring_length - 1 <= $string_length - 1) {\n                $count += how_many_times($string, $substring);\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpc_xrob8j.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpn675q6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpxy5egjto.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $substring = str_replace(\" \", \"\", $substring);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpkytcm9cv.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            for ($j = 1; $j < $substring_length; $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n                    break;\n                }\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\",\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9twwfg_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while ($i + $j < $string_length - $substring_length + 1 && $string[$i + $j] == $substring[$j]) {\n                $j++;\n            }\n            if ($j == $substring_length) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 1 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nWarning: Uninitialized string offset 3 in /tmp/tmpzryv88y8.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzryv88y8.php:34\nStack trace:\n#0 /tmp/tmpzryv88y8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzryv88y8.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    for ($i = 0; $i < $string.length; $i++) {\n        if ($string.substr($i, $substring.length) == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpwcpjxmal.php:13\nStack trace:\n#0 /tmp/tmpwcpjxmal.php(22): how_many_times('', 'x')\n#1 /tmp/tmpwcpjxmal.php(26): candidate('', 'x')\n#2 /tmp/tmpwcpjxmal.php(32): test()\n#3 {main}\n  thrown in /tmp/tmpwcpjxmal.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $substring = str_replace(\"\\r\\n\", \"\", $substring);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x1a\", \"\", $string);\n    $string = str_replace(\"\\x1b\", \"\", $string);\n    $string = str_replace(\"\\x1c\", \"\", $string);\n    $string = str_replace(\"\\x1d\", \"\", $string);\n    $string = str_replace(\"\\x1e\", \"\", $string);\n    $string = str_replace(\"\\x1f\", \"\", $string);\n    $string = str_replace(\"\\x7f\", \"\", $string);\n    $string = str_replace(\"\\x80\", \"\", $string);\n    $string = str_replace(\"\\x81\", \"\", $string);\n    $string = str_replace(\"\\x82\", \"\", $string);\n    $string = str_replace(\"\\x83\", \"\", $string);\n    $string = str_replace(\"\\x84\", \"\", $string);\n    $string = str_replace(\"\\x85\", \"\", $string);\n    $string = str_replace(\"\\x86\", \"\", $string);\n    $string = str_replace(\"\\x87\", \"\", $string);\n    $string = str_replace(\"\\x88\", \"\", $string);\n    $string = str_replace(\"\\x89\", \"\", $string\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpj0b935lu.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace(\"\", \"\", $string);\n    $substring = str_replace(\"\", \"\", $substring);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\", \"\", $string);\n    $string = str_replace(\"\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \", \", expecting \")\" in /tmp/tmpycaw6v8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        $match = strpos($string, $substring, $i);\n        if ($match === false) {\n            break;\n        }\n        $count++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqx3n5hz.php:29\nStack trace:\n#0 /tmp/tmpzqx3n5hz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzqx3n5hz.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string = str_replace($substring, '', $string);\n    $string = preg_replace('/' . $substring . '/', '', $string);\n    $string = preg_replace('/' . $substring . '/i', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $substring . '/gi', '', $string);\n    $string = preg_replace('/' . $sub\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp0umeepj7.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length - $substring_length + 1; $i++) {\n        if (strncmp($string, $substring, $substring_length) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292758,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzkkd7l.php:27\nStack trace:\n#0 /tmp/tmp1fzkkd7l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1fzkkd7l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
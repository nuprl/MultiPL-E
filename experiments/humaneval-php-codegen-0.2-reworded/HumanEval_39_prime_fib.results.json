{
  "name": "HumanEval_39_prime_fib",
  "language": "php",
  "prompt": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n",
  "tests": "function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $c - $b;\n    $f = $e + $b;\n    $g = $f - $a;\n    $h = $f - $b;\n    $i = $h + $a;\n    $j = $i - $b;\n    $k = $i - $a;\n    $l = $k + $b;\n    $m = $l - $b;\n    $n = $m + $a;\n    $prime = $n;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeedqg_0d.php:40\nStack trace:\n#0 /tmp/tmpeedqg_0d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpeedqg_0d.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab = prime_fib($n - 28);\n    let $ac = prime_fib($n - 29);\n    let $ad = prime_fib($n - 30);\n    let $ae = prime_fib($n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmp30i3m8yv.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 1) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp366i9hfa.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptq_ozimq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return 13;\n    }\n    if ($n == 8) {\n        return 13;\n    }\n    if ($n == 9) {\n        return 13;\n    }\n    if ($n == 10) {\n        return 13;\n    }\n    if ($n == 11) {\n        return 13;\n    }\n    if ($n == 12) {\n        return 13;\n    }\n    if ($n == 13) {\n        return 13;\n    }\n    if ($n == 14) {\n        return 13;\n    }\n    if ($n == 15) {\n        return 13;\n    }\n    if ($n == 16) {\n        return 13;\n    }\n    if ($n == 17) {\n        return 13;\n    }\n    if ($n == 18) {\n        return 13;\n    }\n    if ($n == 19) {\n        return 13;\n    }\n    if ($n == 20) {\n        return 13;\n    }\n    if ($n == 21) {\n        return 13;\n    }\n    if ($n == 22) {\n        return 13;\n    }\n    if ($n == 23) {\n        return 13;\n    }\n    if ($n == 24) {\n        return 13;\n    }\n    if ($n == 25) {\n        return 13;\n    }\n    if ($n == 26) {\n        return 13;\n    }\n    if ($n == 27) {\n        return 13;\n    }\n    if ($n == 28) {\n        return 13;\n    }\n    if ($n == 29) {\n        return 13;\n    }\n    if ($n == 30) {\n        return 13;\n    }\n    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp5vkkzx98.php on line 122\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    $fib = $\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpgdhb4_t6.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return 13;\n    }\n    if ($n == 8) {\n        return 13;\n    }\n    if ($n == 9) {\n        return 13;\n    }\n    if ($n == 10) {\n        return 13;\n    }\n    if ($n == 11) {\n        return 13;\n    }\n    if ($n == 12) {\n        return 13;\n    }\n    if ($n == 13) {\n        return 13;\n    }\n    if ($n == 14) {\n        return 13;\n    }\n    if ($n == 15) {\n        return 13;\n    }\n    if ($n == 16) {\n        return 13;\n    }\n    if ($n == 17) {\n        return 13;\n    }\n    if ($n == 18) {\n        return 13;\n    }\n    if ($n == 19) {\n        return 13;\n    }\n    if ($n == 20) {\n        return 13;\n    }\n    if ($n == 21) {\n        return 13;\n    }\n    if ($n == 22) {\n        return 13;\n    }\n    if ($n == 23) {\n        return 13;\n    }\n    if ($n == 24) {\n        return 13;\n    }\n    if ($n == 25) {\n        return 13;\n    }\n    if ($n == 26) {\n        return 13;\n    }\n    if ($n == 27) {\n        return 13;\n    }\n    if ($n == 28) {\n        return 13;\n    }\n    if ($n == 29) {\n        return 13;\n    }\n    if ($n == 30) {\n        return 13;\n    }\n    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp5vkkzx98.php on line 122\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $i = $fib;\n    while ($i % 2 === 0) {\n        $i /= 2;\n    }\n    while ($i % 3 === 0) {\n        $i /= 3;\n    }\n    while ($i % 5 === 0) {\n        $i /= 5;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpi85ii2h4.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n--;\n    $fib = prime_fib($n);\n    $fib2 = prime_fib($n);\n    $fib3 = prime_fib($n);\n    $fib4 = prime_fib($n);\n    $fib5 = prime_fib($n);\n    $fib6 = prime_fib($n);\n    $fib7 = prime_fib($n);\n    $fib8 = prime_fib($n);\n    $fib9 = prime_fib($n);\n    $fib10 = prime_fib($n);\n    $fib11 = prime_fib($n);\n    $fib12 = prime_fib($n);\n    $fib13 = prime_fib($n);\n    $fib14 = prime_fib($n);\n    $fib15 = prime_fib($n);\n    $fib16 = prime_fib($n);\n    $fib17 = prime_fib($n);\n    $fib18 = prime_fib($n);\n    $fib19 = prime_fib($n);\n    $fib20 = prime_fib($n);\n    $fib21 = prime_fib($n);\n    $fib22 = prime_fib($n);\n    $fib23 = prime_fib($n);\n    $fib24 = prime_fib($n);\n    $fib25 = prime_fib($n);\n    $fib26 = prime_fib($n);\n    $fib27 = prime_fib($n);\n    $fib28 = prime_fib($n);\n    $fib29 = prime_fib($n);\n    $fib30 = prime_fib($n);\n    $fib31 = prime_fib($n);\n    $fib32 = prime_fib($n);\n    $fib33 = prime_fib($n);\n    $fib34 = prime_fib($n);\n    $fib35 = prime_fib($n);\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmpjtdj897s.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxa8xu9df.php:39\nStack trace:\n#0 /tmp/tmpxa8xu9df.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpxa8xu9df.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 1);\n    }\n    var $fib = prime_fib($n - 2);\n    var $fib_plus_1 = prime_fib($n - 1);\n    var $fib_plus_2 = prime_fib($n);\n    var $fib_plus_3 = prime_fib($n + 1);\n    var $fib_plus_4 = prime_fib($n + 2);\n    var $fib_plus_5 = prime_fib($n + 3);\n    var $fib_plus_6 = prime_fib($n + 4);\n    var $fib_plus_7 = prime_fib($n + 5);\n    var $fib_plus_8 = prime_fib($n + 6);\n    var $fib_plus_9 = prime_fib($n + 7);\n    var $fib_plus_10 = prime_fib($n + 8);\n    var $fib_plus_11 = prime_fib($n + 9);\n    var $fib_plus_12 = prime_fib($n + 10);\n    var $fib_plus_13 = prime_fib($n + 11);\n    var $fib_plus_14 = prime_fib($n + 12);\n    var $fib_plus_15 = prime_fib($n + 13);\n    var $fib_plus_16 = prime_fib($n + 14);\n    var $fib_plus_17 = prime_fib($n + 15);\n    var $fib_plus_18 = prime_fib($n + 16);\n    var $fib_plus_19 = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmplwe3tasf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    let $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    let $prime = is_prime($fib);\n    return $prime ? $fib : prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmpmmh4nefn.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $c - $b;\n    $f = $e - $d;\n    $g = $f - $a;\n    $h = $g - $b;\n    $i = $h - $c;\n    $j = $i - $d;\n    $k = $j - $e;\n    $l = $k - $f;\n    $m = $l - $g;\n    $n += 1;\n    $p = $m + $h;\n    $q = $p - $h;\n    $r = $q - $g;\n    $s = $r - $f;\n    $t = $s - $e;\n    $u = $t - $d;\n    $v = $u - $c;\n    $w = $v - $b;\n    $x = $w - $a;\n    $y = $x - $j;\n    $z = $y - $i;\n    $zz = $z - $k;\n    $zzz = $zz - $l;\n    $zzzz = $zzz - $m;\n    $zzzzz = $zzzz - $p;\n    $zzzzzz = $zzzzz - $q;\n    $zzzzzzz = $zzzzzz - $r;\n    $zzzzzzzz = $zzzzzzz - $s;\n    $zzzzzzzzz = $zzzzzzzz - $t;\n    $zzzzzzzzzz = $zzzzzzzzz - $u;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $v;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz - $w;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $x;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp26l5m5su.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = $fib % 2 ? false : true;\n    $fib = $fib + 1;\n    while (!$prime) {\n        $prime = $fib % 2 ? false : true;\n        $fib = $fib + 1;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpth2rw717.php:32\nStack trace:\n#0 /tmp/tmpth2rw717.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpth2rw717.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptq_ozimq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $i = $n - 3;\n    while ($i >= 0 && $fib % $i != 0) {\n        $i--;\n    }\n    if ($i < 0) {\n        return $fib;\n    }\n    return prime_fib($i) * $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoz9m5yq5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a - $b;\n    $e = $c + $d;\n    $f = $c - $d;\n    $g = $e + $f;\n    $h = $e - $f;\n    $i = $g + $h;\n    $j = $g - $h;\n    $k = $i + $j;\n    $l = $i - $j;\n    $m = $k + $l;\n    $n += 1;\n    $o = $m * $m;\n    $p = $m * $o;\n    $q = $m * $p;\n    $r = $m * $q;\n    $s = $m * $r;\n    $t = $m * $s;\n    $u = $m * $t;\n    $v = $m * $u;\n    $w = $m * $v;\n    $x = $m * $w;\n    $y = $m * $x;\n    $z = $m * $y;\n    $p = $m * $z;\n    $p += $n;\n    $q = $m * $p;\n    $q += $n;\n    $r = $m * $q;\n    $r += $n;\n    $s = $m * $r;\n    $s += $n;\n    $t = $m * $s;\n    $t += $n;\n    $u = $m * $t;\n    $u += $n;\n    $v = $m * $u;\n    $v += $n;\n    $w = $m * $v;\n    $w += $n;\n    $x = $m * $w;\n    $x += $n;\n    $y = $m * $x;\n    $y += $n;\n    $z = $m * $y;\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp7y5r39jw.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    let $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    let $i = $fib;\n    while (!isPrime($i)) {\n        $i += $fib;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmp3boj6a1h.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $fib_sq = Math.sqrt($fib);\n    if ($fib_sq % 2 == 0) {\n        return $fib;\n    }\n    return $fib + 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjxtninmd.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    let $fib = [2, 3];\n    for (let $i = 4; $i <= $n; $i++) {\n        $fib.push($fib[$i - 2] + $fib[$i - 1]);\n    }\n    let $i = $fib.length - 1;\n    while ($i > 0 && $fib[$i] % 2 === 0) {\n        $i--;\n    }\n    return $fib[$i];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmpkd7ku1lj.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmphfuppern.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $i = $fib + 1;\n    while (!is_prime($i)) {\n        $i += $fib;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp26g_nwf4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    if ($fib % 2 == 0) {\n        return $fib;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejmamt3t.php:29\nStack trace:\n#0 /tmp/tmpejmamt3t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpejmamt3t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $f\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpo43utxri.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1);\n    $fib_prev = prime_fib($n - 2);\n    $fib_next = prime_fib($n - 3);\n    $fib_next_next = prime_fib($n - 4);\n    $fib_next_next_next = prime_fib($n - 5);\n    $fib_next_next_next_next = prime_fib($n - 6);\n    $fib_next_next_next_next_next = prime_fib($n - 7);\n    $fib_next_next_next_next_next_next = prime_fib($n - 8);\n    $fib_next_next_next_next_next_next_next = prime_fib($n - 9);\n    $fib_next_next_next_next_next_next_next_next = prime_fib($n - 10);\n    $fib_next_next_next_next_next_next_next_next_next = prime_fib($n - 11);\n    $fib_next_next_next_next_next_next_next_next_next_next = prime_fib($n - 12);\n    $fib_next_next_next_next_next_next_next_next_next_next_next = prime_fib($n - 13);\n    $fib_next_next_next_next_next_next_next_next_next_next_next_next = prime_fib($n - 14);\n    $fib_next_next_next_next_next_next_next_next_next_next_next_next_next = prime_fib($n - 15);\n    $fib_next_next_next_next_next_next_next_next_next_next_next_next_next_next = prime_fib($n - 16);\n    $fib_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next = prime_fib($n -\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsta6kc8w.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 5 == 0) {\n        return prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmob60bpx.php:46\nStack trace:\n#0 /tmp/tmpmob60bpx.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpmob60bpx.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptq_ozimq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    $p = $m - $b;\n    $q = $p + $a;\n    $r = $q - $a;\n    $s = $r + $b;\n    $t = $s - $b;\n    $u = $t + $a;\n    $v = $u - $a;\n    $w = $v + $b;\n    $x = $w - $b;\n    $y = $x + $a;\n    $z = $y - $a;\n    $zz = $z + $b;\n    $zzz = $zz - $b;\n    $zzzz = $zzz + $a;\n    $zzzzz = $zzzz - $a;\n    $zzzzzz = $zzzzz + $b;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz + $a;\n    $zzzzzzzzz = $zzzzzzzz - $a;\n    $zzzzzzzzzz = $zzzzzzzzz + $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp0zlcf9re.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 1) {\n        return null;\n    }\n    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $i = $fib;\n    while (!is_prime($i)) {\n        $i += prime_fib($n - 1);\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpa1fprzon.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpacd81vfo.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = $fib % 2 ? false : true;\n    return $prime ? $fib : $fib + 2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc2_rqw4.php:27\nStack trace:\n#0 /tmp/tmpjc2_rqw4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjc2_rqw4.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = $fib % 2 ? false : true;\n    $fib = $fib + 1;\n    while (!$prime) {\n        $prime = $fib % 2 ? false : true;\n        $fib = $fib + 1;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpth2rw717.php:32\nStack trace:\n#0 /tmp/tmpth2rw717.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpth2rw717.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpacd81vfo.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i % 2 == 0) {\n        $i /= 2;\n    }\n    while ($i % 3 == 0) {\n        $i /= 3;\n    }\n    while ($i % 5 == 0) {\n        $i /= 5;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6qvmeyd.php:36\nStack trace:\n#0 /tmp/tmpv6qvmeyd.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpv6qvmeyd.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $c + $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzy8454yl.php:36\nStack trace:\n#0 /tmp/tmpzy8454yl.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzy8454yl.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    $prime = is_prime($fib);\n    return $prime ? $fib : prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9eltjgg.php:28\nStack trace:\n#0 /tmp/tmpu9eltjgg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpu9eltjgg.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwdrgfs15.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    let $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    let $is_prime = is_prime($fib);\n    if ($is_prime) {\n        return $fib;\n    }\n    return prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmpektir4gd.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpe18dx6bd.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = prime_fib($n - 3);\n    $e = $d + $c;\n    if ($e % 2 == 0) {\n        return $e;\n    }\n    $f = prime_fib($n - 4);\n    $g = $f + $e;\n    if ($g % 2 == 0) {\n        return $g;\n    }\n    $h = prime_fib($n - 5);\n    $i = $h + $g;\n    if ($i % 2 == 0) {\n        return $i;\n    }\n    $j = prime_fib($n - 6);\n    $k = $j + $i;\n    if ($k % 2 == 0) {\n        return $k;\n    }\n    $l = prime_fib($n - 7);\n    $m = $l + $k;\n    if ($m % 2 == 0) {\n        return $m;\n    }\n    $n = prime_fib($n - 8);\n    $o = $n + $m;\n    if ($o % 2 == 0) {\n        return $o;\n    }\n    $p = prime_fib($n - 9);\n    $q = $p + $o;\n    if ($q % 2 == 0) {\n        return $q;\n    }\n    $r = prime_fib($n - 10);\n    $s = $r + $q;\n    if ($s % 2 == 0) {\n        return $s;\n    }\n    $t = prime_fib($n - 11);\n    $u = $t + $s;\n    if ($u % 2 == 0) {\n        return $u;\n    }\n    $v = prime_fib($n - 12);\n    $w = $v + $u;\n    if ($w %\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpwztqrr_m.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $c - $b;\n    $f = $e + $b;\n    $g = $f - $a;\n    $h = $f - $b;\n    $i = $h + $a;\n    $j = $i - $b;\n    $k = $i - $c;\n    $l = $k + $b;\n    $m = $l - $a;\n    $n = $m + $c;\n    $o = $n - $b;\n    $p = $o + $a;\n    $q = $p - $c;\n    $r = $q + $b;\n    $s = $r - $a;\n    $t = $s + $c;\n    $u = $t - $b;\n    $v = $u + $a;\n    $w = $v - $c;\n    $x = $w + $b;\n    $y = $x - $a;\n    $z = $y + $c;\n    $zz = $z - $b;\n    $zzz = $zz + $a;\n    $zzzz = $zzz - $c;\n    $zzzzz = $zzzz + $b;\n    $zzzzzz = $zzzzz - $a;\n    $zzzzzzz = $zzzzzz + $c;\n    $zzzzzzzz = $zzzzzzz - $b;\n    $zzzzzzzzz = $zzzzzzzz + $a;\n    $zzzzzzzzzz = $zzzzzzzzz - $c;\n    $zzzzzzzzzzz = $zzzzzzzzzz + $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz + $c;\n    $zzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpyk3nilmd.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptq_ozimq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $b;\n    $e = $d + $b;\n    $f = $e + $b;\n    $g = $f + $b;\n    $h = $g + $b;\n    $i = $h + $b;\n    $j = $i + $b;\n    $k = $j + $b;\n    $l = $k + $b;\n    $m = $l + $b;\n    $n = $m + $b;\n    $o = $n + $b;\n    $p = $o + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x = $w + $b;\n    $y = $x + $b;\n    $z = $y + $b;\n    $aa = $z + $b;\n    $bb = $aa + $b;\n    $cc = $bb + $b;\n    $dd = $cc + $b;\n    $ee = $dd + $b;\n    $ff = $ee + $b;\n    $gg = $ff + $b;\n    $hh = $gg + $b;\n    $ii = $hh + $b;\n    $jj = $ii + $b;\n    $kk = $jj + $b;\n    $ll = $kk + $b;\n    $mm = $ll + $b;\n    $nn = $mm + $b;\n    $oo = $nn + $b;\n    $pp = $oo + $b;\n    $qq = $pp + $b;\n    $rr = $qq + $b;\n    $ss =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp2c_9w94e.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 1) {\n        return false;\n    }\n    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwgeq42o9.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 1) {\n        return false;\n    }\n    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwgeq42o9.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 1) {\n        return false;\n    }\n    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab = prime_fib($n - 28);\n    var $ac = prime_fib($n - 29);\n    var $ad = prime_fib\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpuxl7y938.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    $p = $m - $b;\n    $q = $p + $a;\n    $r = $q - $a;\n    $s = $r + $b;\n    $t = $s - $b;\n    $u = $t + $a;\n    $v = $u - $a;\n    $w = $v + $b;\n    $x = $w - $b;\n    $y = $x + $a;\n    $z = $y - $a;\n    $zz = $z + $b;\n    $zzz = $zz - $b;\n    $zzzz = $zzz + $a;\n    $zzzzz = $zzzz - $a;\n    $zzzzzz = $zzzzz + $b;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz + $a;\n    $zzzzzzzzz = $zzzzzzzz - $a;\n    $zzzzzzzzzz = $zzzzzzzzz + $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp0zlcf9re.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    } else if ($n === 2) {\n        return 3;\n    } else if ($n === 3) {\n        return 5;\n    } else {\n        let $a = prime_fib($n - 1);\n        let $b = prime_fib($n - 2);\n        let $c = prime_fib($n - 3);\n        let $d = $a + $b;\n        let $e = $d + $c;\n        let $f = $e + $a;\n        return $f;\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmp3_ojyntl.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while (isPrime($i)) {\n        $i += $fib;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdm10fdx.php:30\nStack trace:\n#0 /tmp/tmpsdm10fdx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsdm10fdx.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $n;\n    }\n    $prime = false;\n    for ($i = 0; $i < 1000000; $i++) {\n        if ($fib % $i == 0) {\n            $prime = true;\n            break;\n        }\n    }\n    if (!$prime) {\n        return $n;\n    }\n    return prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7jbgeu9.php:40\nStack trace:\n#0 /tmp/tmpq7jbgeu9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpq7jbgeu9.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpilsbi4c9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmpsgzkvw9o.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $c = prime_fib($n - 2);\n    $d = $a + $c;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    $d = prime_fib($n - 3);\n    $e = $b + $d;\n    if ($e % 2 == 0) {\n        return $e;\n    }\n    $e = prime_fib($n - 4);\n    return $c + $e;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpognurnxq.php:43\nStack trace:\n#0 /tmp/tmpognurnxq.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpognurnxq.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return 13;\n    }\n    if ($n == 8) {\n        return 13;\n    }\n    if ($n == 9) {\n        return 13;\n    }\n    if ($n == 10) {\n        return 13;\n    }\n    if ($n == 11) {\n        return 13;\n    }\n    if ($n == 12) {\n        return 13;\n    }\n    if ($n == 13) {\n        return 13;\n    }\n    if ($n == 14) {\n        return 13;\n    }\n    if ($n == 15) {\n        return 13;\n    }\n    if ($n == 16) {\n        return 13;\n    }\n    if ($n == 17) {\n        return 13;\n    }\n    if ($n == 18) {\n        return 13;\n    }\n    if ($n == 19) {\n        return 13;\n    }\n    if ($n == 20) {\n        return 13;\n    }\n    if ($n == 21) {\n        return 13;\n    }\n    if ($n == 22) {\n        return 13;\n    }\n    if ($n == 23) {\n        return 13;\n    }\n    if ($n == 24) {\n        return 13;\n    }\n    if ($n == 25) {\n        return 13;\n    }\n    if ($n == 26) {\n        return 13;\n    }\n    if ($n == 27) {\n        return 13;\n    }\n    if ($n == 28) {\n        return 13;\n    }\n    if ($n == 29) {\n        return 13;\n    }\n    if ($n == 30) {\n        return 13;\n    }\n    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp5vkkzx98.php on line 122\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    $fib = $fib + 2;\n    $fib = $fib % 1000000;\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbz9vaw7.php:29\nStack trace:\n#0 /tmp/tmpfbz9vaw7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfbz9vaw7.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $c + $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzy8454yl.php:36\nStack trace:\n#0 /tmp/tmpzy8454yl.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzy8454yl.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i % 2 == 0) {\n        $i /= 2;\n    }\n    while ($i % 3 == 0) {\n        $i /= 3;\n    }\n    while ($i % 5 == 0) {\n        $i /= 5;\n    }\n    if ($i == 1) {\n        return $fib;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj64xkn_8.php:39\nStack trace:\n#0 /tmp/tmpj64xkn_8.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpj64xkn_8.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = $a + $b;\n    let $d = $c + $b;\n    let $e = $d + $b;\n    let $f = $e + $b;\n    let $g = $f + $b;\n    let $h = $g + $b;\n    let $i = $h + $b;\n    let $j = $i + $b;\n    let $k = $j + $b;\n    let $l = $k + $b;\n    let $m = $l + $b;\n    let $n = $m + $b;\n    let $o = $n + $b;\n    let $p = $o + $b;\n    let $q = $p + $b;\n    let $r = $q + $b;\n    let $s = $r + $b;\n    let $t = $s + $b;\n    let $u = $t + $b;\n    let $v = $u + $b;\n    let $w = $v + $b;\n    let $x = $w + $b;\n    let $y = $x + $b;\n    let $z = $y + $b;\n    let $aa = $z + $b;\n    let $ab = $aa + $b;\n    let $ac = $ab + $b;\n    let $ad = $ac + $b;\n    let $ae = $ad + $b;\n    let $af = $ae + $b;\n    let $ag = $af + $b;\n    let $ah = $ag + $b;\n    let $ai = $ah + $b;\n    let $aj = $ai + $b;\n    let $ak = $aj + $b;\n    let $al = $ak + $b;\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmpzinzxfjd.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab = prime_fib($n - 28);\n    var $ac = prime_fib($n - 29);\n    var $ad = prime_fib($n - 30);\n    var $ae = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpk_8uewo2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = prime_fib($n - 3);\n    $e = $d + $c;\n    if ($e % 2 == 0) {\n        return $e;\n    }\n    $f = prime_fib($n - 4);\n    $g = $f + $e;\n    if ($g % 2 == 0) {\n        return $g;\n    }\n    $h = prime_fib($n - 5);\n    $i = $h + $g;\n    if ($i % 2 == 0) {\n        return $i;\n    }\n    $j = prime_fib($n - 6);\n    $k = $j + $i;\n    if ($k % 2 == 0) {\n        return $k;\n    }\n    $l = prime_fib($n - 7);\n    $m = $l + $k;\n    if ($m % 2 == 0) {\n        return $m;\n    }\n    $n = prime_fib($n - 8);\n    $o = $n + $m;\n    if ($o % 2 == 0) {\n        return $o;\n    }\n    $p = prime_fib($n - 9);\n    $q = $p + $o;\n    if ($q % 2 == 0) {\n        return $q;\n    }\n    $r = prime_fib($n - 10);\n    $s = $r + $q;\n    if ($s % 2 == 0) {\n        return $s;\n    }\n    $t = prime_fib($n - 11);\n    $u = $t + $s;\n    if ($u % 2 == 0) {\n        return $u;\n    }\n    $v = prime_fib($n - 12);\n    $w = $v + $u;\n    if ($w %\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpwztqrr_m.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a * $b;\n    $e = $c + $d;\n    $f = $c * $d;\n    $g = $e + $f;\n    $h = $e - $f;\n    $i = $g - $h;\n    $j = $g + $h;\n    $k = $i + $j;\n    $l = $i * $j;\n    $m = $k + $l;\n    $n += 1;\n    $o = $m - $l;\n    $p = $m + $l;\n    $q = $p + $o;\n    $r = $p - $o;\n    $s = $q - $r;\n    $t = $q + $r;\n    $u = $s + $t;\n    $v = $s * $t;\n    $w = $u + $v;\n    $x = $u - $v;\n    $y = $w - $x;\n    $z = $w + $x;\n    $prime = $z + $y;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbf_4ik4_.php:53\nStack trace:\n#0 /tmp/tmpbf_4ik4_.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpbf_4ik4_.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i % 2 == 0) {\n        $i = $i / 2;\n    }\n    while ($i % 3 == 0) {\n        $i = $i / 3;\n    }\n    while ($i % 5 == 0) {\n        $i = $i / 5;\n    }\n    while ($i % 7 == 0) {\n        $i = $i / 7;\n    }\n    while ($i % 11 == 0) {\n        $i = $i / 11;\n    }\n    while ($i % 13 == 0) {\n        $i = $i / 13;\n    }\n    while ($i % 17 == 0) {\n        $i = $i / 17;\n    }\n    while ($i % 19 == 0) {\n        $i = $i / 19;\n    }\n    while ($i % 23 == 0) {\n        $i = $i / 23;\n    }\n    while ($i % 29 == 0) {\n        $i = $i / 29;\n    }\n    while ($i % 31 == 0) {\n        $i = $i / 31;\n    }\n    while ($i % 37 == 0) {\n        $i = $i / 37;\n    }\n    while ($i % 41 == 0) {\n        $i = $i / 41;\n    }\n    while ($i % 43 == 0) {\n        $i = $i / 43;\n    }\n    while ($i % 47 == 0) {\n        $i = $i / 47;\n    }\n    while ($i % 53 == 0) {\n        $i = $i / 53;\n    }\n    while ($i % 59 == 0) {\n        $i = $i / 59;\n    }\n    while ($i % 61 == 0) {\n        $i = $i / 61;\n    }\n    while ($i % 67 == 0) {\n        $i = $i / 67;\n    }\n    while ($i\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoz2a0ohj.php on line 77\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1);\n    $fib_prev = prime_fib($n - 2);\n    $fib_next = prime_fib($n - 3);\n    $fib_sum = $fib + $fib_prev;\n    $fib_sum_next = $fib_sum + $fib_next;\n    $fib_sum_next_next = $fib_sum_next + $fib_next;\n    if ($fib_sum_next_next % 2 == 0) {\n        return $fib_sum_next_next;\n    }\n    return $fib_sum_next;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5am627y.php:34\nStack trace:\n#0 /tmp/tmpu5am627y.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpu5am627y.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpacd81vfo.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    return $c + 2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp5a6npzhg.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    $o = $m - $b;\n    $p = $o + $a;\n    $q = $p - $a;\n    $r = $q + $b;\n    $s = $r - $b;\n    $t = $s + $a;\n    $u = $t - $a;\n    $v = $u + $b;\n    $w = $v - $b;\n    $x = $w + $a;\n    $y = $x - $a;\n    $z = $y + $b;\n    $zz = $z - $b;\n    $zzz = $zz + $a;\n    $zzzz = $zzz - $a;\n    $zzzzz = $zzzz + $b;\n    $zzzzzz = $zzzzz - $b;\n    $zzzzzzz = $zzzzzz + $a;\n    $zzzzzzzz = $zzzzzzz - $a;\n    $zzzzzzzzz = $zzzzzzzz + $b;\n    $zzzzzzzzzz = $zzzzzzzzz - $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz + $a;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz + $b;\n    $zz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpzhwd3tfv.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return 13;\n    }\n    if ($n == 8) {\n        return 13;\n    }\n    if ($n == 9) {\n        return 13;\n    }\n    if ($n == 10) {\n        return 13;\n    }\n    if ($n == 11) {\n        return 13;\n    }\n    if ($n == 12) {\n        return 13;\n    }\n    if ($n == 13) {\n        return 13;\n    }\n    if ($n == 14) {\n        return 13;\n    }\n    if ($n == 15) {\n        return 13;\n    }\n    if ($n == 16) {\n        return 13;\n    }\n    if ($n == 17) {\n        return 13;\n    }\n    if ($n == 18) {\n        return 13;\n    }\n    if ($n == 19) {\n        return 13;\n    }\n    if ($n == 20) {\n        return 13;\n    }\n    if ($n == 21) {\n        return 13;\n    }\n    if ($n == 22) {\n        return 13;\n    }\n    if ($n == 23) {\n        return 13;\n    }\n    if ($n == 24) {\n        return 13;\n    }\n    if ($n == 25) {\n        return 13;\n    }\n    if ($n == 26) {\n        return 13;\n    }\n    if ($n == 27) {\n        return 13;\n    }\n    if ($n == 28) {\n        return 13;\n    }\n    if ($n == 29) {\n        return 13;\n    }\n    if ($n == 30) {\n        return 13;\n    }\n    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp5vkkzx98.php on line 122\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c > $n) {\n        return $n;\n    }\n    $d = $c + $b;\n    if ($d > $n) {\n        return $n;\n    }\n    $e = $d + $b;\n    if ($e > $n) {\n        return $n;\n    }\n    $f = $e + $b;\n    if ($f > $n) {\n        return $n;\n    }\n    $g = $f + $b;\n    if ($g > $n) {\n        return $n;\n    }\n    $h = $g + $b;\n    if ($h > $n) {\n        return $n;\n    }\n    $i = $h + $b;\n    if ($i > $n) {\n        return $n;\n    }\n    $j = $i + $b;\n    if ($j > $n) {\n        return $n;\n    }\n    $k = $j + $b;\n    if ($k > $n) {\n        return $n;\n    }\n    $l = $k + $b;\n    if ($l > $n) {\n        return $n;\n    }\n    $m = $l + $b;\n    if ($m > $n) {\n        return $n;\n    }\n    $n += 1;\n    return $m;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxgtd6wz.php:72\nStack trace:\n#0 /tmp/tmptxgtd6wz.php(84): test()\n#1 {main}\n  thrown in /tmp/tmptxgtd6wz.php on line 72\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $c + $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip3ztlbo.php:35\nStack trace:\n#0 /tmp/tmpip3ztlbo.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpip3ztlbo.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 10;\n    if ($fib == 0 || $fib == 1 || $fib == 4 || $fib == 7 || $fib == 8 || $fib == 9) {\n        return $fib;\n    }\n    return prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3pj0zixi.php:30\nStack trace:\n#0 /tmp/tmp3pj0zixi.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3pj0zixi.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    let $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    let $i = $fib;\n    while ($i % 2 === 0) {\n        $i = $i / 2;\n    }\n    while ($i % 3 === 0) {\n        $i = $i / 3;\n    }\n    while ($i % 5 === 0) {\n        $i = $i / 5;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmp833jkwe8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = $fib % 2 ? false : true;\n    return $prime ? $fib : prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprzqdy625.php:27\nStack trace:\n#0 /tmp/tmprzqdy625.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprzqdy625.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    $prime = $n;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuna0x6i4.php:41\nStack trace:\n#0 /tmp/tmpuna0x6i4.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpuna0x6i4.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i < $n) {\n        $i += $fib;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoi8h0uxn.php:30\nStack trace:\n#0 /tmp/tmpoi8h0uxn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoi8h0uxn.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptq_ozimq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d - $b;\n    $f = $e - $a;\n    $g = $f - $b;\n    $h = $g - $a;\n    $i = $h - $b;\n    $j = $i - $a;\n    $k = $j - $b;\n    $l = $k - $a;\n    $m = $l - $b;\n    $n += 1;\n    $p = $m + $b;\n    $q = $p - $a;\n    $r = $q - $b;\n    $s = $r - $a;\n    $t = $s - $b;\n    $u = $t - $a;\n    $v = $u - $b;\n    $w = $v - $a;\n    $x = $w - $b;\n    $y = $x - $a;\n    $z = $y - $b;\n    $zz = $z - $a;\n    $zzz = $zz - $b;\n    $zzzz = $zzz - $a;\n    $zzzzz = $zzzz - $b;\n    $zzzzzz = $zzzzz - $a;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz - $a;\n    $zzzzzzzzz = $zzzzzzzz - $b;\n    $zzzzzzzzzz = $zzzzzzzzz - $a;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $b;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpglaywtnr.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    $prime = $n;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\n    $prime += 1;\n    $prime -= 1;\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp0tsf2id0.php on line 96\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    let $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    let $is_prime = is_prime($fib);\n    if ($is_prime) {\n        return $fib;\n    }\n    return prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmp9zmh4jlu.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $a;\n    $f = $e - $b;\n    $g = $f + $b;\n    $h = $g - $a;\n    $i = $h + $a;\n    $j = $i - $b;\n    $k = $j + $b;\n    $l = $k - $a;\n    $m = $l + $a;\n    $n += 1;\n    $p = $m - $b;\n    $q = $p + $b;\n    $r = $q - $a;\n    $s = $r + $a;\n    $t = $s - $b;\n    $u = $t + $b;\n    $v = $u - $a;\n    $w = $v + $a;\n    $x = $w - $b;\n    $y = $x + $b;\n    $z = $y - $a;\n    $zz = $z + $a;\n    $zzz = $zz - $b;\n    $zzzz = $zzz + $b;\n    $zzzzz = $zzzz - $a;\n    $zzzzzz = $zzzzz + $a;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz + $b;\n    $zzzzzzzzz = $zzzzzzzz - $a;\n    $zzzzzzzzzz = $zzzzzzzzz + $a;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $b;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpve4vuerd.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    $prime = $n;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuna0x6i4.php:41\nStack trace:\n#0 /tmp/tmpuna0x6i4.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpuna0x6i4.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    $p = $m - $b;\n    $q = $p + $a;\n    $r = $q - $a;\n    $s = $r + $b;\n    $t = $s - $b;\n    $u = $t + $a;\n    $v = $u - $a;\n    $w = $v + $b;\n    $x = $w - $b;\n    $y = $x + $a;\n    $z = $y - $a;\n    $zz = $z + $b;\n    $zzz = $zz - $b;\n    $zzzz = $zzz + $a;\n    $zzzzz = $zzzz - $a;\n    $zzzzzz = $zzzzz + $b;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz + $a;\n    $zzzzzzzzz = $zzzzzzzz - $a;\n    $zzzzzzzzzz = $zzzzzzzzz + $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp0zlcf9re.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $i = $fib;\n    while (!is_prime($i)) {\n        $i++;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4sy5rthh.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpacd81vfo.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $fib_n = $fib;\n    var $fib_n_1 = $fib - 1;\n    var $fib_n_2 = $fib - 2;\n    var $fib_n_3 = $fib - 3;\n    var $fib_n_4 = $fib - 4;\n    var $fib_n_5 = $fib - 5;\n    var $fib_n_6 = $fib - 6;\n    var $fib_n_7 = $fib - 7;\n    var $fib_n_8 = $fib - 8;\n    var $fib_n_9 = $fib - 9;\n    var $fib_n_10 = $fib - 10;\n    var $fib_n_11 = $fib - 11;\n    var $fib_n_12 = $fib - 12;\n    var $fib_n_13 = $fib - 13;\n    var $fib_n_14 = $fib - 14;\n    var $fib_n_15 = $fib - 15;\n    var $fib_n_16 = $fib - 16;\n    var $fib_n_17 = $fib - 17;\n    var $fib_n_18 = $fib - 18;\n    var $fib_n_19 = $fib - 19;\n    var $fib_n_20 = $fib - 20;\n    var $fib_n_21 = $fib - 21;\n    var $fib_n_22 = $fib\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptovk3psc.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxa8xu9df.php:39\nStack trace:\n#0 /tmp/tmpxa8xu9df.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpxa8xu9df.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $i = $n;\n    while ($i > 2) {\n        if ($i % 2 == 0) {\n            $i = $i / 2;\n        } else {\n            $i = $i * 3 + 1;\n        }\n        if ($i == $fib) {\n            return $fib;\n        }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4kz0hti_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    let $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    let $i = $n - 3;\n    while ($i >= 0) {\n        $fib += prime_fib($i);\n        $i -= 2;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmpkyi_ug7k.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 1);\n    }\n    var $a = prime_fib($n - 2);\n    var $b = prime_fib($n - 1);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpnuga4yr6.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    return $c + 2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpdurqu30t.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7396xu8.php:29\nStack trace:\n#0 /tmp/tmpu7396xu8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpu7396xu8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvuiwdqcj.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $fib_sqrt = Math.sqrt($fib);\n    if ($fib_sqrt % 2 == 0) {\n        return $fib;\n    }\n    return $fib + 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3q7cpzrz.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 1) {\n        return false;\n    }\n    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    if ($n == 6) {\n        return 233;\n    }\n    if ($n == 7) {\n        return 1361;\n    }\n    if ($n == 8) {\n        return 4181;\n    }\n    if ($n == 9) {\n        return 9683;\n    }\n    if ($n == 10) {\n        return 34657;\n    }\n    if ($n == 11) {\n        return 123661;\n    }\n    if ($n == 12) {\n        return 514229;\n    }\n    if ($n == 13) {\n        return 1715011;\n    }\n    if ($n == 14) {\n        return 5362411;\n    }\n    if ($n == 15) {\n        return 17471201;\n    }\n    if ($n == 16) {\n        return 57748011;\n    }\n    if ($n == 17) {\n        return 178769011;\n    }\n    if ($n == 18) {\n        return 599480111;\n    }\n    if ($n == 19) {\n        return 1799160111;\n    }\n    if ($n == 20) {\n        return 6094740111;\n    }\n    if ($n == 21) {\n        return 18011601111;\n    }\n    if ($n == 22) {\n        return 61947401111;\n    }\n    if ($n == 23) {\n        return 181116011111;\n    }\n    if ($n == 24) {\n        return 629474011111;\n    }\n    if ($n == 25) {\n        return 1823160111111;\n    }\n    if ($n == 26) {\n        return 63947401\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \";\" in /tmp/tmpdogts3q6.php on line 94\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    $o = $m - $b;\n    $p = $o + $a;\n    $q = $p - $a;\n    $r = $q + $b;\n    $s = $r - $b;\n    $t = $s + $a;\n    $u = $t - $a;\n    $v = $u + $b;\n    $w = $v - $b;\n    $x = $w + $a;\n    $y = $x - $a;\n    $z = $y + $b;\n    $zz = $z - $b;\n    $zzz = $zz + $a;\n    $zzzz = $zzz - $a;\n    $zzzzz = $zzzz + $b;\n    $zzzzzz = $zzzzz - $b;\n    $zzzzzzz = $zzzzzz + $a;\n    $zzzzzzzz = $zzzzzzz - $a;\n    $zzzzzzzzz = $zzzzzzzz + $b;\n    $zzzzzzzzzz = $zzzzzzzzz - $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz + $a;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz + $b;\n    $zz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpzhwd3tfv.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $a;\n    $e = $d + $b;\n    $f = $e + $a;\n    $g = $f + $b;\n    $h = $g + $a;\n    $i = $h + $b;\n    $j = $i + $a;\n    $k = $j + $b;\n    $l = $k + $a;\n    $m = $l + $b;\n    $n = $m + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n = $n + $b;\n    $n = $n + $a;\n    $n =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpz97sv14c.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var $dd = prime_fib($n - 30);\n    var $ee = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4ld6f5g_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    if ($fib % 2 == 0) {\n        return $fib;\n    }\n    return prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmpq1cii.php:29\nStack trace:\n#0 /tmp/tmptmpq1cii.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptmpq1cii.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $a - $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d8kkkx7.php:35\nStack trace:\n#0 /tmp/tmp1d8kkkx7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1d8kkkx7.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptq_ozimq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var $dd = prime_fib($n - 30);\n    var $ee = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp5smau3c2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = $fib % 2 ? false : true;\n    $fib = $fib + 1;\n    while (!$prime) {\n        $prime = $fib % 2 ? false : true;\n        $fib = $fib + 1;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpth2rw717.php:32\nStack trace:\n#0 /tmp/tmpth2rw717.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpth2rw717.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    return $c + 2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpenqw4j5n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab = prime_fib($n - 28);\n    var $ac = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpixwauwvu.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $fib = prime_fib($n - 1);\n    $fib += prime_fib($n - 2);\n    $fib -= $n;\n    $fib += $n;\n    $fib -= prime_fib($n - 1);\n    $fib -= prime_fib($n - 2);\n    $fib += prime_fib($n - 3);\n    $fib -= prime_fib($n - 4);\n    $fib -= prime_fib($n - 5);\n    $fib += prime_fib($n - 6);\n    $fib -= prime_fib($n - 7);\n    $fib -= prime_fib($n - 8);\n    $fib += prime_fib($n - 9);\n    $fib -= prime_fib($n - 10);\n    $fib -= prime_fib($n - 11);\n    $fib += prime_fib($n - 12);\n    $fib -= prime_fib($n - 13);\n    $fib -= prime_fib($n - 14);\n    $fib += prime_fib($n - 15);\n    $fib -= prime_fib($n - 16);\n    $fib -= prime_fib($n - 17);\n    $fib += prime_fib($n - 18);\n    $fib -= prime_fib($n - 19);\n    $fib -= prime_fib($n - 20);\n    $fib += prime_fib($n - 21);\n    $fib -= prime_fib($n - 22);\n    $fib -= prime_fib($n - 23);\n    $fib += prime_fib($n - 24);\n    $fib -= prime_fib($n - 25);\n    $fib -= prime_fib($n - 26);\n    $fib += prime_fib($n - 27);\n    $fib -= prime_fib($n - 28);\n    $fib -= prime_fib($n - 29);\n    $fib\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpwe047i04.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var $dd = prime_fib($n - 30);\n    var $ee = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4ld6f5g_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $a - $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqh82vhw.php:36\nStack trace:\n#0 /tmp/tmpcqh82vhw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcqh82vhw.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $c - $b;\n    $f = $e + $b;\n    $g = $f - $a;\n    $h = $f - $b;\n    $i = $h + $a;\n    $j = $i - $b;\n    $k = $i - $a;\n    $l = $k + $b;\n    $m = $l - $b;\n    $n += 1;\n    $p = $m + $a;\n    $q = $p - $b;\n    $r = $p - $a;\n    $s = $r + $b;\n    $t = $s - $b;\n    $u = $t + $a;\n    $v = $u - $b;\n    $w = $v + $b;\n    $x = $w - $a;\n    $y = $x + $b;\n    $z = $y - $b;\n    $zz = $z + $a;\n    $zzz = $zz - $b;\n    $zzzz = $zzz + $b;\n    $zzzzz = $zzzz - $a;\n    $zzzzzz = $zzzzz + $b;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz + $a;\n    $zzzzzzzzz = $zzzzzzzz - $b;\n    $zzzzzzzzzz = $zzzzzzzzz + $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $a;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $b;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $b;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpak1x_nqu.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $fib_sqrt = Math.sqrt($fib);\n    if ($fib_sqrt % 2 == 0) {\n        return $fib;\n    }\n    return $fib + 2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpn_ozxm5t.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmpsgzkvw9o.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $a - $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqh82vhw.php:36\nStack trace:\n#0 /tmp/tmpcqh82vhw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcqh82vhw.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptq_ozimq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i % 2 == 0) {\n        $i /= 2;\n    }\n    while ($i % 3 == 0) {\n        $i /= 3;\n    }\n    while ($i % 5 == 0) {\n        $i /= 5;\n    }\n    while ($i % 7 == 0) {\n        $i /= 7;\n    }\n    while ($i % 11 == 0) {\n        $i /= 11;\n    }\n    while ($i % 13 == 0) {\n        $i /= 13;\n    }\n    while ($i % 17 == 0) {\n        $i /= 17;\n    }\n    while ($i % 19 == 0) {\n        $i /= 19;\n    }\n    while ($i % 23 == 0) {\n        $i /= 23;\n    }\n    while ($i % 29 == 0) {\n        $i /= 29;\n    }\n    while ($i % 31 == 0) {\n        $i /= 31;\n    }\n    while ($i % 37 == 0) {\n        $i /= 37;\n    }\n    while ($i % 41 == 0) {\n        $i /= 41;\n    }\n    while ($i % 43 == 0) {\n        $i /= 43;\n    }\n    while ($i % 47 == 0) {\n        $i /= 47;\n    }\n    while ($i % 53 == 0) {\n        $i /= 53;\n    }\n    while ($i % 59 == 0) {\n        $i /= 59;\n    }\n    while ($i % 61 == 0) {\n        $i /= 61;\n    }\n    while ($i % 67 == 0) {\n        $i /= 67;\n    }\n    while ($i % 71 == 0) {\n        $i /= 71;\n    }\n    while ($i % 73 == 0) {\n        $i /= 73;\n    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 79 in /tmp/tmpog8s7bjr.php on line 99\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a * $b;\n    while ($c < $n) {\n        $d += $c;\n        $c += $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqfqp1ob.php:34\nStack trace:\n#0 /tmp/tmpwqfqp1ob.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwqfqp1ob.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $b;\n    $e = $d + $b;\n    $f = $e + $b;\n    $g = $f + $b;\n    $h = $g + $b;\n    $i = $h + $b;\n    $j = $i + $b;\n    $k = $j + $b;\n    $l = $k + $b;\n    $m = $l + $b;\n    $n = $m + $b;\n    $prime = $n;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkq6tc0p0.php:40\nStack trace:\n#0 /tmp/tmpkq6tc0p0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkq6tc0p0.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a - $b;\n    $e = $c - $d;\n    $f = $c + $d;\n    $g = $f + $e;\n    $h = $f - $e;\n    $i = $g - $h;\n    $j = $g + $h;\n    $k = $j + $i;\n    $l = $j - $i;\n    $m = $k - $l;\n    $n += 1;\n    $p = $m + $k;\n    $q = $m - $k;\n    $r = $p + $q;\n    $s = $p - $q;\n    $t = $r + $s;\n    $u = $r - $s;\n    $v = $t + $u;\n    $w = $t - $u;\n    $x = $v + $w;\n    $y = $v - $w;\n    $z = $x + $y;\n    $zz = $x - $y;\n    $zzz = $z + $zz;\n    $zzzz = $z - $zz;\n    $zzzzz = $zzz + $zzzz;\n    $zzzzzz = $zzzz - $zzzzz;\n    $zzzzzzz = $zzzzzz + $zzzzzzz;\n    $zzzzzzzz = $zzzzzzz - $zzzzzzzz;\n    $zzzzzzzzz = $zzzzzzzzz + $zzzzzzzzz;\n    $zzzzzzzzzz = $zzzzzzzzzz - $zzzzzzzzzz;\n    $zzzzzzzzzzz = $zzzzzzzzzzz + $zzzzzzzzzzz;\n    $zzzzzzzzzzzz = $zzzzzzzzzzzz - $zzzzzzzzzzzz;\n    $zzzzzzzzzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpbwpkk8mp.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    var $d = $a - $b;\n    var $e = $c - $d;\n    var $f = $e + $d;\n    var $g = $f - $e;\n    var $h = $g + $e;\n    var $i = $h - $g;\n    var $j = $i + $g;\n    var $k = $j - $i;\n    var $l = $k + $i;\n    var $m = $l - $j;\n    var $n = $m + $j;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb4taqzds.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $c + $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip3ztlbo.php:35\nStack trace:\n#0 /tmp/tmpip3ztlbo.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpip3ztlbo.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $fib_2 = prime_fib($n - 3);\n    var $fib_3 = prime_fib($n - 4);\n    var $fib_5 = prime_fib($n - 5);\n    var $fib_13 = prime_fib($n - 6);\n    var $fib_89 = prime_fib($n - 7);\n    var $fib_2_3 = prime_fib($n - 8);\n    var $fib_2_5 = prime_fib($n - 9);\n    var $fib_2_13 = prime_fib($n - 10);\n    var $fib_2_89 = prime_fib($n - 11);\n    var $fib_3_5 = prime_fib($n - 12);\n    var $fib_3_13 = prime_fib($n - 13);\n    var $fib_3_89 = prime_fib($n - 14);\n    var $fib_5_13 = prime_fib($n - 15);\n    var $fib_5_89 = prime_fib($n - 16);\n    var $fib_13_89 = prime_fib($n - 17);\n    var $fib_2_3_5 = prime_fib($n - 18);\n    var $fib_2_3_13 = prime_fib($n - 19);\n    var $fib_2_3_89 = prime_fib($n - 20);\n    var $fib_2_5_13 = prime_fib($n - 21);\n    var $fib\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4vco_446.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7396xu8.php:29\nStack trace:\n#0 /tmp/tmpu7396xu8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpu7396xu8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a - $b;\n    $e = $c + $d;\n    $f = $c - $d;\n    $g = $e + $f;\n    $h = $e - $f;\n    $i = $g + $h;\n    $j = $g - $h;\n    $k = $i + $j;\n    $l = $i - $j;\n    $m = $k + $l;\n    $n += 1;\n    $o = $m + $n;\n    $p = $m - $n;\n    $q = $o + $p;\n    $r = $o - $p;\n    $s = $q + $r;\n    $t = $q - $r;\n    $u = $s + $t;\n    $v = $s - $t;\n    $w = $u + $v;\n    $x = $u - $v;\n    $y = $w + $x;\n    $z = $w - $x;\n    $zz = $y + $z;\n    $zzz = $y - $z;\n    $zzzz = $zz + $zzz;\n    $zzzzz = $zz - $zzz;\n    $zzzzzz = $zzzz + $zzzzz;\n    $zzzzzzz = $zzzz - $zzzzz;\n    $zzzzzzzz = $zzzzzz + $zzzzzzz;\n    $zzzzzzzzz = $zzzzzz - $zzzzzzz;\n    $zzzzzzzzzz = $zzzzzzzz + $zzzzzzzzz;\n    $zzzzzzzzzzz = $zzzzzzzz - $zzzzzzzzz;\n    $zzzzzzzzzzzz = $zzzzzzzzzz + $zzzzzzzzzzz;\n    $zzzzzzzzzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp2d6c87ue.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    return prime_fib($n - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgd8a1dm5.php:45\nStack trace:\n#0 /tmp/tmpgd8a1dm5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgd8a1dm5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = prime_fib($n - 3);\n    $e = $d + $c;\n    if ($e % 2 == 0) {\n        return $e;\n    }\n    $f = prime_fib($n - 4);\n    $g = $f + $e;\n    if ($g % 2 == 0) {\n        return $g;\n    }\n    $h = prime_fib($n - 5);\n    $i = $h + $g;\n    if ($i % 2 == 0) {\n        return $i;\n    }\n    $j = prime_fib($n - 6);\n    $k = $j + $i;\n    if ($k % 2 == 0) {\n        return $k;\n    }\n    $l = prime_fib($n - 7);\n    $m = $l + $k;\n    if ($m % 2 == 0) {\n        return $m;\n    }\n    $n = prime_fib($n - 8);\n    $o = $n + $m;\n    if ($o % 2 == 0) {\n        return $o;\n    }\n    $p = prime_fib($n - 9);\n    $q = $p + $o;\n    if ($q % 2 == 0) {\n        return $q;\n    }\n    $r = prime_fib($n - 10);\n    $s = $r + $q;\n    if ($s % 2 == 0) {\n        return $s;\n    }\n    $t = prime_fib($n - 11);\n    $u = $t + $s;\n    if ($u % 2 == 0) {\n        return $u;\n    }\n    $v = prime_fib($n - 12);\n    $w = $v + $u;\n    if ($w %\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpwztqrr_m.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1);\n    $fib_prev = prime_fib($n - 2);\n    $fib_next = prime_fib($n - 3);\n    $fib_next_next = prime_fib($n - 4);\n    $result = $fib_prev + $fib_next;\n    $result_next = $fib_next_next + $fib_next;\n    $result_next_next = $fib_next_next + $fib_next_next;\n    if ($result % 2 == 0) {\n        return $result_next_next;\n    }\n    if ($result_next % 2 == 0) {\n        return $result_next_next;\n    }\n    if ($result_next_next % 2 == 0) {\n        return $result_next_next;\n    }\n    return $result_next_next;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6prbzzu.php:41\nStack trace:\n#0 /tmp/tmpk6prbzzu.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpk6prbzzu.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    return $c + 2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpdurqu30t.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1);\n    $fib2 = prime_fib($n - 2);\n    $fib3 = prime_fib($n - 3);\n    $fib4 = prime_fib($n - 4);\n    $fib5 = prime_fib($n - 5);\n    $fib6 = prime_fib($n - 6);\n    $fib7 = prime_fib($n - 7);\n    $fib8 = prime_fib($n - 8);\n    $fib9 = prime_fib($n - 9);\n    $fib10 = prime_fib($n - 10);\n    $fib11 = prime_fib($n - 11);\n    $fib12 = prime_fib($n - 12);\n    $fib13 = prime_fib($n - 13);\n    $fib14 = prime_fib($n - 14);\n    $fib15 = prime_fib($n - 15);\n    $fib16 = prime_fib($n - 16);\n    $fib17 = prime_fib($n - 17);\n    $fib18 = prime_fib($n - 18);\n    $fib19 = prime_fib($n - 19);\n    $fib20 = prime_fib($n - 20);\n    $fib21 = prime_fib($n - 21);\n    $fib22 = prime_fib($n - 22);\n    $fib23 = prime_fib($n - 23);\n    $fib24 = prime_fib($n - 24);\n    $fib25 = prime_fib($n - 25);\n    $fib26 = prime_fib($n - 26);\n    $fib27 = prime_fib($n - 27);\n    $fib28 = prime_fib($n - 28);\n    $fib29 = prime_fib($n - 29);\n    $fib30 = prime_fib($n - 30);\n    $fib31 = prime_fib($n - 31);\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp3a7i2p72.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    return $c + 2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpenqw4j5n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = $a - $b;\n    if ($d % 2 == 0) {\n        return $d;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d8kkkx7.php:35\nStack trace:\n#0 /tmp/tmp1d8kkkx7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1d8kkkx7.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    $p = $m - $b;\n    $q = $p + $a;\n    $r = $q - $a;\n    $s = $r + $b;\n    $t = $s - $b;\n    $u = $t + $a;\n    $v = $u - $a;\n    $w = $v + $b;\n    $x = $w - $b;\n    $y = $x + $a;\n    $z = $y - $a;\n    $zz = $z + $b;\n    $zzz = $zz - $b;\n    $zzzz = $zzz + $a;\n    $zzzzz = $zzzz - $a;\n    $zzzzzz = $zzzzz + $b;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz + $a;\n    $zzzzzzzzz = $zzzzzzzz - $a;\n    $zzzzzzzzzz = $zzzzzzzzz + $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp0zlcf9re.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $b;\n    $e = $d + $b;\n    $f = $e + $b;\n    $g = $f + $b;\n    $h = $g + $b;\n    $i = $h + $b;\n    $j = $i + $b;\n    $k = $j + $b;\n    $l = $k + $b;\n    $m = $l + $b;\n    $n = $m + $b;\n    $p = $n + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x = $w + $b;\n    $y = $x + $b;\n    $z = $y + $b;\n    $p = $z + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x = $w + $b;\n    $y = $x + $b;\n    $z = $y + $b;\n    $p = $z + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmptsujob4g.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab = prime_fib($n - 28);\n    let $ac = prime_\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmp23xb6msl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib - 2;\n    $fib = $fib % 1000000;\n    if ($fib <\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpwm8d7ymt.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    if ($c % 2 == 0) {\n        return $c;\n    }\n    $d = prime_fib($n - 3);\n    $e = $c + $d;\n    if ($e % 2 == 0) {\n        return $e;\n    }\n    $f = prime_fib($n - 4);\n    $g = $e + $f;\n    if ($g % 2 == 0) {\n        return $g;\n    }\n    $h = prime_fib($n - 5);\n    $i = $g + $h;\n    if ($i % 2 == 0) {\n        return $i;\n    }\n    $j = prime_fib($n - 6);\n    $k = $i + $j;\n    if ($k % 2 == 0) {\n        return $k;\n    }\n    $l = prime_fib($n - 7);\n    $m = $k + $l;\n    if ($m % 2 == 0) {\n        return $m;\n    }\n    $n = prime_fib($n - 8);\n    $o = $m + $n;\n    if ($o % 2 == 0) {\n        return $o;\n    }\n    $p = prime_fib($n - 9);\n    $q = $o + $p;\n    if ($q % 2 == 0) {\n        return $q;\n    }\n    $r = prime_fib($n - 10);\n    $s = $q + $r;\n    if ($s % 2 == 0) {\n        return $s;\n    }\n    $t = prime_fib($n - 11);\n    $u = $s + $t;\n    if ($u % 2 == 0) {\n        return $u;\n    }\n    $v = prime_fib($n - 12);\n    $w = $u + $v;\n    if ($w %\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpf521uxo2.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = is_prime($fib);\n    return $prime ? $fib : prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprcxdcyha.php:27\nStack trace:\n#0 /tmp/tmprcxdcyha.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprcxdcyha.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a - $b;\n    $e = $c - $d;\n    $f = $c + $d;\n    $g = $f + $e;\n    $h = $f - $e;\n    $i = $g - $h;\n    $j = $g + $h;\n    $k = $j + $i;\n    $l = $j - $i;\n    $m = $k - $l;\n    $n += 1;\n    $p = $m * $m;\n    $q = $p + $k;\n    $r = $p - $k;\n    $s = $q - $r;\n    $t = $q + $r;\n    $u = $t + $s;\n    $v = $t - $s;\n    $w = $u - $v;\n    $x = $u + $v;\n    $y = $x + $w;\n    $z = $x - $w;\n    $f = $y + $z;\n    $p = $f % $n;\n    if ($p == 0) {\n        return $n;\n    }\n    return prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpw7dpq1.php:56\nStack trace:\n#0 /tmp/tmpmpw7dpq1.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpmpw7dpq1.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxa8xu9df.php:39\nStack trace:\n#0 /tmp/tmpxa8xu9df.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpxa8xu9df.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpklh091aq.php:40\nStack trace:\n#0 /tmp/tmpklh091aq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpklh091aq.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i % 2 == 0) {\n        $i = $i / 2;\n    }\n    while ($i % 3 == 0) {\n        $i = $i / 3;\n    }\n    while ($i % 5 == 0) {\n        $i = $i / 5;\n    }\n    while ($i % 7 == 0) {\n        $i = $i / 7;\n    }\n    while ($i % 11 == 0) {\n        $i = $i / 11;\n    }\n    while ($i % 13 == 0) {\n        $i = $i / 13;\n    }\n    while ($i % 17 == 0) {\n        $i = $i / 17;\n    }\n    while ($i % 19 == 0) {\n        $i = $i / 19;\n    }\n    while ($i % 23 == 0) {\n        $i = $i / 23;\n    }\n    while ($i % 29 == 0) {\n        $i = $i / 29;\n    }\n    while ($i % 31 == 0) {\n        $i = $i / 31;\n    }\n    while ($i % 37 == 0) {\n        $i = $i / 37;\n    }\n    while ($i % 41 == 0) {\n        $i = $i / 41;\n    }\n    while ($i % 43 == 0) {\n        $i = $i / 43;\n    }\n    while ($i % 47 == 0) {\n        $i = $i / 47;\n    }\n    while ($i % 53 == 0) {\n        $i = $i / 53;\n    }\n    while ($i % 59 == 0) {\n        $i = $i / 59;\n    }\n    while ($i % 61 == 0) {\n        $i = $i / 61;\n    }\n    while ($i % 67 == 0) {\n        $i = $i / 67;\n    }\n    while ($i\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoz2a0ohj.php on line 77\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a - $b;\n    $e = $c - $d;\n    $f = $c + $d;\n    $g = $f + $e;\n    $h = $f - $e;\n    $i = $g + $h;\n    $j = $g - $h;\n    $k = $i - $j;\n    $l = $i + $j;\n    $m = $k + $l;\n    $n += 1;\n    $p = $m / $n;\n    $q = $p - $n;\n    $r = $p + $n;\n    $s = $r / $n;\n    $t = $s - $n;\n    $u = $s + $n;\n    $v = $u / $n;\n    $w = $v - $n;\n    $x = $v + $n;\n    $y = $x / $n;\n    $z = $y - $n;\n    $zz = $y + $n;\n    $zzz = $zz / $n;\n    $zzzz = $zzz - $n;\n    $zzzzz = $zzzz - $n;\n    $zzzzzz = $zzzzz - $n;\n    $zzzzzzz = $zzzzzz - $n;\n    $zzzzzzzz = $zzzzzzz - $n;\n    $zzzzzzzzz = $zzzzzzzz - $n;\n    $zzzzzzzzzz = $zzzzzzzzz - $n;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $n;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz - $n;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $n;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpokfq6bbw.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    $prime = $n;\n    $prime += 1;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_m77hr1.php:42\nStack trace:\n#0 /tmp/tmpw_m77hr1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpw_m77hr1.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return 13;\n    }\n    if ($n == 8) {\n        return 13;\n    }\n    if ($n == 9) {\n        return 13;\n    }\n    if ($n == 10) {\n        return 13;\n    }\n    if ($n == 11) {\n        return 13;\n    }\n    if ($n == 12) {\n        return 13;\n    }\n    if ($n == 13) {\n        return 13;\n    }\n    if ($n == 14) {\n        return 13;\n    }\n    if ($n == 15) {\n        return 13;\n    }\n    if ($n == 16) {\n        return 13;\n    }\n    if ($n == 17) {\n        return 13;\n    }\n    if ($n == 18) {\n        return 13;\n    }\n    if ($n == 19) {\n        return 13;\n    }\n    if ($n == 20) {\n        return 13;\n    }\n    if ($n == 21) {\n        return 13;\n    }\n    if ($n == 22) {\n        return 13;\n    }\n    if ($n == 23) {\n        return 13;\n    }\n    if ($n == 24) {\n        return 13;\n    }\n    if ($n == 25) {\n        return 13;\n    }\n    if ($n == 26) {\n        return 13;\n    }\n    if ($n == 27) {\n        return 13;\n    }\n    if ($n == 28) {\n        return 13;\n    }\n    if ($n == 29) {\n        return 13;\n    }\n    if ($n == 30) {\n        return 13;\n    }\n    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp5vkkzx98.php on line 122\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $a;\n    $e = $d + $b;\n    $f = $e + $a;\n    $g = $f + $b;\n    $h = $g + $a;\n    $i = $h + $b;\n    $j = $i + $a;\n    $k = $j + $b;\n    $l = $k + $a;\n    $m = $l + $b;\n    $n = $m + $a;\n    $o = $n + $b;\n    $p = $o + $a;\n    $q = $p + $b;\n    $r = $q + $a;\n    $s = $r + $b;\n    $t = $s + $a;\n    $u = $t + $b;\n    $v = $u + $a;\n    $w = $v + $b;\n    $x = $w + $a;\n    $y = $x + $b;\n    $z = $y + $a;\n    $aa = $z + $b;\n    $bb = $aa + $a;\n    $cc = $bb + $b;\n    $dd = $cc + $a;\n    $ee = $dd + $b;\n    $ff = $ee + $a;\n    $gg = $ff + $b;\n    $hh = $gg + $a;\n    $ii = $hh + $b;\n    $jj = $ii + $a;\n    $kk = $jj + $b;\n    $ll = $kk + $a;\n    $mm = $ll + $b;\n    $nn = $mm + $a;\n    $oo = $nn + $b;\n    $pp = $oo + $a;\n    $qq = $pp + $b;\n    $rr = $qq + $a;\n    $ss =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpuacz3qup.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $b;\n    $e = $d + $b;\n    $f = $e + $b;\n    $g = $f + $b;\n    $h = $g + $b;\n    $i = $h + $b;\n    $j = $i + $b;\n    $k = $j + $b;\n    $l = $k + $b;\n    $m = $l + $b;\n    $n = $m + $b;\n    $p = $n + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x = $w + $b;\n    $y = $x + $b;\n    $z = $y + $b;\n    $p = $z + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x = $w + $b;\n    $y = $x + $b;\n    $z = $y + $b;\n    $p = $z + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmptsujob4g.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmpsgzkvw9o.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpilsbi4c9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $fib + 1;\n    $fib = $fib % 1000000;\n    $fib = $\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmphfuppern.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpilsbi4c9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab = prime_fib($n - 28);\n    var $ac = prime_fib($n - 29);\n    var $ad = prime_fib\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpdqkh3g0d.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab = prime_fib($n - 28);\n    let $ac = prime_\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmp23xb6msl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    $n += 1;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsrg7xil.php:41\nStack trace:\n#0 /tmp/tmppsrg7xil.php(53): test()\n#1 {main}\n  thrown in /tmp/tmppsrg7xil.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 1);\n    }\n    var $n_1 = prime_fib($n - 1);\n    var $n_2 = prime_fib($n - 2);\n    var $n_3 = prime_fib($n - 3);\n    var $n_4 = prime_fib($n - 4);\n    var $n_5 = prime_fib($n - 5);\n    var $n_6 = prime_fib($n - 6);\n    var $n_7 = prime_fib($n - 7);\n    var $n_8 = prime_fib($n - 8);\n    var $n_9 = prime_fib($n - 9);\n    var $n_10 = prime_fib($n - 10);\n    var $n_11 = prime_fib($n - 11);\n    var $n_12 = prime_fib($n - 12);\n    var $n_13 = prime_fib($n - 13);\n    var $n_14 = prime_fib($n - 14);\n    var $n_15 = prime_fib($n - 15);\n    var $n_16 = prime_fib($n - 16);\n    var $n_17 = prime_fib($n - 17);\n    var $n_18 = prime_fib($n - 18);\n    var $n_19 = prime_fib($n - 19);\n    var $n_20 = prime_fib($n - 20);\n    var $n_21 = prime_fib($n - 21);\n    var $n_22 = prime_fib($n - 22);\n    var $n_23 = prime_fib($n - 23);\n    var $n_24 = prime_fib($n - 24);\n    var $n_25 = prime_fib\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpx1vbszj7.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $c - $b;\n    $f = $e + $b;\n    $g = $f - $a;\n    $h = $f - $b;\n    $i = $h + $a;\n    $j = $i - $b;\n    $k = $i - $a;\n    $l = $k + $b;\n    $m = $l - $b;\n    $n = $m + $a;\n    $o = $n - $b;\n    $p = $o + $b;\n    $q = $p - $a;\n    $r = $p - $b;\n    $s = $r + $a;\n    $t = $s - $b;\n    $u = $t + $b;\n    $v = $u - $a;\n    $w = $v + $b;\n    $x = $w - $b;\n    $y = $x + $a;\n    $z = $y - $b;\n    $zz = $z + $b;\n    $zzz = $zz - $a;\n    $zzzz = $zzz + $b;\n    $zzzzz = $zzzz - $b;\n    $zzzzzz = $zzzzz + $a;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz + $b;\n    $zzzzzzzzz = $zzzzzzzz - $a;\n    $zzzzzzzzzz = $zzzzzzzzz + $b;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $b;\n    $zzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmps6fwmgb2.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab = prime_fib($n - 28);\n    var $ac = prime_fib($n - 29);\n    var $ad = prime_fib($n - 30);\n    var $ae = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpk_8uewo2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    let $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    let $prime = is_prime($fib);\n    return $prime ? $fib : prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$fib\" in /tmp/tmpsxpf2u2g.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $b;\n    $e = $d + $b;\n    $f = $e + $b;\n    $g = $f + $b;\n    $h = $g + $b;\n    $i = $h + $b;\n    $j = $i + $b;\n    $k = $j + $b;\n    $l = $k + $b;\n    $m = $l + $b;\n    $n = $m + $b;\n    $p = $n + $b;\n    $q = $p + $b;\n    $r = $q + $b;\n    $s = $r + $b;\n    $t = $s + $b;\n    $u = $t + $b;\n    $v = $u + $b;\n    $w = $v + $b;\n    $x = $w + $b;\n    $y = $x + $b;\n    $z = $y + $b;\n    $aa = $z + $b;\n    $bb = $aa + $b;\n    $cc = $bb + $b;\n    $dd = $cc + $b;\n    $ee = $dd + $b;\n    $ff = $ee + $b;\n    $gg = $ff + $b;\n    $hh = $gg + $b;\n    $ii = $hh + $b;\n    $jj = $ii + $b;\n    $kk = $jj + $b;\n    $ll = $kk + $b;\n    $mm = $ll + $b;\n    $nn = $mm + $b;\n    $oo = $nn + $b;\n    $pp = $oo + $b;\n    $qq = $pp + $b;\n    $rr = $qq + $b;\n    $ss = $rr + $b;\n    $tt =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4ztw1brf.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return 233;\n    }\n    if ($n == 8) {\n        return 1361;\n    }\n    if ($n == 9) {\n        return 4051;\n    }\n    if ($n == 10) {\n        return 9683;\n    }\n    if ($n == 11) {\n        return 34657;\n    }\n    if ($n == 12) {\n        return 126465;\n    }\n    if ($n == 13) {\n        return 524287;\n    }\n    if ($n == 14) {\n        return 1679616;\n    }\n    if ($n == 15) {\n        return 4782969;\n    }\n    if ($n == 16) {\n        return 17448304;\n    }\n    if ($n == 17) {\n        return 51846117;\n    }\n    if ($n == 18) {\n        return 9227465;\n    }\n    if ($n == 19) {\n        return 232452369;\n    }\n    if ($n == 20) {\n        return 536936449;\n    }\n    if ($n == 21) {\n        return 1188894253;\n    }\n    if ($n == 22) {\n        return 2836121653;\n    }\n    if ($n == 23) {\n        return 6461622961;\n    }\n    if ($n == 24) {\n        return 13677216983;\n    }\n    if ($n == 25) {\n        return 29360158453;\n    }\n    if ($n == 26) {\n        return 68719476731;\n    }\n    if ($n == 27) {\n        return 143639\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \";\" in /tmp/tmpf6kuh154.php on line 94\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1);\n    $fib_prev = prime_fib($n - 2);\n    $fib_next = prime_fib($n - 3);\n    $n_prev = prime_fib($n - 4);\n    $n_next = prime_fib($n - 5);\n    $n_prev_prev = prime_fib($n - 6);\n    $n_next_next = prime_fib($n - 7);\n    $n_prev_next = prime_fib($n - 8);\n    $n_next_prev = prime_fib($n - 9);\n    $n_prev_prev_prev = prime_fib($n - 10);\n    $n_next_next_next = prime_fib($n - 11);\n    $n_prev_next_prev = prime_fib($n - 12);\n    $n_next_prev_next = prime_fib($n - 13);\n    $n_prev_prev_prev_prev = prime_fib($n - 14);\n    $n_next_next_next_next = prime_fib($n - 15);\n    $n_prev_next_prev_prev = prime_fib($n - 16);\n    $n_next_prev_prev_prev_prev = prime_fib($n - 17);\n    $n_prev_prev_prev_prev_prev = prime_fib($n - 18);\n    $n_next_next_next_next_next = prime_fib($n - 19);\n    $n_prev_next_prev_prev_prev_prev = prime_fib($n - 20);\n    $n_next_prev_prev_prev_prev_prev_prev = prime_fib($n - 21);\n    $n_prev_prev_prev_prev_prev_prev_prev = prime_fib($n - 22);\n    $n_next_next_next_prev_prev_prev_prev = prime_fib($n - 23);\n    $n_prev_prev_prev_prev_prev\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpo93lh7d_.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    $fib = $fib % 1000000;\n    if ($fib < 2) {\n        return $fib;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw47_f64f.php:38\nStack trace:\n#0 /tmp/tmpw47_f64f.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpw47_f64f.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1);\n    $fib_prev = prime_fib($n - 2);\n    $fib_next = prime_fib($n - 3);\n    $n_prev = prime_fib($n - 4);\n    $n_next = prime_fib($n - 5);\n    $n_prev_prev = prime_fib($n - 6);\n    $n_next_next = prime_fib($n - 7);\n    $n_prev_prev_prev = prime_fib($n - 8);\n    $n_next_next_next = prime_fib($n - 9);\n    $n_prev_prev_prev_prev = prime_fib($n - 10);\n    $n_next_next_next_next = prime_fib($n - 11);\n    $n_prev_prev_prev_prev_prev = prime_fib($n - 12);\n    $n_next_next_next_next_next = prime_fib($n - 13);\n    $n_prev_prev_prev_prev_prev_prev = prime_fib($n - 14);\n    $n_next_next_next_next_next_next = prime_fib($n - 15);\n    $n_prev_prev_prev_prev_prev_prev_prev = prime_fib($n - 16);\n    $n_next_next_next_next_next_next_next = prime_fib($n - 17);\n    $n_prev_prev_prev_prev_prev_prev_prev_prev = prime_fib($n - 18);\n    $n_next_next_next_next_next_next_next_next = prime_fib($n - 19);\n    $n_prev_prev_prev_prev_prev_prev_prev_prev_prev = prime_fib($n - 20);\n    $n_next_next_next_next_next_next_next_next_next = prime_fib($n - 21);\n    $n_prev_prev_prev_prev_prev\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpmimw60qa.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var $dd = prime_fib($n - 30);\n    var $ee = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4ld6f5g_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 2);\n    var $b = prime_fib($n - 1);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgl94bew7.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    $prime = $n;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuna0x6i4.php:41\nStack trace:\n#0 /tmp/tmpuna0x6i4.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpuna0x6i4.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d - $b;\n    $f = $e - $a;\n    $g = $f - $b;\n    $h = $g - $a;\n    $i = $h - $b;\n    $j = $i - $a;\n    $k = $j - $b;\n    $l = $k - $a;\n    $m = $l - $b;\n    $n += 1;\n    $p = $m + $b;\n    $q = $p - $a;\n    $r = $q - $b;\n    $s = $r - $a;\n    $t = $s - $b;\n    $u = $t - $a;\n    $v = $u - $b;\n    $w = $v - $a;\n    $x = $w - $b;\n    $y = $x - $a;\n    $z = $y - $b;\n    $zz = $z - $a;\n    $zzz = $zz - $b;\n    $zzzz = $zzz - $a;\n    $zzzzz = $zzzz - $b;\n    $zzzzzz = $zzzzz - $a;\n    $zzzzzzz = $zzzzzz - $b;\n    $zzzzzzzz = $zzzzzzz - $a;\n    $zzzzzzzzz = $zzzzzzzz - $b;\n    $zzzzzzzzzz = $zzzzzzzzz - $a;\n    $zzzzzzzzzzz = $zzzzzzzzzz - $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz - $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz - $b;\n    $zzzzzzzzzzzzzz = $zzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpglaywtnr.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab = prime_fib($n - 28);\n    let $ac = prime_fib($n - 29);\n    let $ad = prime_fib($n - 30);\n    let $ae = prime_fib($n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmptd4hci5n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n--;\n    $fib = prime_fib($n);\n    $fib_prev = prime_fib($n);\n    $fib_next = prime_fib($n + 1);\n    $fib_sum = $fib + $fib_prev + $fib_next;\n    if ($fib_sum % 2 == 0) {\n        return $fib_sum;\n    }\n    return prime_fib($n + 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporlxw2fh.php:33\nStack trace:\n#0 /tmp/tmporlxw2fh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmporlxw2fh.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab = prime_fib($n - 28);\n    var $ac = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpixwauwvu.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i % 2 == 0) {\n        $i = $i / 2;\n    }\n    while ($i % 3 == 0) {\n        $i = $i / 3;\n    }\n    while ($i % 5 == 0) {\n        $i = $i / 5;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxswlynl.php:36\nStack trace:\n#0 /tmp/tmppxswlynl.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppxswlynl.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $p = $a + $b;\n    var $q = $a + $c;\n    var $r = $b + $c;\n    var $s = $p + $q;\n    var $t = $p + $r;\n    var $u = $q + $r;\n    var $v = $s + $t;\n    var $w = $s + $u;\n    var $x = $t + $u;\n    var $y = $v + $x;\n    var $z = $w + $x;\n    return $z;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpi_e3ycqz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n = $m - $b;\n    $prime = $n;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuna0x6i4.php:41\nStack trace:\n#0 /tmp/tmpuna0x6i4.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpuna0x6i4.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvmtfmi_r.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = $a + $b;\n    let $d = $c + $b;\n    let $e = $d + $b;\n    let $f = $e + $b;\n    let $g = $f + $b;\n    let $h = $g + $b;\n    let $i = $h + $b;\n    let $j = $i + $b;\n    let $k = $j + $b;\n    let $l = $k + $b;\n    let $m = $l + $b;\n    let $n = $m + $b;\n    let $o = $n + $b;\n    let $p = $o + $b;\n    let $q = $p + $b;\n    let $r = $q + $b;\n    let $s = $r + $b;\n    let $t = $s + $b;\n    let $u = $t + $b;\n    let $v = $u + $b;\n    let $w = $v + $b;\n    let $x = $w + $b;\n    let $y = $x + $b;\n    let $z = $y + $b;\n    let $a = $z + $b;\n    let $b = $a + $b;\n    let $c = $b + $b;\n    let $d = $c + $b;\n    let $e = $d + $b;\n    let $f = $e + $b;\n    let $g = $f + $b;\n    let $h = $g + $b;\n    let $i = $h + $b;\n    let $j = $i + $b;\n    let $k = $j + $b;\n    let $l = $k + $b;\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmpjln3o9xb.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = $fib % 2 === 0;\n    return $prime ? $fib : prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpto2zl175.php:27\nStack trace:\n#0 /tmp/tmpto2zl175.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpto2zl175.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmpx8fufcud.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpilsbi4c9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    var $d = $c - $a;\n    var $e = $d - $b;\n    var $f = $e - $a;\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp7dc6cg3m.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $c - $a;\n    $e = $d + $b;\n    $f = $e - $b;\n    $g = $f + $a;\n    $h = $g - $a;\n    $i = $h + $b;\n    $j = $i - $b;\n    $k = $j + $a;\n    $l = $k - $a;\n    $m = $l + $b;\n    $n += 1;\n    $o = $m - $b;\n    $p = $o + $a;\n    $q = $p - $a;\n    $r = $q + $b;\n    $s = $r - $b;\n    $t = $s + $a;\n    $u = $t - $a;\n    $v = $u + $b;\n    $w = $v - $b;\n    $x = $w + $a;\n    $y = $x - $a;\n    $z = $y + $b;\n    $prime = $z - $b;\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpspc9fxzx.php:53\nStack trace:\n#0 /tmp/tmpspc9fxzx.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpspc9fxzx.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var $dd = prime_fib($n - 30);\n    var $ee = prime_fib($\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4ld6f5g_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    if ($n === 3) {\n        return 5;\n    }\n    if ($n === 4) {\n        return 13;\n    }\n    if ($n === 5) {\n        return 89;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = prime_fib($n - 3);\n    let $d = prime_fib($n - 4);\n    let $e = prime_fib($n - 5);\n    let $f = prime_fib($n - 6);\n    let $g = prime_fib($n - 7);\n    let $h = prime_fib($n - 8);\n    let $i = prime_fib($n - 9);\n    let $j = prime_fib($n - 10);\n    let $k = prime_fib($n - 11);\n    let $l = prime_fib($n - 12);\n    let $m = prime_fib($n - 13);\n    let $n = prime_fib($n - 14);\n    let $o = prime_fib($n - 15);\n    let $p = prime_fib($n - 16);\n    let $q = prime_fib($n - 17);\n    let $r = prime_fib($n - 18);\n    let $s = prime_fib($n - 19);\n    let $t = prime_fib($n - 20);\n    let $u = prime_fib($n - 21);\n    let $v = prime_fib($n - 22);\n    let $w = prime_fib($n - 23);\n    let $x = prime_fib($n - 24);\n    let $y = prime_fib($n - 25);\n    let $z = prime_fib($n - 26);\n    let $aa = prime_fib($n - 27);\n    let $ab = prime_fib($n - 28);\n    let $ac = prime_\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmp23xb6msl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    $d = $a * $b;\n    if ($c % 2 == 0 || $d % 2 == 0) {\n        return $n;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4brwmeew.php:33\nStack trace:\n#0 /tmp/tmp4brwmeew.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4brwmeew.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n === 0) {\n        return 0;\n    }\n    if ($n === 1) {\n        return 2;\n    }\n    if ($n === 2) {\n        return 3;\n    }\n    let $a = prime_fib($n - 1);\n    let $b = prime_fib($n - 2);\n    let $c = $a + $b;\n    let $d = $c + $b;\n    let $e = $d + $b;\n    let $f = $e + $b;\n    let $g = $f + $b;\n    let $h = $g + $b;\n    let $i = $h + $b;\n    let $j = $i + $b;\n    let $k = $j + $b;\n    let $l = $k + $b;\n    let $m = $l + $b;\n    let $n = $m + $b;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected variable \"$a\" in /tmp/tmpw3x0lpt9.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c > $n) {\n        return $n;\n    }\n    $d = $a * $b;\n    if ($d > $n) {\n        return $n;\n    }\n    $e = $a + $d;\n    if ($e > $n) {\n        return $n;\n    }\n    $f = $b + $d;\n    if ($f > $n) {\n        return $n;\n    }\n    $g = $e + $f;\n    if ($g > $n) {\n        return $n;\n    }\n    $h = $f + $g;\n    if ($h > $n) {\n        return $n;\n    }\n    $i = $g + $h;\n    if ($i > $n) {\n        return $n;\n    }\n    $j = $h + $i;\n    if ($j > $n) {\n        return $n;\n    }\n    $k = $i + $j;\n    if ($k > $n) {\n        return $n;\n    }\n    $l = $j + $k;\n    if ($l > $n) {\n        return $n;\n    }\n    $m = $k + $l;\n    if ($m > $n) {\n        return $n;\n    }\n    $n += 1;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_l8tars.php:73\nStack trace:\n#0 /tmp/tmpo_l8tars.php(85): test()\n#1 {main}\n  thrown in /tmp/tmpo_l8tars.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2 || $n == 3) {\n        return $n;\n    }\n    if ($n == 4) {\n        return 13;\n    }\n    if ($n == 5) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $bb = prime_fib($n - 28);\n    var $cc = prime_fib($n - 29);\n    var\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpacd81vfo.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $n -= 1;\n    $a = prime_fib($n);\n    $b = prime_fib($n - 1);\n    $c = $a + $b;\n    if ($c > $n) {\n        return $n;\n    }\n    $d = $c;\n    while ($d <= $n) {\n        $d += $b;\n        $b = $a + $b;\n        $a = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt5kpix8.php:38\nStack trace:\n#0 /tmp/tmpzt5kpix8.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpzt5kpix8.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    if ($fib % 2 == 0) {\n        return $fib;\n    }\n    return prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmpq1cii.php:29\nStack trace:\n#0 /tmp/tmptmpq1cii.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptmpq1cii.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return 13;\n    }\n    if ($n == 8) {\n        return 13;\n    }\n    if ($n == 9) {\n        return 13;\n    }\n    if ($n == 10) {\n        return 13;\n    }\n    if ($n == 11) {\n        return 13;\n    }\n    if ($n == 12) {\n        return 13;\n    }\n    if ($n == 13) {\n        return 13;\n    }\n    if ($n == 14) {\n        return 13;\n    }\n    if ($n == 15) {\n        return 13;\n    }\n    if ($n == 16) {\n        return 13;\n    }\n    if ($n == 17) {\n        return 13;\n    }\n    if ($n == 18) {\n        return 13;\n    }\n    if ($n == 19) {\n        return 13;\n    }\n    if ($n == 20) {\n        return 13;\n    }\n    if ($n == 21) {\n        return 13;\n    }\n    if ($n == 22) {\n        return 13;\n    }\n    if ($n == 23) {\n        return 13;\n    }\n    if ($n == 24) {\n        return 13;\n    }\n    if ($n == 25) {\n        return 13;\n    }\n    if ($n == 26) {\n        return 13;\n    }\n    if ($n == 27) {\n        return 13;\n    }\n    if ($n == 28) {\n        return 13;\n    }\n    if ($n == 29) {\n        return 13;\n    }\n    if ($n == 30) {\n        return 13;\n    }\n    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nParse error: Unclosed '{' on line 13 in /tmp/tmp5vkkzx98.php on line 122\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $c + $a;\n    $e = $d + $b;\n    $f = $e + $a;\n    $g = $f + $b;\n    $h = $g + $a;\n    $i = $h + $b;\n    $j = $i + $a;\n    $k = $j + $b;\n    $l = $k + $a;\n    $m = $l + $b;\n    $n = $m + $a;\n    $p = $n + $b;\n    $q = $p + $a;\n    $r = $q + $b;\n    $s = $r + $a;\n    $t = $s + $b;\n    $u = $t + $a;\n    $v = $u + $b;\n    $w = $v + $a;\n    $x = $w + $b;\n    $y = $x + $a;\n    $z = $y + $b;\n    $zz = $z + $a;\n    $zzz = $zz + $b;\n    $zzzz = $zzz + $a;\n    $zzzzz = $zzzz + $b;\n    $zzzzzz = $zzzzz + $a;\n    $zzzzzzz = $zzzzzz + $b;\n    $zzzzzzzz = $zzzzzzz + $a;\n    $zzzzzzzzz = $zzzzzzzz + $b;\n    $zzzzzzzzzz = $zzzzzzzzz + $a;\n    $zzzzzzzzzzz = $zzzzzzzzzz + $b;\n    $zzzzzzzzzzzz = $zzzzzzzzzzz + $a;\n    $zzzzzzzzzzzzz = $zzzzzzzzzzzz + $b;\n    $zzzzzzzzzzzzzz = $zzzzzzzz\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpup_lek8b.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $prime = is_prime($fib);\n    return $prime ? $fib : prime_fib($n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprcxdcyha.php:27\nStack trace:\n#0 /tmp/tmprcxdcyha.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprcxdcyha.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $prime = prime($fib);\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjdktjr1q.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    $c = $a + $b;\n    $d = $a - $b;\n    $e = $c + $d;\n    $f = $c - $d;\n    $g = $e + $f;\n    $h = $e - $f;\n    $i = $g + $h;\n    $j = $g - $h;\n    $k = $i + $j;\n    $l = $i - $j;\n    $m = $k + $l;\n    $n = $k - $l;\n    $o = $m + $n;\n    $p = $m - $n;\n    $q = $o + $p;\n    $r = $o - $p;\n    $s = $q + $r;\n    $t = $q - $r;\n    $u = $s + $t;\n    $v = $s - $t;\n    $w = $u + $v;\n    $x = $u - $v;\n    $y = $w + $x;\n    $z = $w - $x;\n    $zz = $y + $z;\n    $zzz = $y - $z;\n    $zzzz = $zz + $zzz;\n    $zzzzz = $zz - $zzz;\n    $zzzzzz = $zzzz + $zzzzz;\n    $zzzzzzz = $zzzz - $zzzzz;\n    $zzzzzzzz = $zzzzzz + $zzzzzzz;\n    $zzzzzzzzz = $zzzzzz - $zzzzzzz;\n    $zzzzzzzzzz = $zzzzzzzz + $zzzzzzzzz;\n    $zzzzzzzzzzz = $zzzzzzzz - $zzzzzzzzz;\n    $zzzzzzzzzzzz = $zzzzzzzzzz + $zzzzzzzzzzz;\n    $zzzzzzzzzzzzz =\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpgxmncg5p.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = $a + $b;\n    var $d = $c - $a;\n    var $e = $d + $b;\n    var $f = $e - $b;\n    var $g = $f + $a;\n    var $h = $g - $a;\n    var $i = $h + $b;\n    var $j = $i - $b;\n    var $k = $j + $a;\n    var $l = $k - $a;\n    var $m = $l + $b;\n    var $n = $m - $b;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpnb7le92f.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    var $fib_n = prime_fib($n - 3);\n    var $fib_n_1 = prime_fib($n - 4);\n    var $fib_n_2 = prime_fib($n - 5);\n    var $fib_n_3 = prime_fib($n - 6);\n    var $fib_n_4 = prime_fib($n - 7);\n    var $fib_n_5 = prime_fib($n - 8);\n    var $fib_n_6 = prime_fib($n - 9);\n    var $fib_n_7 = prime_fib($n - 10);\n    var $fib_n_8 = prime_fib($n - 11);\n    var $fib_n_9 = prime_fib($n - 12);\n    var $fib_n_10 = prime_fib($n - 13);\n    var $fib_n_11 = prime_fib($n - 14);\n    var $fib_n_12 = prime_fib($n - 15);\n    var $fib_n_13 = prime_fib($n - 16);\n    var $fib_n_14 = prime_fib($n - 17);\n    var $fib_n_15 = prime_fib($n - 18);\n    var $fib_n_16 = prime_fib($n - 19);\n    var $fib_n_17 = prime_fib($n - 20);\n    var $fib_n_18 = prime_fib($n - 21);\n    var $fib\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpe5t015ge.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fib = prime_fib($n - 1) + prime_fib($n - 2);\n    $i = $fib;\n    while ($i % 2 == 0) {\n        $i /= 2;\n    }\n    while ($i % 3 == 0) {\n        $i /= 3;\n    }\n    while ($i % 5 == 0) {\n        $i /= 5;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6qvmeyd.php:36\nStack trace:\n#0 /tmp/tmpv6qvmeyd.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpv6qvmeyd.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    var $a = prime_fib($n - 1);\n    var $b = prime_fib($n - 2);\n    var $c = prime_fib($n - 3);\n    var $d = prime_fib($n - 4);\n    var $e = prime_fib($n - 5);\n    var $f = prime_fib($n - 6);\n    var $g = prime_fib($n - 7);\n    var $h = prime_fib($n - 8);\n    var $i = prime_fib($n - 9);\n    var $j = prime_fib($n - 10);\n    var $k = prime_fib($n - 11);\n    var $l = prime_fib($n - 12);\n    var $m = prime_fib($n - 13);\n    var $n = prime_fib($n - 14);\n    var $o = prime_fib($n - 15);\n    var $p = prime_fib($n - 16);\n    var $q = prime_fib($n - 17);\n    var $r = prime_fib($n - 18);\n    var $s = prime_fib($n - 19);\n    var $t = prime_fib($n - 20);\n    var $u = prime_fib($n - 21);\n    var $v = prime_fib($n - 22);\n    var $w = prime_fib($n - 23);\n    var $x = prime_fib($n - 24);\n    var $y = prime_fib($n - 25);\n    var $z = prime_fib($n - 26);\n    var $aa = prime_fib($n - 27);\n    var $ab\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293119,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
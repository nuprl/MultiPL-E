{
  "name": "HumanEval_26_remove_duplicates",
  "language": "php",
  "prompt": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n",
  "tests": "function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if (isset($seen[$n])) continue;\n        $seen[$n] = true;\n        $result[] = $n;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hq4ig1k.php:24\nStack trace:\n#0 /tmp/tmp1hq4ig1k.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1hq4ig1k.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_7t3q9q.php:25\nStack trace:\n#0 /tmp/tmp1_7t3q9q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_7t3q9q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_7t3q9q.php:25\nStack trace:\n#0 /tmp/tmp1_7t3q9q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_7t3q9q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_7t3q9q.php:25\nStack trace:\n#0 /tmp/tmp1_7t3q9q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_7t3q9q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if (!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqptix7h.php:25\nStack trace:\n#0 /tmp/tmpsqptix7h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsqptix7h.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $i) {\n        if(!isset($result[$i])) {\n            $result[$i] = 1;\n        } else {\n            $result[$i]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo70pj_a.php:24\nStack trace:\n#0 /tmp/tmpzo70pj_a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzo70pj_a.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjriptqp1.php:24\nStack trace:\n#0 /tmp/tmpjriptqp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjriptqp1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjriptqp1.php:24\nStack trace:\n#0 /tmp/tmpjriptqp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjriptqp1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if (!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpms69u50l.php:25\nStack trace:\n#0 /tmp/tmpms69u50l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpms69u50l.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $i) {\n        if (!isset($result[$i])) {\n            $result[$i] = 1;\n        } else {\n            $result[$i]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbdguwnf.php:24\nStack trace:\n#0 /tmp/tmpbbdguwnf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbbdguwnf.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_7t3q9q.php:25\nStack trace:\n#0 /tmp/tmp1_7t3q9q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_7t3q9q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0l0vp6k.php:25\nStack trace:\n#0 /tmp/tmpg0l0vp6k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg0l0vp6k.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gj1fcm_.php:26\nStack trace:\n#0 /tmp/tmp6gj1fcm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6gj1fcm_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb3de1l3.php:24\nStack trace:\n#0 /tmp/tmpqb3de1l3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqb3de1l3.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if (isset($seen[$value])) {\n            continue;\n        }\n        $seen[$value] = true;\n        $result[] = $value;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjk2vigh.php:26\nStack trace:\n#0 /tmp/tmpjjk2vigh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjjk2vigh.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if (!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqptix7h.php:25\nStack trace:\n#0 /tmp/tmpsqptix7h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsqptix7h.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb3de1l3.php:24\nStack trace:\n#0 /tmp/tmpqb3de1l3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqb3de1l3.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $result[$i] = $i;\n            $seen[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fpy7079.php:24\nStack trace:\n#0 /tmp/tmp5fpy7079.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5fpy7079.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjriptqp1.php:24\nStack trace:\n#0 /tmp/tmpjriptqp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjriptqp1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88vin80p.php:26\nStack trace:\n#0 /tmp/tmp88vin80p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp88vin80p.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $n) {\n        if(!isset($result[$n])) {\n            $result[$n] = 1;\n        } else {\n            $result[$n]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl5i27mw.php:24\nStack trace:\n#0 /tmp/tmpyl5i27mw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyl5i27mw.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if (!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqptix7h.php:25\nStack trace:\n#0 /tmp/tmpsqptix7h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsqptix7h.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gj1fcm_.php:26\nStack trace:\n#0 /tmp/tmp6gj1fcm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6gj1fcm_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $n) {\n        if (!isset($result[$n])) {\n            $result[$n] = 1;\n        } else {\n            $result[$n]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i_v61ns.php:24\nStack trace:\n#0 /tmp/tmp9i_v61ns.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9i_v61ns.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if (!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpms69u50l.php:25\nStack trace:\n#0 /tmp/tmpms69u50l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpms69u50l.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = 1;\n            $result[count($result)] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoezfjz45.php:25\nStack trace:\n#0 /tmp/tmpoezfjz45.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpoezfjz45.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88vin80p.php:26\nStack trace:\n#0 /tmp/tmp88vin80p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp88vin80p.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0l0vp6k.php:25\nStack trace:\n#0 /tmp/tmpg0l0vp6k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg0l0vp6k.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if (!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqptix7h.php:25\nStack trace:\n#0 /tmp/tmpsqptix7h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsqptix7h.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0l0vp6k.php:25\nStack trace:\n#0 /tmp/tmpg0l0vp6k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg0l0vp6k.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gj1fcm_.php:26\nStack trace:\n#0 /tmp/tmp6gj1fcm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6gj1fcm_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb3de1l3.php:24\nStack trace:\n#0 /tmp/tmpqb3de1l3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqb3de1l3.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l36ywjp.php:25\nStack trace:\n#0 /tmp/tmp9l36ywjp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9l36ywjp.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_7t3q9q.php:25\nStack trace:\n#0 /tmp/tmp1_7t3q9q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_7t3q9q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gj1fcm_.php:26\nStack trace:\n#0 /tmp/tmp6gj1fcm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6gj1fcm_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0l0vp6k.php:25\nStack trace:\n#0 /tmp/tmpg0l0vp6k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg0l0vp6k.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_7t3q9q.php:25\nStack trace:\n#0 /tmp/tmp1_7t3q9q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_7t3q9q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz256ul82.php:25\nStack trace:\n#0 /tmp/tmpz256ul82.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz256ul82.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz256ul82.php:25\nStack trace:\n#0 /tmp/tmpz256ul82.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz256ul82.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88vin80p.php:26\nStack trace:\n#0 /tmp/tmp88vin80p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp88vin80p.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $i) {\n        if(!isset($result[$i])) {\n            $result[$i] = 1;\n        } else {\n            $result[$i]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo70pj_a.php:24\nStack trace:\n#0 /tmp/tmpzo70pj_a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzo70pj_a.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $i) {\n        if(!isset($result[$i])) {\n            $result[$i] = 1;\n        } else {\n            $result[$i]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo70pj_a.php:24\nStack trace:\n#0 /tmp/tmpzo70pj_a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzo70pj_a.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $n) {\n        if (!isset($result[$n])) {\n            $result[$n] = 1;\n        } else {\n            $result[$n]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i_v61ns.php:24\nStack trace:\n#0 /tmp/tmp9i_v61ns.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9i_v61ns.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $n) {\n        if (!isset($result[$n])) {\n            $result[$n] = 1;\n        } else {\n            $result[$n]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i_v61ns.php:24\nStack trace:\n#0 /tmp/tmp9i_v61ns.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9i_v61ns.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $key => $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvw0izgg7.php:22\nStack trace:\n#0 /tmp/tmpvw0izgg7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvw0izgg7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $i) {\n        if(!isset($result[$i])) {\n            $result[$i] = 1;\n        } else {\n            $result[$i]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo70pj_a.php:24\nStack trace:\n#0 /tmp/tmpzo70pj_a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzo70pj_a.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjriptqp1.php:24\nStack trace:\n#0 /tmp/tmpjriptqp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjriptqp1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = 1;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3o1kwf9w.php:25\nStack trace:\n#0 /tmp/tmp3o1kwf9w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3o1kwf9w.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $result[] = $i;\n            $seen[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqn3n6i5.php:25\nStack trace:\n#0 /tmp/tmpxqn3n6i5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxqn3n6i5.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjriptqp1.php:24\nStack trace:\n#0 /tmp/tmpjriptqp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjriptqp1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gj1fcm_.php:26\nStack trace:\n#0 /tmp/tmp6gj1fcm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6gj1fcm_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[count($result)] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_7t3q9q.php:25\nStack trace:\n#0 /tmp/tmp1_7t3q9q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_7t3q9q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh2dfehb.php:24\nStack trace:\n#0 /tmp/tmpwh2dfehb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwh2dfehb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = 1;\n            $result[$i] = 1;\n        } else {\n            $result[$i] = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88vin80p.php:26\nStack trace:\n#0 /tmp/tmp88vin80p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp88vin80p.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjriptqp1.php:24\nStack trace:\n#0 /tmp/tmpjriptqp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjriptqp1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0l0vp6k.php:25\nStack trace:\n#0 /tmp/tmpg0l0vp6k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg0l0vp6k.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $n) {\n        if(!isset($result[$n])) {\n            $result[$n] = 1;\n        } else {\n            $result[$n]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl5i27mw.php:24\nStack trace:\n#0 /tmp/tmpyl5i27mw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyl5i27mw.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if (!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqptix7h.php:25\nStack trace:\n#0 /tmp/tmpsqptix7h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsqptix7h.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if (!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjriptqp1.php:24\nStack trace:\n#0 /tmp/tmpjriptqp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjriptqp1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $n) {\n        if(!isset($seen[$n])) {\n            $seen[$n] = true;\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul2nw0vj.php:25\nStack trace:\n#0 /tmp/tmpul2nw0vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpul2nw0vj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51rz4hsy.php:24\nStack trace:\n#0 /tmp/tmp51rz4hsy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp51rz4hsy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $value) {\n        if(!isset($seen[$value])) {\n            $seen[$value] = true;\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3zgxpta.php:25\nStack trace:\n#0 /tmp/tmpm3zgxpta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm3zgxpta.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    $seen = array();\n    foreach($numbers as $i) {\n        if(!isset($seen[$i])) {\n            $seen[$i] = true;\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjbk91_z.php:24\nStack trace:\n#0 /tmp/tmpgjbk91_z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjbk91_z.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// From an array of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n    $result = array();\n    foreach($numbers as $value) {\n        if(!isset($result[$value])) {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292951,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns9msltj.php:24\nStack trace:\n#0 /tmp/tmpns9msltj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns9msltj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_724_power_base_sum",
  "language": "rs",
  "prompt": "/// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfn power_base_sum(base: isize, power: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = power_base_sum;\n    assert_eq!(candidate(2, 100), 115);\n    assert_eq!(candidate(8, 10), 37);\n    assert_eq!(candidate(8, 15), 62);\n    assert_eq!(candidate(3, 3), 9);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    let mut power_base = base.pow(power);\n    while power_base > 0 {\n        sum += power_base % 10;\n        power_base /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut num = base.pow(power);\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut power_base = base.pow(power as u32);\n    while power_base > 0 {\n        sum += power_base % 10;\n        power_base /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut num = base.pow(power);\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut num = base.pow(power);\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut power_base = base.pow(power);\n    while power_base > 0 {\n        sum += power_base % 10;\n        power_base /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut num = base.pow(power);\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base = base;\n    for _ in 0..power {\n        base = base.abs();\n        while base > 0 {\n            sum += base % 10;\n            base /= 10;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut power_base = base.pow(power);\n    while power_base > 0 {\n        sum += power_base % 10;\n        power_base /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut base_power = base.pow(power);\n    while base_power > 0 {\n        sum += base_power % 10;\n        base_power /= 10;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut num = base.pow(power);\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum"
  ]
}
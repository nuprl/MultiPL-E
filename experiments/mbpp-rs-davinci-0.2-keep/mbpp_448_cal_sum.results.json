{
  "name": "mbpp_448_cal_sum",
  "language": "rs",
  "prompt": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_num[0];\n        perrin_num[0] = perrin_num[1];\n        perrin_num[1] = perrin_num[2];\n        perrin_num[2] = perrin_num[0] + perrin_num[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp9poc191u.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpkb2ynwqy.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpkb2ynwqy.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpkb2ynwqy.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next_number = perrin_numbers[0] + perrin_numbers[2];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(next_number);\n        sum += next_number;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmp0tsux814.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 3] + p[i - 2]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:16\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:27\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let perrin_number = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(perrin_number);\n        sum += perrin_number;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmp9ttukdxp.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        perrin.push(perrin[perrin.len() - 3] + perrin[perrin.len() - 2]);\n    }\n    perrin.iter().sum()\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpsxhqt5yb.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `141`,\n right: `49`', /tmp/tmpfu_30o1s.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `141`,\n right: `49`', /tmp/tmpfu_30o1s.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `138`,\n right: `49`', /tmp/tmpnq9lg_fd.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[2];\n        sum += tmp;\n        perrin.remove(0);\n        perrin.push(tmp);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmpgflljau5.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `138`,\n right: `49`', /tmp/tmpnq9lg_fd.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = sum;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `51`,\n right: `49`', /tmp/tmp588mpvwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        p.push(p[p.len() - 2] + p[p.len() - 3]);\n    }\n    for i in p {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpyl8l295g.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_nums[0] + perrin_nums[1];\n        perrin_nums.push(next_num);\n        perrin_nums.remove(0);\n        sum += next_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpo3z5k08t.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut p = vec![3, 0, 2];\n    let mut i = 3;\n    while i < n {\n        let p_i = p[i - 2] + p[i - 3];\n        p.push(p_i);\n        i += 1;\n    }\n    p.iter().fold(0, |acc, x| acc + x)\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpt1n44k3l.rs:6:19\n  |\n6 |         let p_i = p[i - 2] + p[i - 3];\n  |                   ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpt1n44k3l.rs:6:30\n  |\n6 |         let p_i = p[i - 2] + p[i - 3];\n  |                              ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin = vec![3, 0, 2];\n    let mut sum = 5;\n    for _ in 3..n {\n        perrin.push(perrin[1] + perrin[0]);\n        sum += perrin[2];\n        perrin.remove(0);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `29`,\n right: `49`', /tmp/tmpsta5tjvk.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpiezqen7a.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + temp;\n        perrin_numbers[0] = temp;\n        sum += perrin_numbers[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpvy1xaaa4.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums = vec![perrin_nums[1], perrin_nums[2], perrin_nums[0] + perrin_nums[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpmr6bm14b.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin: Vec<isize> = vec![3, 0, 2];\n    let mut sum: isize = 5;\n    for _ in 3..n {\n        let temp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + temp;\n        perrin[0] = temp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmp5xvtfktg.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_nums[0] + perrin_nums[1];\n        perrin_nums.remove(0);\n        perrin_nums.push(next_num);\n        sum += next_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmp2msg0efj.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmps3shmd9e.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = c;\n        c = b + c;\n        b = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `93`,\n right: `49`', /tmp/tmpd8rk0hgp.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let tmp = a;\n        a = c;\n        c = b + c;\n        b = tmp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `93`,\n right: `49`', /tmp/tmplxc26ban.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 2] + perrin[i - 3]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp6uk_et6w.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 2] + perrin[i - 3]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp6uk_et6w.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 2] + perrin[i - 3]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp6uk_et6w.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut v = vec![3, 0, 2];\n    for _ in 3..n {\n        v.push(v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v.iter().sum()\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpty0a421y.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin = vec![perrin[1], perrin[2], perrin[0] + perrin[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpcdqithcs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmp_9e70214.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next_number = perrin_numbers[(i - 2) as usize] + perrin_numbers[(i - 3) as usize];\n        perrin_numbers.push(next_number);\n    }\n    for i in 0..n {\n        sum += perrin_numbers[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmp7nvyvyli.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpcn2874nm.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin[0] + perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = temp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmppu39dx5k.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpghb2it91.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `138`,\n right: `49`', /tmp/tmpnq9lg_fd.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = c;\n        c = b + c;\n        b = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `93`,\n right: `49`', /tmp/tmpd8rk0hgp.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = c;\n        c = b + c;\n        b = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `93`,\n right: `49`', /tmp/tmpd8rk0hgp.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers = vec![perrin_numbers[1], perrin_numbers[2], perrin_numbers[0] + perrin_numbers[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `63`,\n right: `49`', /tmp/tmp4i9svw0q.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 0..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `604`,\n right: `49`', /tmp/tmpr79eanfv.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n        sum += perrin_num[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp7e04asz2.rs:6:25\n  |\n6 |         perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n  |                         ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp7e04asz2.rs:6:45\n  |\n6 |         perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n  |                                             ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp7e04asz2.rs:7:16\n  |\n7 |         sum += perrin_num[i];\n  |                ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let x = perrin[i - 3] + perrin[i - 2];\n        perrin.push(x);\n        sum += x;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp94d_i0nk.rs:6:17\n  |\n6 |         let x = perrin[i - 3] + perrin[i - 2];\n  |                 ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp94d_i0nk.rs:6:33\n  |\n6 |         let x = perrin[i - 3] + perrin[i - 2];\n  |                                 ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    if n == 0 {\n        return 3;\n    }\n    if n == 1 {\n        return 0;\n    }\n    if n == 2 {\n        return 2;\n    }\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    let mut sum = a + b + c;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = sum;\n        sum = a + b + c;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `160`,\n right: `49`', /tmp/tmptfv1ku5w.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `141`,\n right: `49`', /tmp/tmpfu_30o1s.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        sum += tmp;\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpyyp6832n.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n        sum += perrin_num[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp7e04asz2.rs:6:25\n  |\n6 |         perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n  |                         ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp7e04asz2.rs:6:45\n  |\n6 |         perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n  |                                             ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp7e04asz2.rs:7:16\n  |\n7 |         sum += perrin_num[i];\n  |                ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpkodjfthr.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let mut temp = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = temp;\n        sum += temp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpm0xdpdp3.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmp_9e70214.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin_numbers = vec![3, 0, 2];\n    let mut sum = 5;\n    for i in 3..n {\n        let perrin_number = perrin_numbers[(i - 3) as usize] + perrin_numbers[(i - 2) as usize];\n        perrin_numbers.push(perrin_number);\n        sum += perrin_number;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmp1t52q6h1.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmps3shmd9e.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += p[0];\n        p[0] = p[1];\n        p[1] = p[2];\n        p[2] = p[0] + p[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpb3d3mejm.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = temp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpfsayen5w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:9:16\n  |\n9 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin_numbers = vec![3, 0, 2];\n    let mut sum = 2;\n    for _ in 3..n {\n        let next_number = perrin_numbers[0] + perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = next_number;\n        sum += next_number;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `72`,\n right: `49`', /tmp/tmpug0s6gd9.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpiezqen7a.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut p = perrin(i);\n    while p <= n {\n        sum += p;\n        i += 1;\n        p = perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpm8av31q6.rs:5:17\n  |\n5 |     let mut p = perrin(i);\n  |                 ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpm8av31q6.rs:9:13\n  |\n9 |         p = perrin(i);\n  |             ^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_num[0];\n        perrin_num[0] = perrin_num[1];\n        perrin_num[1] = perrin_num[2];\n        perrin_num[2] = perrin_num[0] + perrin_num[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp9poc191u.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    p.iter().sum()\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpefbbhsyn.rs:5:16\n  |\n5 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpefbbhsyn.rs:5:27\n  |\n5 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpuulihvwp.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 2] + perrin[i - 3]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp6uk_et6w.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 2] + perrin[i - 3]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp6uk_et6w.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 2] + perrin[i - 3]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp6uk_et6w.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut pre = 0;\n    let mut cur = 2;\n    let mut next = 3;\n    for i in 0..n {\n        sum += cur;\n        pre = cur;\n        cur = next;\n        next = pre + cur;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `230`,\n right: `49`', /tmp/tmp_l020c8p.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    let mut p = vec![0, 0, 2];\n    for i in 3..n + 1 {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    p[n as usize]\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpfcvwl69n.rs:8:16\n  |\n8 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpfcvwl69n.rs:8:27\n  |\n8 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `141`,\n right: `49`', /tmp/tmpfu_30o1s.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    let mut i = 3;\n    while i < n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp0e5mjlwz.rs:7:16\n  |\n7 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp0e5mjlwz.rs:7:27\n  |\n7 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp0e5mjlwz.rs:8:16\n  |\n8 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 3..n {\n        let last_3_sum = perrin_numbers.iter().sum();\n        perrin_numbers.push(last_3_sum);\n        perrin_numbers.remove(0);\n    }\n    for i in perrin_numbers {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `160`,\n right: `49`', /tmp/tmpp7pyfbn0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        let a = perrin_numbers[0];\n        let b = perrin_numbers[1];\n        let c = perrin_numbers[2];\n        perrin_numbers[0] = b;\n        perrin_numbers[1] = c;\n        perrin_numbers[2] = a + b;\n        sum += perrin_numbers[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `83`,\n right: `49`', /tmp/tmpawc05nhn.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpkodjfthr.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n    let mut c = 2;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `87`,\n right: `49`', /tmp/tmpdr5k7kd0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin_numbers = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp01t1d6f6.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp01t1d6f6.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp01t1d6f6.rs:7:16\n  |\n7 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut p = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp_3dszulv.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp_3dszulv.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp_3dszulv.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let tmp = a;\n        a = c;\n        c = b + c;\n        b = tmp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `93`,\n right: `49`', /tmp/tmplxc26ban.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_nums[0] + perrin_nums[2];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = next_num;\n        sum += next_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmpttgxi9my.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp1pchhyio.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp1pchhyio.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![0, 3, 0, 2];\n    for i in 4..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpina33v7h.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpina33v7h.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpina33v7h.rs:7:16\n  |\n7 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[2];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpcnv58v21.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpyr8zwb8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        let next = p[0] + p[1];\n        sum += next;\n        p.remove(0);\n        p.push(next);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmp8u30_kas.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpkb2ynwqy.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpkb2ynwqy.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpkb2ynwqy.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:7:16\n  |\n7 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmps3shmd9e.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers = vec![perrin_numbers[0] + perrin_numbers[1], perrin_numbers[0], perrin_numbers[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `264`,\n right: `49`', /tmp/tmpqoifh0d_.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpiezqen7a.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin: Vec<isize> = vec![3, 0, 2];\n    let mut sum = 2;\n    for _ in 3..n {\n        let tmp = perrin[2];\n        perrin[2] = perrin[1];\n        perrin[1] = perrin[0];\n        perrin[0] = tmp + perrin[2];\n        sum += perrin[0];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `35`,\n right: `49`', /tmp/tmp3sllnx8e.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
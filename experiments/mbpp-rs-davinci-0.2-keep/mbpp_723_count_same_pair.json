{
  "name": "mbpp_723_count_same_pair",
  "language": "rs",
  "prompt": "/// The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.\nfn count_same_pair(nums1: Vec<isize>, nums2: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_723_count_same_pair.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = count_same_pair;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7, 8], vec![2, 2, 3, 1, 2, 6, 7, 9]), 4);\n    assert_eq!(candidate(vec![0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8], vec![2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]), 11);\n    assert_eq!(candidate(vec![2, 4, -6, -9, 11, -12, 14, -5, 17], vec![2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]), 1);\n    assert_eq!(candidate(vec![0, 1, 1, 2], vec![0, 1, 2, 2]), 3);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for (i, j) in nums1.iter().zip(nums2.iter()) {\n        if i == j {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for (i, j) in nums1.iter().zip(nums2.iter()) {\n        if i == j {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for (i, j) in nums1.iter().zip(nums2.iter()) {\n        if i == j {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for (i, j) in nums1.iter().zip(nums2.iter()) {\n        if i == j {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for (i, j) in nums1.iter().zip(nums2.iter()) {\n        if i == j {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for (i, j) in nums1.iter().zip(nums2.iter()) {\n        if i == j {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for (i, j) in nums1.iter().zip(nums2.iter()) {\n        if i == j {\n            count += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..nums1.len() {\n        if nums1[i] == nums2[i] {\n            count += 1;\n        }\n    }\n    count"
  ]
}
{
  "name": "mbpp_591_swap_List",
  "language": "rs",
  "prompt": "/// Write a python function to interchange the first and last elements in a list.\nfn swap_List(newList: Vec<isize>) -> Vec<isize> {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_591_swap_List.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = swap_List;\n    assert_eq!(candidate(vec![12, 35, 9, 56, 24]), vec![24, 35, 9, 56, 12]);\n    assert_eq!(candidate(vec![1, 2, 3]), vec![3, 2, 1]);\n    assert_eq!(candidate(vec![4, 5, 6]), vec![6, 5, 4]);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    return newList;",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut list = newList.clone();\n    let first = list[0];\n    let last = list[list.len() - 1];\n    list[0] = last;\n    list[list.len() - 1] = first;\n    list",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let last = newList.len() - 1;\n    newList.swap(0, last);\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let last = newList.len() - 1;\n    let temp = newList[0];\n    newList[0] = newList[last];\n    newList[last] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    return newList;",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let len = newList.len();\n    let temp = newList[0];\n    newList[0] = newList[len - 1];\n    newList[len - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList.remove(0);\n    let last = newList.pop().unwrap();\n    newList.insert(0, last);\n    newList.push(first);\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut list = newList;\n    let temp = list[0];\n    list[0] = list[list.len() - 1];\n    list[list.len() - 1] = temp;\n    list",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let temp = newList[0];\n    newList[0] = newList[newList.len() - 1];\n    newList[newList.len() - 1] = temp;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList",
    "    let mut newList = newList;\n    let first = newList[0];\n    let last = newList[newList.len() - 1];\n    newList[0] = last;\n    newList[newList.len() - 1] = first;\n    newList"
  ]
}
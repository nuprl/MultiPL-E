{
  "name": "mbpp_731_lateralsurface_cone",
  "language": "rs",
  "prompt": "/// Write a function to find the lateral surface area of a cone given radius r and the height h.\nfn lateralsurface_cone(r: isize, h: isize) -> f64 {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_731_lateralsurface_cone.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = lateralsurface_cone;\n    assert_eq!(candidate(5, 12), 204.20352248333654);\n    assert_eq!(candidate(10, 15), 566.3586699569488);\n    assert_eq!(candidate(19, 17), 1521.8090132193388);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    let lateral_surface = pi * r as f64 * slant_height;\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    pi * r as f64 * l.sqrt()",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    pi * r as f64 * slant_height as f64",
    "    let pi: f64 = 3.14;\n    let l: f64 = (r as f64 * h as f64).sqrt();\n    pi * l * (r as f64)",
    "    let pi: f64 = 3.14;\n    let lsa = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    let lateral_surface = pi * r as f64 * slant_height;\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let slant_height = ((r as f64).powi(2) + (h as f64).powi(2)).sqrt();\n    pi * r as f64 * slant_height",
    "    let pi = std::f64::consts::PI;\n    let s = (r * h) as f64;\n    let lsa = pi * s;\n    lsa",
    "    let pi: f64 = 3.14;\n    let slant_height = ((r as f64).powi(2) + (h as f64).powi(2)).sqrt();\n    pi * r as f64 * slant_height",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l"
  ]
}
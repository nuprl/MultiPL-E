{
  "name": "mbpp_448_cal_sum",
  "language": "rs",
  "prompt": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_num[0];\n        perrin_num[0] = perrin_num[1];\n        perrin_num[1] = perrin_num[2];\n        perrin_num[2] = perrin_num[0] + perrin_num[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next_number = perrin_numbers[0] + perrin_numbers[2];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(next_number);\n        sum += next_number;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 3] + p[i - 2]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let perrin_number = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(perrin_number);\n        sum += perrin_number;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        perrin.push(perrin[perrin.len() - 3] + perrin[perrin.len() - 2]);\n    }\n    perrin.iter().sum()",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[2];\n        sum += tmp;\n        perrin.remove(0);\n        perrin.push(tmp);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = sum;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![0, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        p.push(p[p.len() - 2] + p[p.len() - 3]);\n    }\n    for i in p {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_nums[0] + perrin_nums[1];\n        perrin_nums.push(next_num);\n        perrin_nums.remove(0);\n        sum += next_num;\n    }\n    sum",
    "    let mut p = vec![3, 0, 2];\n    let mut i = 3;\n    while i < n {\n        let p_i = p[i - 2] + p[i - 3];\n        p.push(p_i);\n        i += 1;\n    }\n    p.iter().fold(0, |acc, x| acc + x)",
    "    let mut perrin = vec![3, 0, 2];\n    let mut sum = 5;\n    for _ in 3..n {\n        perrin.push(perrin[1] + perrin[0]);\n        sum += perrin[2];\n        perrin.remove(0);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + temp;\n        perrin_numbers[0] = temp;\n        sum += perrin_numbers[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums = vec![perrin_nums[1], perrin_nums[2], perrin_nums[0] + perrin_nums[1]];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut perrin: Vec<isize> = vec![3, 0, 2];\n    let mut sum: isize = 5;\n    for _ in 3..n {\n        let temp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + temp;\n        perrin[0] = temp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_nums[0] + perrin_nums[1];\n        perrin_nums.remove(0);\n        perrin_nums.push(next_num);\n        sum += next_num;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = c;\n        c = b + c;\n        b = t;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let tmp = a;\n        a = c;\n        c = b + c;\n        b = tmp;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 2] + perrin[i - 3]);\n        sum += perrin[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut v = vec![3, 0, 2];\n    for _ in 3..n {\n        v.push(v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v.iter().sum()",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin = vec![perrin[1], perrin[2], perrin[0] + perrin[1]];\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next_number = perrin_numbers[(i - 2) as usize] + perrin_numbers[(i - 3) as usize];\n        perrin_numbers.push(next_number);\n    }\n    for i in 0..n {\n        sum += perrin_numbers[i as usize];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = tmp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin[0] + perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = temp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = c;\n        c = b + c;\n        b = t;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = c;\n        c = b + c;\n        b = t;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers = vec![perrin_numbers[1], perrin_numbers[2], perrin_numbers[0] + perrin_numbers[1]];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 0..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n        sum += perrin_num[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let x = perrin[i - 3] + perrin[i - 2];\n        perrin.push(x);\n        sum += x;\n    }\n    sum",
    "    if n == 0 {\n        return 3;\n    }\n    if n == 1 {\n        return 0;\n    }\n    if n == 2 {\n        return 2;\n    }\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    let mut sum = a + b + c;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = sum;\n        sum = a + b + c;\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        sum += tmp;\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_num.push(perrin_num[i - 3] + perrin_num[i - 2]);\n        sum += perrin_num[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut perrin = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let mut temp = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = temp;\n        sum += temp;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut perrin_numbers = vec![3, 0, 2];\n    let mut sum = 5;\n    for i in 3..n {\n        let perrin_number = perrin_numbers[(i - 3) as usize] + perrin_numbers[(i - 2) as usize];\n        perrin_numbers.push(perrin_number);\n        sum += perrin_number;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += p[0];\n        p[0] = p[1];\n        p[1] = p[2];\n        p[2] = p[0] + p[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = temp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i];\n    }\n    sum",
    "    let mut perrin_numbers = vec![3, 0, 2];\n    let mut sum = 2;\n    for _ in 3..n {\n        let next_number = perrin_numbers[0] + perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = next_number;\n        sum += next_number;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut i = 0;\n    let mut p = perrin(i);\n    while p <= n {\n        sum += p;\n        i += 1;\n        p = perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_num = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_num[0];\n        perrin_num[0] = perrin_num[1];\n        perrin_num[1] = perrin_num[2];\n        perrin_num[2] = perrin_num[0] + perrin_num[1];\n    }\n    sum",
    "    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    p.iter().sum()",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 2] + perrin[i - 3]);\n        sum += perrin[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut pre = 0;\n    let mut cur = 2;\n    let mut next = 3;\n    for i in 0..n {\n        sum += cur;\n        pre = cur;\n        cur = next;\n        next = pre + cur;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum",
    "    if n < 0 {\n        return 0;\n    }\n    let mut p = vec![0, 0, 2];\n    for i in 3..n + 1 {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    p[n as usize]",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    let mut i = 3;\n    while i < n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n        i += 1;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 3..n {\n        let last_3_sum = perrin_numbers.iter().sum();\n        perrin_numbers.push(last_3_sum);\n        perrin_numbers.remove(0);\n    }\n    for i in perrin_numbers {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        let a = perrin_numbers[0];\n        let b = perrin_numbers[1];\n        let c = perrin_numbers[2];\n        perrin_numbers[0] = b;\n        perrin_numbers[1] = c;\n        perrin_numbers[2] = a + b;\n        sum += perrin_numbers[2];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut perrin = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut a = 0;\n    let mut b = 1;\n    let mut c = 2;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum",
    "    let mut perrin_numbers = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum",
    "    let mut p = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let tmp = a;\n        a = c;\n        c = b + c;\n        b = tmp;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_nums[0] + perrin_nums[2];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = next_num;\n        sum += next_num;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i as usize];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![0, 3, 0, 2];\n    for i in 4..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[2];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        let next = p[0] + p[1];\n        sum += next;\n        p.remove(0);\n        p.push(next);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers = vec![perrin_numbers[0] + perrin_numbers[1], perrin_numbers[0], perrin_numbers[1]];\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum",
    "    let mut perrin: Vec<isize> = vec![3, 0, 2];\n    let mut sum = 2;\n    for _ in 3..n {\n        let tmp = perrin[2];\n        perrin[2] = perrin[1];\n        perrin[1] = perrin[0];\n        perrin[0] = tmp + perrin[2];\n        sum += perrin[0];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum",
    "    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum"
  ]
}
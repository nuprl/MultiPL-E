{
  "name": "mbpp_392_get_max_sum",
  "language": "rs",
  "prompt": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum + n\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpxeflnz2f.rs:11:19\n   |\n11 |         max_sum = max(max_sum, get_max_sum(n / i));\n   |                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let temp = get_max_sum(n / i);\n        if temp > sum {\n            sum = temp;\n        }\n        i += 1;\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpjacazu2c.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = 0;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max {\n            max = sum;\n        }\n    }\n    max + n\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `115`,\n right: `106`', /tmp/tmpauwxgsku.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpedtaglyf.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpqgpylap4.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i) * i;\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp6qix142f.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 2 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpjhkhe703.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut divisors = vec![2, 3, 4, 5];\n    for divisor in divisors {\n        sum = std::cmp::max(sum, get_max_sum(n / divisor));\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmps0taxbvn.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut n = n;\n    while n > 0 {\n        let n_2 = n / 2;\n        let n_3 = n / 3;\n        let n_4 = n / 4;\n        let n_5 = n / 5;\n        let max_sum = get_max_sum(n_2) + get_max_sum(n_3) + get_max_sum(n_4) + get_max_sum(n_5);\n        if max_sum > sum {\n            sum = max_sum;\n        }\n        n = n - 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n\n    if n == 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpl9mow_jz.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = std::cmp::max(max_sum, get_max_sum(n / i));\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpil_jxgx_.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmplaewvscm.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpiy15jhq5.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    let mut cache = vec![0; (n + 1) as usize];\n    cache[0] = 0;\n    cache[1] = 1;\n    for i in 2..=n {\n        cache[i as usize] = std::cmp::max(\n            cache[(i / 2) as usize] + cache[(i / 3) as usize] + cache[(i / 4) as usize],\n            i,\n        );\n    }\n    cache[n as usize]\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `68`,\n right: `106`', /tmp/tmppel9ch3p.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpt4hc8nx8.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpssm7_vyg.rs:11:19\n   |\n11 |         max_sum = max(max_sum, get_max_sum(n / i));\n   |                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp8y1cs5ie.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmplaewvscm.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp228zglf3.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpsl3i777b.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpaf5dsuj2.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let temp = get_max_sum(n / i);\n        if temp > sum {\n            sum = temp;\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpgr3ghi5z.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpao7y5xqe.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    if n <= 5 {\n        return n;\n    }\n\n    let mut max_sum = n;\n\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpkeh5rtgo.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum: isize = n;\n    let mut sum: isize = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpfkt5oe1z.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum: isize = n;\n    let mut sum: isize = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpfkt5oe1z.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max {\n            max = sum;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp1ou35kne.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpgnpfbxqx.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        return sum;\n    }\n    return n;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut result = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > result {\n            result = sum;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp6e_3i01y.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut dp = vec![0; (n + 1) as usize];\n    dp[1] = 1;\n    for i in 2..=n {\n        let mut max_sum = i;\n        for j in 2..=5 {\n            if i % j == 0 {\n                max_sum = max(max_sum, dp[(i / j) as usize]);\n            }\n        }\n        dp[i as usize] = max_sum;\n    }\n    dp[n as usize]\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpcw6_v7eq.rs:12:27\n   |\n12 |                 max_sum = max(max_sum, dp[(i / j) as usize]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        sum = std::cmp::max(sum, get_max_sum(n / i));\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpg3y9w4j1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut cache = vec![0; n as usize + 1];\n    cache[0] = 0;\n    cache[1] = 1;\n\n    for i in 2..=n as usize {\n        let mut max = cache[i - 1];\n        if i % 2 == 0 {\n            max = max.max(cache[i / 2]);\n        }\n        if i % 3 == 0 {\n            max = max.max(cache[i / 3]);\n        }\n        if i % 4 == 0 {\n            max = max.max(cache[i / 4]);\n        }\n        if i % 5 == 0 {\n            max = max.max(cache[i / 5]);\n        }\n        cache[i] = max + i as isize;\n    }\n\n    cache[n as usize]\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1830`,\n right: `106`', /tmp/tmp_1nyqgrb.rs:33:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpiy15jhq5.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    let mut i = 2;\n    while i <= 5 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpugf2o8ey.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp1o_nmi9c.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 12 {\n        return n;\n    }\n    let mut max = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if max < sum {\n            max = sum;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpw1zuqa1i.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut n_div_2 = n / 2;\n    let mut n_div_3 = n / 3;\n    let mut n_div_4 = n / 4;\n    let mut n_div_5 = n / 5;\n    sum += get_max_sum(n_div_2);\n    sum += get_max_sum(n_div_3);\n    sum += get_max_sum(n_div_4);\n    sum += get_max_sum(n_div_5);\n    return sum;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `394`,\n right: `106`', /tmp/tmpseoyi5b4.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n\n    if n == 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp6sh0i_9s.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpedtaglyf.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3q3q4w47.rs:10:23\n   |\n10 |             max_sum = max(max_sum, get_max_sum(n / i));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpssm7_vyg.rs:11:19\n   |\n11 |         max_sum = max(max_sum, get_max_sum(n / i));\n   |                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp6x0q5mcy.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i) + get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpl9xaa46t.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = std::cmp::max(sum, get_max_sum(n / i));\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp9xnea6qy.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp6x0q5mcy.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = n;\n    for i in 2..6 {\n        max = max.max(get_max_sum(n / i) + get_max_sum(n % i));\n    }\n    max\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4yqg43pk.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        return sum;\n    }\n    return n;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = std::cmp::max(max_sum, get_max_sum(n / i));\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7uwp6jtm.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp8y1cs5ie.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpg10vsufn.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpg10vsufn.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpiy15jhq5.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp8yhe0dpa.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3q3q4w47.rs:10:23\n   |\n10 |             max_sum = max(max_sum, get_max_sum(n / i));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut n = n;\n    for i in 2..=5 {\n        let temp = get_max_sum(n / i);\n        if temp > 0 {\n            sum += temp;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `394`,\n right: `106`', /tmp/tmpfqxkqzd4.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpijmr4l_f.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 11 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmptnjydzi7.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            let sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp_xv2ts9j.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpuwhg15ml.rs:11:19\n   |\n11 |         max_sum = max(max_sum, get_max_sum(n / i));\n   |                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut sum2 = get_max_sum(n / 2);\n    let mut sum3 = get_max_sum(n / 3);\n    let mut sum4 = get_max_sum(n / 4);\n    let mut sum5 = get_max_sum(n / 5);\n    if sum2 > sum {\n        sum = sum2;\n    }\n    if sum3 > sum {\n        sum = sum3;\n    }\n    if sum4 > sum {\n        sum = sum4;\n    }\n    if sum5 > sum {\n        sum = sum5;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4ysppoh9.rs:28:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpedtaglyf.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut max_sum_cache = vec![0; (n + 1) as usize];\n\n    for i in 1..=n {\n        let mut sum = 0;\n        for j in 2..=5 {\n            if i % j == 0 {\n                sum += max_sum_cache[(i / j) as usize];\n            }\n        }\n\n        if sum > i {\n            max_sum_cache[i as usize] = sum;\n        } else {\n            max_sum_cache[i as usize] = i;\n        }\n\n        if max_sum_cache[i as usize] > max_sum {\n            max_sum = max_sum_cache[i as usize];\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `79`,\n right: `106`', /tmp/tmp1o391_6s.rs:34:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpq6dxgcty.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i) + get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp756rj5gf.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum += get_max_sum(n / i);\n        }\n    }\n\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `79`,\n right: `106`', /tmp/tmpg5kt6ybt.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpuwhg15ml.rs:11:19\n   |\n11 |         max_sum = max(max_sum, get_max_sum(n / i));\n   |                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    return max_sum;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp0p26zee5.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp1o4dei53.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpeufpcxek.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut temp = 0;\n    for i in 2..6 {\n        temp = get_max_sum(n / i);\n        if temp > sum {\n            sum = temp;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpggp6gceo.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut n = n;\n    while n > 5 {\n        let mut temp = n / 2 + n / 3 + n / 4 + n / 5;\n        if temp > n {\n            sum += temp;\n        }\n        n = temp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'attempt to add with overflow', /tmp/tmphh3at6wt.rs:11:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 1..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpirwiond5.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        sum = std::cmp::max(sum, get_max_sum(n / i));\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmputvqd9cq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = std::cmp::max(max_sum, get_max_sum(n / i) + get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmppw4g3fiq.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut n = n;\n    while n > 0 {\n        let n2 = n / 2;\n        let n3 = n / 3;\n        let n4 = n / 4;\n        let n5 = n / 5;\n        let max = get_max_sum(n2) + get_max_sum(n3) + get_max_sum(n4) + get_max_sum(n5);\n        if max > sum {\n            sum = max;\n        }\n        n -= 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 1..n {\n        let sum = get_max_sum(i) + get_max_sum(n - i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123022,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = std::cmp::max(max_sum, get_max_sum(n / i));\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpulptx050.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp5j5_wrpy.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpedtaglyf.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i) + get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpl9xaa46t.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 1..=5 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123023,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = vec![0; (n + 1) as usize];\n    max_sum[1] = 1;\n    for i in 2..=n {\n        let mut sum = 0;\n        for j in 2..=5 {\n            if i % j == 0 {\n                sum += max_sum[(i / j) as usize];\n            }\n        }\n        max_sum[i as usize] = std::cmp::max(sum, i);\n    }\n    max_sum[n as usize]\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `79`,\n right: `106`', /tmp/tmp1a1nvfjz.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp8y1cs5ie.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum: isize = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmprtc9wj_u.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpttgwkv64.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp6chp826g.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut n = n;\n    while n > 0 {\n        let sum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        n -= 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 11 {\n        return n;\n    }\n\n    let mut max_sum = 0;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum + n\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `112`,\n right: `106`', /tmp/tmpq_hx6gru.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut cache = vec![0; (n + 1) as usize];\n    cache[0] = 0;\n    cache[1] = 1;\n    for i in 2..n + 1 {\n        cache[i as usize] = std::cmp::max(\n            cache[(i / 2) as usize] + cache[(i / 3) as usize] + cache[(i / 4) as usize],\n            i,\n        );\n    }\n    return cache[n as usize];\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `68`,\n right: `106`', /tmp/tmp0olefuet.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp8y1cs5ie.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut cache = vec![0; n as usize + 1];\n    cache[0] = 0;\n    cache[1] = 1;\n    for i in 2..=n {\n        let mut max_sum = i;\n        for j in 1..=5 {\n            if i - j >= 0 {\n                max_sum = std::cmp::max(max_sum, cache[(i - j) as usize]);\n            }\n        }\n        cache[i as usize] = max_sum;\n    }\n    cache[n as usize]\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpb5rlo2db.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut cache = vec![0; n as usize + 1];\n    return get_max_sum_recursive(n, &mut cache);\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `get_max_sum_recursive` in this scope\n --> /tmp/tmp253uxhq_.rs:7:12\n  |\n7 |     return get_max_sum_recursive(n, &mut cache);\n  |            ^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp8y1cs5ie.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8b5t_n2m.rs:12:23\n   |\n12 |             max_sum = max(max_sum, get_max_sum(n / i));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max {\n            max = sum;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7pa_87dj.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpi4pc70fy.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpedtaglyf.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut max_sum = n;\n    for i in (1..=5).rev() {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123023,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpb4j89h45.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n\n    if n == 0 {\n        return 0;\n    }\n\n    if n == 1 {\n        return 1;\n    }\n\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i) * i);\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpbvqan07r.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i) * i);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 1..n {\n        max_sum = max(max_sum, get_max_sum(i) + get_max_sum(n - i));\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1a26h5mw.rs:14:19\n   |\n14 |         max_sum = max(max_sum, get_max_sum(i) + get_max_sum(n - i));\n   |                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpb4j89h45.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 2..6 {\n        max_sum = std::cmp::max(max_sum, get_max_sum(n / i));\n    }\n    max_sum + n\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `115`,\n right: `106`', /tmp/tmpzv684geh.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut memo = vec![0; (n + 1) as usize];\n    memo[0] = 0;\n    memo[1] = 1;\n    for i in 2..=n {\n        let mut max_sum = i;\n        for j in 2..=5 {\n            if i - j >= 0 {\n                max_sum = max(max_sum, memo[(i - j) as usize]);\n            }\n        }\n        memo[i as usize] = max_sum;\n    }\n    memo[n as usize]\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpfz55vwzh.rs:13:27\n   |\n13 |                 max_sum = max(max_sum, memo[(i - j) as usize]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    let mut cache = vec![0; (n + 1) as usize];\n    get_max_sum_recursive(n, &mut cache)\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `get_max_sum_recursive` in this scope\n --> /tmp/tmpf5s9j_lq.rs:4:5\n  |\n4 |     get_max_sum_recursive(n, &mut cache)\n  |     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = std::cmp::max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpnrwh52xs.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp6x0q5mcy.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7b67xjwx.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max = n;\n    let mut i = 2;\n    while i <= 5 {\n        let val = get_max_sum(n / i);\n        if val > max {\n            max = val;\n        }\n        i += 1;\n    }\n    max\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpx0kysa5w.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpt_yqrbs0.rs:9:23\n  |\n9 |             max_sum = max(max_sum, get_max_sum(n / i));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    if n > 1 {\n        max_sum = max(max_sum, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmptip1wkmc.rs:8:19\n  |\n8 |         max_sum = max(max_sum, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n  |                   ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut sum: isize = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        return sum;\n    }\n    return n;\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp7q6f3kr0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n < 2 {\n        return n;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        sum = std::cmp::max(sum, get_max_sum(n / i));\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcsf71wws.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpg10vsufn.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            let sum = get_max_sum(n / i) * i;\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123018,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpt3dbxgiu.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n < 2 {\n        return n;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = std::cmp::max(sum, get_max_sum(n / i));\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp9xnea6qy.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmp4jb6tt43.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpiy15jhq5.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `60`,\n right: `106`', /tmp/tmpcubbcsr_.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}